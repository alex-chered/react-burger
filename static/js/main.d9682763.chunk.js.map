{"version":3,"sources":["pages/auth-pages/auth-page.module.css","components/common/order-cards/order-card.module.css","components/base/mobile-menu/mobile-menu.module.css","components/home/constructor/constructor-component/constructor-component.module.css","components/toasts/toast/toast.module.css","components/home/constructor-mobile/constructor-component-mobile/constructor-component-mobile.module.css","components/base/side-menu/side-menu.module.css","components/common/app-header/app-header.module.css","components/icons/icon.module.css","components/base/button/button.module.css","components/base/header-menu/header-menu.module.css","components/common/mobile-header/mobile-header.module.css","components/common/order-details/order-details.module.css","components/common/order-info/order-info-desktop/order-info-desktop.module.css","components/common/order-info/order-info-mobile/order-info-mobile.module.css","components/home/ingredient-mobile/ingredient-mobile.module.css","pages/home-page/home-page-desktop/home-page-desktop.module.css","pages/home-page/home-page-mobile/home-page-mobile.module.css","pages/feed-page/feed-page-dashboard/feed-page-dashboard.module.css","components/auth/link-panel/link-panel.module.css","components/base/paragraph/paragraph.module.css","components/base/paragraph-digits/paragraph-digits.module.css","components/home/ingredient/ingredient.module.css","pages/feed-page/feed-page-mobile/feed-page-mobile.module.css","components/common/ingredient-details/ingredient-details-info-item/ingredient-details-info-item.module.css","components/common/ingredient-details/ingredient-details.module.css","pages/order-page/order-page.module.css","components/profile/profile-form/profile-form.module.css","pages/profile-order-page/profile-order-page.module.css","components/base/ingredient-logo/ingredient-logo.module.css","components/base/order-numbers/order-numbers.module.css","components/modals/modal/modal-content/modal-content.module.css","components/modals/modal/modal-content1/modal-content1.module.css","components/home/constructor/constructor-footer/constructor-footer.module.css","components/home/constructor-mobile/constructor-mobile.module.css","pages/feed-page/feed-page-desktop/feed-page-desktop.module.css","pages/profile-page/profile-page-orders-mobile/profile-page-orders-mobile.module.css","pages/ingredient-page/ingredient-page.module.css","components/base/price/price.module.css","components/base/tab/tab.module.css","components/common/app-loader/app-loader.module.css","components/common/order-info/order-info-item/order-info-item.module.css","components/common/order-info/order-info-total/order-info-total.module.css","components/common/swiper/swiper.module.css","layouts/mobile-layout/mobile-layout.module.css","components/home/ingredient-group/ingredient-group.module.css","components/modals/modal/modal-header/modal-header.module.css","components/modals/modal/modal.module.css","components/modals/constructor-modal/constructor-modal.module.css","components/home/constructor/constructor.module.css","components/home/constructor-footer-mobile/constructor-footer-mobile.module.css","pages/home-page/home-page-footer-mobile/home-page-footer-mobile.module.css","pages/profile-page/profile-page-orders-desktop/profile-page-orders-desktop.module.css","pages/profile-page/profile-page-form/profile-page-profile-form.module.css","pages/profile-page/profile-page-desktop/profile-page-desktop.module.css","pages/profile-page/profile-page-mobile/profile-page-mobile.module.css","components/base/container/container.module.css","components/base/overlay/overlay.module.css","components/base/background-image/background-image.module.css","components/base/spinner/spinner.module.css","components/base/order-status/order-status.module.css","components/base/not-found/not-found.module.css","components/base/footer/footer.module.css","components/common/app-message/app-message.module.css","components/common/order-info/order-info-list/order-info-list.module.css","components/common/swiper/action-delete/action-delete.module.css","components/toasts/toasts-container/toasts-container.module.css","layouts/main-layout/main-layout.module.css","components/home/ingredients-menu/ingredients-menu.module.css","components/home/constructor/constructor-top/constructor-top.module.css","components/home/constructor/constructor-middle/constructor-middle.module.css","components/home/constructor/constructor-bottom/constructor-bottom.module.css","components/modals/modal/modal-footer/modal-footer.module.css","components/modals/order-modal/order-modal-mobile/order-modal-mobile.module.css","components/modals/order-details-modal/order-details-modal.module.css","components/feed/feed-orders/feed-orders.module.css","components/feed/feed-menu/feed-menu.module.css","pages/feed-page/feed-page-orders/feed-page-orders.module.css","components/profile/profile-orders/profile-orders.module.css","pages/profile-page/profile-page-orders/profile-page-orders.module.css","pages/profile-page/profile-page-not-found/profile-page-not-found.module.css","pages/profile-page/profile-page-menu/profile-page-menu.module.css","components/auth/forms/auth-form.module.css","hocs/with-show.tsx","components/feed/feed-menu/feed-menu.tsx","components/base/container/container.tsx","components/base/paragraph/paragraph.tsx","components/base/paragraph-digits/paragraph-digits.tsx","components/base/button/button.tsx","components/base/header-menu/header-menu.tsx","components/icons/utils/get-class.ts","components/icons/icons/close-icon.tsx","components/icons/icon.props.ts","components/icons/icons/burger-icon.tsx","components/icons/icons/profile-icon.tsx","components/icons/icons/list-icon.tsx","components/icons/icons/currency-icon.tsx","components/icons/icons/delete-icon.tsx","components/icons/icons/lock-icon.tsx","components/icons/icons/drag-icon.tsx","components/icons/icons/error-icon.tsx","components/icons/icons/notification-icon.tsx","components/icons/icons/arrow-up-icon.tsx","components/icons/icons/arrow-down-icon.tsx","components/icons/icon.tsx","components/base/header-menu/header-menu-item.tsx","components/base/mobile-menu/mobile-menu.tsx","components/base/mobile-menu/mobile-menu-item.tsx","components/base/mobile-menu/mobile-menu-group.tsx","components/base/mobile-menu/mobile-menu-action.tsx","components/base/menu-burger-icon/menu-burger-icon.tsx","components/base/close-icon/close-icon.tsx","components/base/logo-icon/logo-icon.tsx","hooks/common/use-toggle.ts","hooks/common/use-ingredient-url.ts","services/base/http-base.service.ts","services/base/http-base-token.service.ts","services/base/socket-base.service.tsx","services/feed/feed-socket.service.ts","utils/format-number.ts","utils/format-date.ts","utils/convert-raw-orders-to-orders.ts","utils/get-ids-from-constructor.ts","services/app-settings/app-settings.service.ts","services/parameter-not-validated.error.ts","services/orders/errors/create-order.error.ts","services/orders/orders.service.ts","services/orders/orders-socket.service.ts","store/feed/feed-actions.ts","store/feed/feed-reducer.ts","store/feed/feed-selectors.ts","services/token/token.service.ts","store/orders/orders-actions.ts","store/orders/orders-reducer.ts","store/orders/orders-selectors.ts","store/common/common-actions.ts","store/common/common-reducer.ts","store/common/common-selectors.ts","services/auth/errors/auth.error.ts","services/auth/auth.service.ts","utils/instance-of-axios-error.ts","services/auth/auth-urls.ts","store/auth/auth-actions.ts","store/auth/auth-reducer.ts","store/auth/auth-selectors.ts","services/ingredients/types/ingredients.error.ts","services/ingredients/utils/convert-to-ingredient.ts","services/ingredients/ingredients.service.ts","store/ingredients/ingredients-actions.ts","store/ingredients/ingredients-reducer.ts","store/ingredients/ingredients-selectors.ts","store/burger-constructor/burger-constructor-actions.ts","store/burger-constructor/burger-constructor-reducer.ts","store/burger-constructor/burger-constructor-selectors.ts","store/toasts/toasts-actions.ts","store/toasts/toasts-reducer.ts","store/toasts/toasts-selectors.ts","store/root-reducer.ts","store/index.ts","middleware/feed-socket-middleware.ts","middleware/orders-socket-middleware.ts","components/base/overlay/overlay.tsx","hooks/common/use-key-press.ts","components/base/background-image/background-image.tsx","components/base/price/price.tsx","components/base/spinner/spinner.tsx","components/base/order-status/utils/get-status-text.ts","components/base/order-status/order-status.tsx","components/base/ingredient-logo/ingredient-logo.tsx","components/base/order-numbers/order-numbers.tsx","components/base/password-input/password-input.tsx","components/base/side-menu/side-menu.tsx","components/base/side-menu/auxiliary/side-menu-element.tsx","components/base/side-menu/auxiliary/side-menu-element-action.tsx","components/base/not-found/not-found.tsx","components/base/footer-portal/footer-portal.tsx","components/base/tab/tab.tsx","components/common/app-header/auxiliary/app-header-inner.tsx","components/common/app-header/auxiliary/app-header-left.tsx","components/common/app-header/auxiliary/app-header-main-menu.tsx","components/common/app-header/auxiliary/app-header-profile-menu.tsx","components/common/app-header/app-header.tsx","hooks/auth/use-auth.ts","hooks/toasts/use-toasts.ts","components/common/mobile-header/auxiliary/mobile-header-menu.tsx","components/common/mobile-header/mobile-header.tsx","components/common/app-loader/app-loader.tsx","components/common/app-message/app-message.tsx","components/common/ingredient-details/ingredient-details-info-item/ingredient-details-info-item.tsx","components/common/ingredient-details/ingredient-details.tsx","assets/images/done.png","components/common/order-details/order-details.tsx","hooks/feed/use-feed-socket.ts","hooks/feed/use-feed-actions.ts","components/common/order-cards/auxiliary/order-card-top.tsx","components/common/order-cards/auxiliary/order-card-bottom.tsx","components/common/order-cards/auxiliary/order-card-date.tsx","components/common/order-cards/auxiliary/order-card-description.tsx","components/common/order-cards/auxiliary/order-card-status.tsx","components/common/order-cards/auxiliary/order-card-preview.tsx","components/common/order-cards/feed-order-card.tsx","hooks/profile/use-profile-socket.ts","hooks/profile/use-profile-actions.ts","components/common/order-cards/profile-order-card.tsx","components/common/order-info/order-info-item/order-info-item.tsx","components/common/order-info/utils/prepare-ingredients.ts","components/common/order-info/order-info-list/order-info-list.tsx","components/common/order-info/order-info-total/order-info-total.tsx","components/common/order-info/order-info-desktop/order-info-desktop.tsx","components/common/order-info/order-info-mobile/order-info-mobile.tsx","components/common/order-info/order-info.tsx","components/common/preloader/preloader.tsx","components/common/swiper/action-delete/action-delete.tsx","components/common/swiper/swiper.tsx","components/toasts/toasts-container/toasts-container.tsx","components/toasts/toast/svg/check-circle-fill.tsx","components/toasts/toast/svg/info-fill.tsx","components/toasts/toast/svg/exclamation-triangle-fill.tsx","components/toasts/toast/toast.tsx","hooks/common/use-timer.ts","layouts/main-layout/main-layout.tsx","layouts/mobile-layout/mobile-layout.tsx","hooks/ingredients/use-ingredients-actions.ts","components/home/ingredient/ingredient.tsx","hooks/constructor/use-constructor-actions.ts","components/home/ingredient-mobile/ingredient-mobile.tsx","components/home/ingredient-group/ingredient-group.tsx","components/home/ingredients-menu/ingredients-menu.tsx","hooks/drag-drop/use-drop-ingredient-to-constructor.ts","components/home/constructor/constructor-component/constructor-component.tsx","components/home/constructor/constructor-top/constructor-top.tsx","components/home/constructor/constructor-swapper/constructor-swapper.tsx","hooks/drag-drop/use-sorting.ts","components/home/constructor/constructor-middle/constructor-middle.tsx","hooks/drag-drop/use-drop-ingredient-sorting.ts","hooks/common/use-swap-items-in-collection.ts","components/home/constructor/constructor-bottom/constructor-bottom.tsx","components/modals/modal/modal-header/modal-header.tsx","components/modals/modal/modal.tsx","components/modals/modal/modal-content/modal-content.tsx","components/modals/modal/modal-content1/modal-content1.tsx","components/modals/modal/modal-footer/modal-footer.tsx","components/modals/ingredient-details-modal/ingredient-details-modal.tsx","components/modals/order-modal/order-modal-mobile/order-modal-mobile.tsx","components/modals/order-modal/order-modal-desktop/order-modal-desktop.tsx","components/modals/order-modal/order-modal.tsx","components/modals/order-details-modal/order-details-modal.tsx","components/modals/constructor-modal/constructor-modal.tsx","hooks/orders/use-create-order.ts","utils/is-constructor-complete.ts","components/home/constructor/constructor-footer/constructor-footer.tsx","components/home/constructor/constructor.tsx","components/home/constructor-mobile/constructor-component-mobile/constructor-component-mobile.tsx","components/home/constructor-mobile/constructor-mobile.tsx","components/home/constructor-footer-mobile/constructor-footer-mobile.tsx","pages/home-page/hooks/use-scroll.ts","pages/home-page/home-page-desktop/home-page-desktop.tsx","pages/home-page/home-page-footer-mobile/home-page-footer-mobile.tsx","pages/home-page/home-page-mobile/home-page-mobile.tsx","pages/home-page/home-page.tsx","components/feed/feed-orders/feed-orders.tsx","components/feed/feed-total/feed-total.tsx","pages/feed-page/feed-page-dashboard/feed-page-dashboard.tsx","pages/feed-page/feed-page-orders/feed-page-orders.tsx","pages/feed-page/feed-page-mobile/feed-page-mobile.tsx","pages/feed-page/feed-page-desktop/feed-page-desktop.tsx","pages/feed-page/feed-page.tsx","pages/order-page/order-page.tsx","components/common/routes/protected-route.tsx","components/common/routes/not-for-logged-in-route.tsx","utils/validation/validate-input.ts","utils/validation/rules/are-valid-characters.ts","utils/validation/rules/is-password-correct-length.ts","utils/validation/rules/required.ts","utils/validation/rules/is-email.ts","components/profile/profile-form/profile-form.tsx","components/profile/profile-orders/profile-orders.tsx","pages/profile-page/profile-page-orders-desktop/profile-page-orders-desktop.tsx","pages/profile-page/profile-page-orders-mobile/profile-page-orders-mobile.tsx","pages/profile-page/profile-page-orders/profile-page-orders.tsx","pages/profile-page/profile-page-form/profile-page-profile-form.tsx","pages/profile-page/profile-page-not-found/profile-page-not-found.tsx","pages/profile-page/profile-routes.tsx","pages/profile-page/profile-page-menu/profile-page-menu.tsx","pages/profile-page/profile-page-desktop/profile-page-desktop.tsx","pages/profile-page/profile-page-mobile/profile-page-mobile.tsx","pages/profile-page/profile-page.tsx","pages/profile-order-page/profile-order-page.tsx","components/auth/forms/auth-form.tsx","components/auth/forms/login-form.tsx","components/auth/forms/registration-form.tsx","components/auth/forms/forget-password-form.tsx","components/auth/forms/reset-password-form.tsx","components/auth/link-panel/link-panel.tsx","components/auth/link-panel/link-panel-element.tsx","pages/auth-pages/login-page/login-page.tsx","pages/auth-pages/registration-page/registration-page.tsx","pages/auth-pages/forgot-password-page/forgot-password-page.tsx","pages/auth-pages/reset-password-page/reset-password-page.tsx","pages/ingredient-page/ingredient-page.tsx","pages/not-found-page/not-found-page.tsx","routes.tsx","index.tsx","hooks/common/use-window-size.ts"],"names":["module","exports","WrappedComponent","FeedMenuOptions","Container","props","children","className","classes","classNames","styles","Paragraph","text","size","style","onClick","role","ParagraphDigits","shadowed","Button","type","loading","disabled","classRoot","classButton","value","HeaderMenu","getClass","CloseIcon","xmlns","width","height","viewBox","fillRule","clipRule","d","icons","BurgerIcon","ProfileIcon","ListIcon","CurrencyIcon","DeleteIcon","LockIcon","DragIcon","ErrorIcon","NotificationIcon","fill","ArrowUp","ArrowDown","Icon","name","large","IconItem","HeaderMenuItem","icon","url","activeClassName","exact","to","MobileMenu","MobileMenuItem","MobileMenuGroup","isOpen","active","classesItem","tabIndex","MobileMenuAction","MenuBurgerIcon","x","y","rx","LogoIcon","filter","stroke","strokeLinecap","strokeLinejoin","strokeWidth","ry","transform","cx","cy","id","filterUnits","colorInterpolationFilters","floodOpacity","result","mode","in","in2","stdDeviation","useToggle","initialState","useState","state","setState","on","useCallback","off","toggle","useIngredientUrl","ingredientId","useRouteMatch","path","HttpBaseService","baseUrl","axiosInstance","this","axios","create","headers","baseURL","HttpBaseTokenService","tokenService","setRequestInterceptors","setReposnseInterceptors","interceptors","request","use","config","authorization","getAccessToken","isRetry","response","error","a","originalRequest","Boolean","needUpdateToken","status","refreshToken","SocketBaseService","socket","options","close","createSocket","openHandler","onopen","closeHandler","onclose","errorHandler","onerror","messageHandler","onmessage","FeedSocketService","WebSocket","feedSocketService","formatNumber","data","Intl","NumberFormat","format","formatDate","strDate","moment","Date","calendar","convertRawOrdersToOrders","orders","ingredientsCollection","forEach","order","price","ingredients","ingredientStr","ingredientInStore","find","ingredient","push","newOrder","_id","orderNumber","number","creationDate","createdAt","getIDsFromConstructor","constructor","ids","bun","middle","item","AppSettingsService","process","ParameterNotValidatedError","message","Error","CreateOrderError","OrdersService","urlOrders","token","defaultMessage","length","fetch","method","body","JSON","stringify","json","responseData","success","rawOrder","map","trim","ordersService","getBaseUrl","OrdersSocketService","ordersSocketService","setFeedCurrentOrderAction","createAction","clearFeedCurrentOrderAction","getFeedOrderAction","createAsyncThunk","thunkApi","getOrder","getState","rejectWithValue","msg","wsStartAction","wsStartSuccessAction","wsCloseAction","wsCloseSuccessAction","wsErrorAction","wsSetFeedTotalOrdersAction","wsSetFeedTotalTodayOrdersAction","wsSetFeedOrders","feedWsActions","feedReducer","createReducer","currentOrder","errorText","total","totalToday","wsLoading","wsConnected","wsErrorText","builder","addCase","action","payload","pending","fulfilled","rejected","amount","loadingSelector","createSelector","feed","errorTextSelector","currentOrderSelector","dataSelector","dataLengthSelector","dataLength","totalSelector","orderNumbersSelector","completedOrders","pendingOrders","wsLoadingSelector","wsConnectedSelector","wsErrorTextSelector","feedSelectors","orderByIdSelector","TokenService","accessTokenPrefix","accessTokenName","refreshTokenName","indexOf","split","inThirtyDays","getTime","Cookies","set","extractToken","expires","get","remove","localStorage","setItem","getItem","removeItem","setCurrentOrderAction","clearCurrentOrderAction","createOrderAction","_","burgerConstructor","createOrder","getOrderAction","wsOrdersStartAction","wsOrdersStartSuccessAction","wsOrdersCloseAction","wsOrdersCloseSuccessAction","wsOrdersErrorAction","wsOrdersSetOrders","ordersSocketActions","ordersReducer","ordersSelectors","setModeAction","commonReducer","modeSelector","common","commonSelectors","AuthError","AuthService","urls","getRefreshToken","post","urlToken","saveAccessToken","accessToken","saveRefreshToken","err","axiosResponse","axiosMessage","toLowerCase","user","email","password","urlLogin","getMessageFromError","urlRegister","urlLogout","clearAccessToken","clearRefreshToken","newUser","patch","urlUser","urlForgetPassword","code","urlResetPassword","authService","tokenServiceExternal","loginAction","login","loggedUser","registerAction","register","registredUser","logoutAction","logout","updateUserAction","updateUser","getUserAction","getUser","forgetPasswordAction","forgetPassword","resetPasswordAction","resetPassword","authReducer","getUserLoading","getUserErrorText","userSelector","auth","getUserLoadingSelector","getUserErrorTextSelector","authSelectors","IngredientsError","convertToIngredient","rawIngredient","proteins","fat","carbohydrates","calories","image","imageMobile","image_mobile","imageLarge","image_large","version","__v","IngredientsService","urlIngredients","ingredientsService","fetchIngredientsAsyncAction","getIngredients","errorMessage","setCurrentIngredientAction","clearCurrentIngredientAction","ingredientsReducer","currentIngredient","currentIngredientSelector","ingredientsSelectors","ingredientsByTypeSelector","ingredientByIdSelector","addBunAction","addIngredientAction","deleteIngredientAction","updateMiddleAction","clearConstructorAction","burgerConstructorReducer","positionId","bunSelector","middleSelector","totalSumSelector","totalSum","reduce","accumulator","burgerConstructorSelectors","ingredientCountSelector","isBun","middleCount","count","addToastAction","removeToastAction","replaceToastAction","toastsReducer","toasts","toast","idx","findIndex","splice","rootReducer","combineReducers","store","configureStore","reducer","devTools","middleware","getDefaultMiddleware","concat","wsUrl","urlSocketFeed","actions","api","next","dispatch","event","parsedData","parse","start","setToken","ordersSocketMiddleware","urlSocketOrders","useAppDispatch","useDispatch","useAppSelector","useSelector","Overlay","key","keyDownHandler","keyUpHandler","useEffect","keyUp","e","keyDown","document","addEventListener","removeEventListener","useKeyPress","BackgroundImage","src","imgStyle","backgroundImage","Price","num","Spinner","getStatusText","OrderStatus","IngredientLogo","imgPath","classesImg","alt","OrderNumbers","header","theme","PasswordInput","placeholder","onChange","showPassword","setShowPassword","onClickIconHandler","onIconClick","SideMenu","SideMenuElement","match","isExact","classesRoot","SideMenuElementAction","NotFound","useHistory","FooterPortal","footerElement","getElementById","ReactDOM","createPortal","Tab","AppHeaderInner","AppHeaderLeft","AppHeaderMainMenu","AppHeaderProfileMenu","AppHeader","useAuth","loginUser","unwrap","registerUser","logoutUser","useToasts","toastInformation","uuid","toastError","toastSuccess","toastAny","deleteToast","MobileHeaderMenu","onClose","show","profileMacth","isProfileRoute","profileOrdersMacth","isProfileOrdersRoute","isProfile","isProfileOpen","toggleProfile","then","catch","MobileHeader","menuIsOpen","showMenu","closeMenu","divReactModals","AppLoader","AppMessage","IngredientDetailsInfoItem","caption","position","classesWrapper","right","left","IngredientDetails","OrderDetails","imageDone","useFeedActions","setCurrentOrder","clearCurrentOrder","fetchOrder","OrderCardTop","OrderCardBottom","OrderCardDate","OrderCardDescription","description","OrderCardStatus","OrderCardPreview","firstElement","secondElement","thirdElement","fourthElement","fifthElement","sixthElement","FeedOrderCard","memo","orderId","location","useLocation","feedOrder","pathname","background","useProfileActions","ProfileOrderCard","backgroundProfile","OrderInfoItem","img","prepareIngredientsForOrderInfo","obj","acc","current","Object","keys","includes","convertArrayToObject","OrderInfoList","contentList","useMemo","OrderInfoTotal","date","OrderInfoDesktop","OrderInfoMobile","OrderInfo","Preloader","preCompleted","setPreCompleted","preloadData","ActionDelete","elementRef","ref","Swiper","onDelete","deleteRef","useRef","offset","currentDelta","element","deleteElement","getComponentWidth","clientWidth","getThreshold","setElementOffset","smooth","transitionDuration","setDeleteOffset","duration","touchStartHandler","targetTouches","clientX","touchMoveHandler","currentX","currentOffset","threshold","Math","abs","deleteOffset","touchEndHandler","componentWidth","widthDeleteAction","deleteActionTransitionEndHandler","clientHeight","requestAnimationFrame","minHeight","transition","collapseElement","elementTransitionEndHandler","ToastsContainer","onRemoved","CheckCircleFill","InfoFill","ExclamationTriangleFill","Toast","seconds","finished","setFinished","timer","setTimeout","clearTimeout","useTimer","MainLayout","MobileLayout","useIngredientsActions","fetchIngredients","setCurrentIngredient","clearCurrentIngredient","Ingredient","useDrag","dragRef","useConstructorActions","addBun","addIngredient","deleteIngredient","updateBurger","clearBurger","IngredientMobile","addToConstructor","IngredientGroup","ingredientsType","refDiv","IngredientsMenu","activeTab","useDropIngredientToConstructor","accepts","dropHandler","setIngredientId","useDrop","accept","collect","monitor","isOver","canDrop","drop","connectRef","ConstructorComponent","iconName","iconType","defaultText","shadowCanDrop","shadowOver","renderKey","onClickAction","classesIngredient","ConstructorTop","ConstructorSwapper","swapHandler","isDragging","connectRefDrag","hover","connectRefDrop","useSorting","invisible","ConstructorMiddle","middleIngredients","setMiddleIngredients","useDropIngredientSorting","collection","setCollection","swap","id1","id2","copy","index1","index2","content","ConstructorBottom","ModalHeader","headerMode","Modal","hasOwnRoute","goBack","onCloseHandler","classesOverlay","stopPropagation","ModalContent","ModalContent1","ModalFooter","IngredientDetailsModal","OrderModalMobile","OrderModalDesktop","currentFeedSelector","currentProfileSelector","OrderModal","currentFeed","currentProfile","clearFeed","clearProfile","appMode","OrderDetailsModal","handleClose","otherProps","ConstructorModal","useCreateOrder","ConstructorFooter","isModalOpen","showModal","hideModal","createOrderExt","Constructor","ConstructorComponentMobile","undefined","isIngredientWithPositionModel","componentRef","displayName","ConstructorMobile","ConstructorFooterMobile","useScroll","currentTab","setCurrentTab","refBun","refSauce","refMain","refContainer","refs","sauce","main","scrollToGroup","getRefByType","scrollIntoView","behavior","onScrollIngredientsHandler","activeGroup","containerTop","getBoundingClientRect","top","typedKey","sort","first","second","i","getActiveGroup","HomePageDesktop","DndProvider","backend","HTML5Backend","onScroll","HomePageFooterMobile","showConstructor","hideConstructor","HomePageMobile","command","history","HomePage","ingredientsLoading","ingredientsErrorText","ingredientsLength","preLoadData","FeedOrders","FeedTotal","FeedMenu","onClickTabHandler","Orders","Statistics","FeedPageDashboard","FeedPageOrders","FeedPageMobile","FeedPageDesktop","FeedPage","wsStart","wsClose","useFeedSocket","feedLoadingSelector","feedErrorTextSelector","OrderPage","preloadCompleted","setPreloadCompleted","useParams","replace","feedLoading","feedErrorText","ProtectedRoute","rest","currentUser","render","from","NotForLoggedInRoute","validateInput","validationRules","valid","areValidChacters","fieldName","test","resultMessage","isPasswordCorrectLength","minLength","maxLength","required","isEmail","nameValidations","emailValidations","passwordValidations","ProfileForm","setName","setEmail","setPassword","initialName","setInitialName","initialEmail","setInitialEmail","nameValidationState","setNameValidationState","emailValidationState","setEmailValidationState","passwordValidationState","setPasswordValidationState","showNameError","setShowNameError","showEmailError","setShowEmailError","showPasswordError","setShowPasswordError","updateInitialValues","styleActions","display","onSubmitHandler","preventDefault","onSubmit","target","ProfileOrders","ProfilePageOrdersDesktop","ProfilePageOrdersMobile","ProfilePageOrders","useProfileSocket","ProfilePageProfileForm","ProfilePageNotFound","ProfileRoutes","idProfileForm","idProfileOrders","idProfileOrder","ProfilePageMenu","match1","match2","match3","ProfilePageDesktop","ProfilePageMobile","ProfilePage","ordersLoadingSelector","ordersErrorTextSelector","ProfileOrderPage","ordersLoading","ordersErrorText","AuthForm","actionText","LoginForm","onSubmitFormHandler","RegistrationForm","username","setUsername","usernameValidationState","setUsernameValidationState","showUsernameError","setShowUsernameError","ForgetPasswordForm","canRedirectToReset","setCanRedirectToReset","codeValidations","ResetPasswordForm","setCode","canRedirectToLogin","setCanRedirectToLogin","codeValidationState","setCodeValidationState","showCodeError","setShowCodeError","LinkPanel","LinkPanelElement","question","linkText","LoginPage","RegistrationPage","ForgotPasswordPage","ResetPasswordPage","IngredientPage","NotFoundPage","Routes","idLoginPage","idRegisterPage","idForgetPasswordPage","App","handleResize","window","innerWidth","useWindowSize"],"mappings":"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","file":"static/js/main.d9682763.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth-page\":\"auth-page_auth-page__3Yytx\",\"auth-page__content\":\"auth-page_auth-page__content__3_VN4\",\"auth-page__header\":\"auth-page_auth-page__header__3ABdh\",\"auth-page__form\":\"auth-page_auth-page__form__3Mlyr\",\"auth-page__link-panel\":\"auth-page_auth-page__link-panel__3VV_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-card\":\"order-card_order-card__1I72b\",\"order-card__top\":\"order-card_order-card__top__ZSxbX\",\"order-card__date\":\"order-card_order-card__date__tfvs_\",\"order-card__description\":\"order-card_order-card__description__1FfpJ\",\"order-card__status\":\"order-card_order-card__status__24TfD\",\"order-card__bottom\":\"order-card_order-card__bottom__11VyJ\",\"order-card__preview\":\"order-card_order-card__preview__35d2J\",\"order-card__preview-first\":\"order-card_order-card__preview-first__3AkQM\",\"order-card__preview-second\":\"order-card_order-card__preview-second__1IeOK\",\"order-card__preview-third\":\"order-card_order-card__preview-third__3fU9W\",\"order-card__preview-fourth\":\"order-card_order-card__preview-fourth__FU54P\",\"order-card__preview-fifth\":\"order-card_order-card__preview-fifth__3l-uY\",\"order-card__preview-sixth\":\"order-card_order-card__preview-sixth__jgyay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-menu\":\"mobile-menu_mobile-menu__25Spa\",\"mobile-menu-item\":\"mobile-menu_mobile-menu-item__2Gujd\",\"mobile-menu-item--height_small\":\"mobile-menu_mobile-menu-item--height_small__1Uwxh\",\"mobile-menu-item--active\":\"mobile-menu_mobile-menu-item--active__1FdUZ\",\"mobile-menu-item__icon\":\"mobile-menu_mobile-menu-item__icon__2-mS6\",\"mobile-menu-item__text\":\"mobile-menu_mobile-menu-item__text__3zM0S\",\"mobile-menu-item__arrow\":\"mobile-menu_mobile-menu-item__arrow__9AilO\",\"mobile-menu-group\":\"mobile-menu_mobile-menu-group__3sjE5\",\"mobile-menu-group__children\":\"mobile-menu_mobile-menu-group__children__OEF5h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor__component\":\"constructor-component_constructor__component__1-dTk\",\"constructor__component-key\":\"constructor-component_constructor__component-key__2rhYM\",\"constructor__ingredient\":\"constructor-component_constructor__ingredient__3ijot\",\"constructor__ingredient--empty\":\"constructor-component_constructor__ingredient--empty__3iOd2\",\"constructor__ingredient-inner\":\"constructor-component_constructor__ingredient-inner__1Gg0S\",\"constructor__ingredient-image\":\"constructor-component_constructor__ingredient-image__12oFC\",\"constructor__ingredient-description\":\"constructor-component_constructor__ingredient-description__3XbGS\",\"constructor__ingredient-price\":\"constructor-component_constructor__ingredient-price__2M927\",\"constructor__ingredient-action\":\"constructor-component_constructor__ingredient-action__qrHLd\",\"constructor--border\":\"constructor-component_constructor--border__1UdXr\",\"constructor--border_top\":\"constructor-component_constructor--border_top__pg7ai\",\"constructor--border_bottom\":\"constructor-component_constructor--border_bottom__3JmnY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toast\":\"toast_toast__1mjpZ\",\"toast__icon\":\"toast_toast__icon__1WenI\",\"toast__text\":\"toast_toast__text__1a3B3\",\"toast__close\":\"toast_toast__close__3yHpx\",\"toast--primary\":\"toast_toast--primary__3-AK1\",\"toast--danger\":\"toast_toast--danger__23so3\",\"toast--success\":\"toast_toast--success__pTcTY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor__component\":\"constructor-component-mobile_constructor__component__1TENh\",\"constructor__component-drag\":\"constructor-component-mobile_constructor__component-drag__272PQ\",\"constructor__ingredient\":\"constructor-component-mobile_constructor__ingredient__2msGR\",\"constructor__ingredient--border_top\":\"constructor-component-mobile_constructor__ingredient--border_top__mXyXa\",\"constructor__ingredient--border_bottom\":\"constructor-component-mobile_constructor__ingredient--border_bottom__VUkAe\",\"constructor__ingredient-image-wrapper\":\"constructor-component-mobile_constructor__ingredient-image-wrapper__O8fgo\",\"constructor__ingredient-image\":\"constructor-component-mobile_constructor__ingredient-image__3DB26\",\"constructor__ingredient-name\":\"constructor-component-mobile_constructor__ingredient-name__lzgG9\",\"constructor__ingredient-price\":\"constructor-component-mobile_constructor__ingredient-price__3JkRQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"side-menu\":\"side-menu_side-menu__3Vuf3\",\"side-menu-element\":\"side-menu_side-menu-element__3DPOr\",\"side-menu-element__text\":\"side-menu_side-menu-element__text__4hbmM\",\"side-menu-element__action\":\"side-menu_side-menu-element__action__2Wa7K\",\"side-menu-element--active\":\"side-menu_side-menu-element--active__1WSmt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-header\":\"app-header_app-header__22nvW\",\"app-header__main-menu\":\"app-header_app-header__main-menu__2ay-x\",\"app-header__inner\":\"app-header_app-header__inner__3IX41\",\"app-header__left\":\"app-header_app-header__left__2MwS1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"icon_icon__bhWCK\",\"icon--large\":\"icon_icon--large__Y4HGz\",\"icon--primary\":\"icon_icon--primary__N8yIh\",\"icon--secondary\":\"icon_icon--secondary__1n_KE\",\"icon--error\":\"icon_icon--error__3nWaJ\",\"icon--success\":\"icon_icon--success__1gqNZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button-wrapper\":\"button_button-wrapper__1aEEf\",\"button\":\"button_button__1hDcM\",\"button--default\":\"button_button--default___o5m_\",\"button--large\":\"button_button--large__Uiymu\",\"button--small\":\"button_button--small__2Gglk\",\"button--loading\":\"button_button--loading__1kJ7M\",\"button__spinner\":\"button_button__spinner__iZyi1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header-menu\":\"header-menu_header-menu__1Ypdx\",\"menu-item\":\"header-menu_menu-item__3IOpe\",\"menu-item--active\":\"header-menu_menu-item--active__1SpCQ\",\"menu-item__icon\":\"header-menu_menu-item__icon__2IusX\",\"menu-item__text\":\"header-menu_menu-item__text__3n176\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-header\":\"mobile-header_mobile-header__1CsD0\",\"mobile-header__menu\":\"mobile-header_mobile-header__menu__3-jYr\",\"mobile-header__menu--show\":\"mobile-header_mobile-header__menu--show__2jKVw\",\"mobile-header__menu-top\":\"mobile-header_mobile-header__menu-top__1boOh\",\"mobile-header__menu-header\":\"mobile-header_mobile-header__menu-header__32DwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-details\":\"order-details_order-details__3EZks\",\"order-details__number\":\"order-details_order-details__number__4TmDd\",\"order-details__identificator\":\"order-details_order-details__identificator__OdlMW\",\"order-details__image\":\"order-details_order-details__image__1pe7T\",\"order-details__notification1\":\"order-details_order-details__notification1__38Obi\",\"order-details__notification2\":\"order-details_order-details__notification2__3g25a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-info\":\"order-info-desktop_order-info__3o-pG\",\"order-info__name\":\"order-info-desktop_order-info__name__2RnSz\",\"order-info__status\":\"order-info-desktop_order-info__status__PpTyy\",\"order-info__content-header\":\"order-info-desktop_order-info__content-header__g_MRF\",\"order-info__content\":\"order-info-desktop_order-info__content__2VHhb\",\"order-info__total\":\"order-info-desktop_order-info__total__EXz_z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-info\":\"order-info-mobile_order-info__36gie\",\"order-info__number\":\"order-info-mobile_order-info__number__5dG6Z\",\"order-info__name\":\"order-info-mobile_order-info__name__1o-2a\",\"order-info__status\":\"order-info-mobile_order-info__status__2zGCS\",\"order-info__content-header\":\"order-info-mobile_order-info__content-header__MpvFQ\",\"order-info__content\":\"order-info-mobile_order-info__content__2vzUl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient-mobile_ingredient__2SgwS\",\"ingredient__content\":\"ingredient-mobile_ingredient__content__1AlPV\",\"ingredient__image\":\"ingredient-mobile_ingredient__image__X3T7l\",\"ingredient__price\":\"ingredient-mobile_ingredient__price__1to5u\",\"ingredient__description\":\"ingredient-mobile_ingredient__description__3F3l1\",\"ingredient__btn-add\":\"ingredient-mobile_ingredient__btn-add__2emL6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home-page\":\"home-page-desktop_home-page__1WGif\",\"home-page__header\":\"home-page-desktop_home-page__header__20YPi\",\"home-page__content\":\"home-page-desktop_home-page__content__2OkQR\",\"home-page__section-ingredients\":\"home-page-desktop_home-page__section-ingredients__2TLjm\",\"home-page__ingredients\":\"home-page-desktop_home-page__ingredients__37WPk\",\"home-page__section-constructor\":\"home-page-desktop_home-page__section-constructor__qxzmW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home-page\":\"home-page-mobile_home-page__3HPqe\",\"home-page__section-ingredients\":\"home-page-mobile_home-page__section-ingredients__3HB-S\",\"home-page__header\":\"home-page-mobile_home-page__header__3mSdD\",\"home-page__menu\":\"home-page-mobile_home-page__menu__2D9NB\",\"home-page__ingredients\":\"home-page-mobile_home-page__ingredients__3yooF\",\"home-page__footer\":\"home-page-mobile_home-page__footer__3_Yf6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-page__section-dashboard\":\"feed-page-dashboard_feed-page__section-dashboard__3hUsx\",\"feed-page__dashboard-orders\":\"feed-page-dashboard_feed-page__dashboard-orders__3ZDf5\",\"feed-page__dashboard-orders-group\":\"feed-page-dashboard_feed-page__dashboard-orders-group__2HCJ1\",\"feed-page__dashboard-total\":\"feed-page-dashboard_feed-page__dashboard-total__3p2qK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link-panel\":\"link-panel_link-panel__1LfAc\",\"link-panel__element\":\"link-panel_link-panel__element__2X0g_\",\"link-panel__question\":\"link-panel_link-panel__question__3_3_O\",\"link-panel__link\":\"link-panel_link-panel__link__2Xu2l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"paragraph_paragraph__3WcIB\",\"paragraph--large\":\"paragraph_paragraph--large__30o_m\",\"paragraph--medium\":\"paragraph_paragraph--medium__3CQRz\",\"paragraph--regular\":\"paragraph_paragraph--regular__1DKiZ\",\"paragraph--small\":\"paragraph_paragraph--small__2CZRx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph-digits\":\"paragraph-digits_paragraph-digits__1cXOt\",\"paragraph-digits--regular\":\"paragraph-digits_paragraph-digits--regular__2TJlM\",\"paragraph-digits--medium\":\"paragraph-digits_paragraph-digits--medium__2AKd-\",\"paragraph-digits--large\":\"paragraph-digits_paragraph-digits--large__35hMy\",\"paragraph-digits--shadowed\":\"paragraph-digits_paragraph-digits--shadowed__2D0HH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__vJuzF\",\"ingredient__content\":\"ingredient_ingredient__content__1zWQI\",\"ingredient__image\":\"ingredient_ingredient__image__2hXfC\",\"ingredient__price\":\"ingredient_ingredient__price__1yvJf\",\"ingredient__description\":\"ingredient_ingredient__description__3SNJ3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-page\":\"feed-page-mobile_feed-page__1Z75_\",\"home-page\":\"feed-page-mobile_home-page__Wrz--\",\"feed-page__container\":\"feed-page-mobile_feed-page__container__SXP6C\",\"feed-page__section-feed\":\"feed-page-mobile_feed-page__section-feed__3A8k9\",\"feed-page__header\":\"feed-page-mobile_feed-page__header__26jxL\",\"feed-page__menu\":\"feed-page-mobile_feed-page__menu__ZcN5L\",\"feed-page__content\":\"feed-page-mobile_feed-page__content__1fkMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-details__info-item-wrapper\":\"ingredient-details-info-item_ingredient-details__info-item-wrapper__120Yk\",\"ingredient-details__info-item\":\"ingredient-details-info-item_ingredient-details__info-item__2Imtv\",\"ingredient-details__info-caption\":\"ingredient-details-info-item_ingredient-details__info-caption__2HOc7\",\"ingredient-details__info-value\":\"ingredient-details-info-item_ingredient-details__info-value__2e_bN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-details\":\"ingredient-details_ingredient-details__euvWF\",\"ingredient-details__caption\":\"ingredient-details_ingredient-details__caption__1cLDc\",\"ingredient-details__image\":\"ingredient-details_ingredient-details__image__1a3oE\",\"ingredient-details__name\":\"ingredient-details_ingredient-details__name__R8WRC\",\"ingredient-details__info\":\"ingredient-details_ingredient-details__info__3XwOP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-page\":\"order-page_order-page__OH7pC\",\"order-page__section-order\":\"order-page_order-page__section-order__2X86i\",\"order-page__header\":\"order-page_order-page__header__chLq1\",\"order-page__order\":\"order-page_order-page__order__Wqr5Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-form\":\"profile-form_profile-form__x5cbX\",\"profile-form__actions\":\"profile-form_profile-form__actions__2EpDM\",\"profile-form__link\":\"profile-form_profile-form__link__2M5jA\",\"profile-form__save\":\"profile-form_profile-form__save__2TDFj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-page\":\"profile-order-page_order-page__3n4rC\",\"order-page__section-order\":\"profile-order-page_order-page__section-order__1Cw-m\",\"order-page__header\":\"profile-order-page_order-page__header__CVU2S\",\"order-page__order\":\"profile-order-page_order-page__order__2VqRD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-logo\":\"ingredient-logo_ingredient-logo__90BQH\",\"ingredient-logo__image\":\"ingredient-logo_ingredient-logo__image__3AL8e\",\"ingredient-logo__image--last\":\"ingredient-logo_ingredient-logo__image--last__17Wno\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-numbers\":\"order-numbers_order-numbers__3RAMv\",\"order-numbers__content\":\"order-numbers_order-numbers__content__2QDGM\",\"order-numbers__item--success\":\"order-numbers_order-numbers__item--success__jAlTl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__content\":\"modal-content_modal__content__1FfSi\",\"modal__container\":\"modal-content_modal__container__1vCQX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__content1\":\"modal-content1_modal__content1__1gc9N\",\"modal__container\":\"modal-content1_modal__container__1y1Xd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor__footer\":\"constructor-footer_constructor__footer__Br_8c\",\"constructor__footer-price\":\"constructor-footer_constructor__footer-price__2NWGr\",\"constructor__footer-action\":\"constructor-footer_constructor__footer-action__2IZpA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"constructor-mobile_constructor__2LTaq\",\"constructor__content\":\"constructor-mobile_constructor__content__1jRpW\",\"constructor__list\":\"constructor-mobile_constructor__list__2CL0e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-page\":\"feed-page-desktop_feed-page__25f8r\",\"feed-page__header\":\"feed-page-desktop_feed-page__header__3ocG6\",\"feed-page__content\":\"feed-page-desktop_feed-page__content__1VgIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page__section-orders\":\"profile-page-orders-mobile_profile-page__section-orders__2-9bS\",\"profile-page__orders-header\":\"profile-page-orders-mobile_profile-page__orders-header__2yZpJ\",\"profile-page__orders-content\":\"profile-page-orders-mobile_profile-page__orders-content__on-CQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-page\":\"ingredient-page_ingredient-page__1dDid\",\"ingredient-page__section-ingredient\":\"ingredient-page_ingredient-page__section-ingredient__3_Sme\",\"ingredient-page__header\":\"ingredient-page_ingredient-page__header__OwD2J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"price\":\"price_price__1DvmG\",\"price__number\":\"price_price__number__3HPOH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"tab_tab__zZARP\",\"tab--active\":\"tab_tab--active__2eh7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-loader__overlay\":\"app-loader_app-loader__overlay__YHb6B\",\"app-loader\":\"app-loader_app-loader__DpgR_\",\"lds-ripple\":\"app-loader_lds-ripple__dc8XC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-info__item\":\"order-info-item_order-info__item__3CcQk\",\"order-info__item-name\":\"order-info-item_order-info__item-name__10fye\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-info-total\":\"order-info-total_order-info-total__1I1tY\",\"order-info-total__date\":\"order-info-total_order-info-total__date__16ElW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swiper\":\"swiper_swiper__2oRHk\",\"swiper__actions\":\"swiper_swiper__actions__KZpLd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mobile-layout\":\"mobile-layout_mobile-layout__3jqkS\",\"mobile-layout__container\":\"mobile-layout_mobile-layout__container__2LwvG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient-group\":\"ingredient-group_ingredient-group__1IJiM\",\"ingredient-group__content\":\"ingredient-group_ingredient-group__content__1ecxC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__header\":\"modal-header_modal__header__2TXZK\",\"modal__header-close\":\"modal-header_modal__header-close__3_mhg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__14tB-\",\"modal--position_center\":\"modal_modal--position_center__2paDL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__constructor\":\"constructor-modal_modal__constructor__l5WHA\",\"modal__footer\":\"constructor-modal_modal__footer__3B7Eo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"constructor_constructor__1tV2L\",\"constructor__content\":\"constructor_constructor__content__3xAZh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor-footer\":\"constructor-footer-mobile_constructor-footer__2q86_\",\"constructor-footer__create-order\":\"constructor-footer-mobile_constructor-footer__create-order__3pwAq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home-page__footer\":\"home-page-footer-mobile_home-page__footer__X6iiP\",\"home-page__show-order\":\"home-page-footer-mobile_home-page__show-order__xbiJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page__section-orders\":\"profile-page-orders-desktop_profile-page__section-orders__3hzmt\",\"profile-page__orders-content\":\"profile-page-orders-desktop_profile-page__orders-content__1YUJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page__form\":\"profile-page-profile-form_profile-page__form__35TC2\",\"profile-page__form-header\":\"profile-page-profile-form_profile-page__form-header__G5dbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"profile-page-desktop_profile-page__2ehij\",\"profile-page__content\":\"profile-page-desktop_profile-page__content__37PTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page\":\"profile-page-mobile_profile-page__1qkkw\",\"profile-page__content\":\"profile-page-mobile_profile-page__content__2AmGh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3BfDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"overlay_overlay__kILd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background-image\":\"background-image_background-image__42d-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"spinner_spinner__eWrHD\",\"lds-ellipsis1\":\"spinner_lds-ellipsis1__2jtFz\",\"lds-ellipsis2\":\"spinner_lds-ellipsis2__2q98k\",\"lds-ellipsis3\":\"spinner_lds-ellipsis3__2p0zS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-status--canceled\":\"order-status_order-status--canceled__Rz_kD\",\"order-status--done\":\"order-status_order-status--done__8GkjE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"not-found\":\"not-found_not-found__2t4yd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"footer_footer__185YB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app-message__inner\":\"app-message_app-message__inner__2pOWu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order-info__list\":\"order-info-list_order-info__list__1vYKg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"swiper__actions-delete\":\"action-delete_swiper__actions-delete__h3of6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toasts-container\":\"toasts-container_toasts-container__OAUwD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-layout\":\"main-layout_main-layout__2xMR-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredients-menu\":\"ingredients-menu_ingredients-menu__4NHK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor__top\":\"constructor-top_constructor__top__1_8FR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor__middle\":\"constructor-middle_constructor__middle__2dHWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor__bottom\":\"constructor-bottom_constructor__bottom__Fn1hD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__footer\":\"modal-footer_modal__footer__3l5Bu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__order-total\":\"order-modal-mobile_modal__order-total__6AKqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__order-details\":\"order-details-modal_modal__order-details__WQIsF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-orders\":\"feed-orders_feed-orders__3HozG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-menu\":\"feed-menu_feed-menu__2i5ut\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed-page__section-orders\":\"feed-page-orders_feed-page__section-orders__bkxKA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-orders\":\"profile-orders_profile-orders__sS3vh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page__error\":\"profile-page-orders_profile-page__error__2IKCG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page__not-found\":\"profile-page-not-found_profile-page__not-found__2j-LL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile-page__side-menu\":\"profile-page-menu_profile-page__side-menu__1bRF3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth-form\":\"auth-form_auth-form__Tw2Mf\"};","/* eslint-disable react/jsx-props-no-spreading */\r\n\r\nimport { ComponentType, FC } from 'react';\r\n\r\n// PROPS\r\nexport interface WithShowProps {\r\n  show?: boolean\r\n}\r\n\r\n// HOC\r\nexport const withShow = <P extends WithShowProps>(\r\n  WrappedComponent: ComponentType<P>\r\n): FC<P> => (props: P) => {\r\n    const { show = true, ...otherProps } = props;\r\n\r\n    if (!show) {\r\n      return null;\r\n    }\r\n\r\n    return <WrappedComponent {...otherProps as P} />;\r\n  };\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Tab } from 'components/yandex';\r\n// css\r\nimport styles from './feed-menu.module.css';\r\n\r\nexport enum FeedMenuOptions {\r\n  Orders = 'orders',\r\n  Statistics = 'statistics'\r\n}\r\n\r\n// PROPS\r\ninterface FeedMenuProps {\r\n  activeTab: FeedMenuOptions;\r\n  onClick: (data: FeedMenuOptions) => void;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const FeedMenu = (props: FeedMenuProps) => {\r\n  const { activeTab, onClick, className } = props;\r\n\r\n  // EVENT HANDLERS\r\n  const onClickTabHandler = (data: string): void => {\r\n    // Run the event from the props\r\n    onClick && onClick(data as FeedMenuOptions);\r\n  };\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['feed-menu'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      <Tab\r\n        value={FeedMenuOptions.Orders}\r\n        active={activeTab === FeedMenuOptions.Orders}\r\n        onClick={onClickTabHandler}\r\n      >\r\n        Заказы\r\n      </Tab>\r\n      <Tab\r\n        value={FeedMenuOptions.Statistics}\r\n        active={activeTab === FeedMenuOptions.Statistics}\r\n        onClick={onClickTabHandler}\r\n      >\r\n        Статистика\r\n      </Tab>\r\n    </div>\r\n  );\r\n};\r\n","import { ReactNode } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// css\r\nimport styles from './container.module.css';\r\n\r\n// PROPS\r\ninterface ContainerProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const Container = (props: ContainerProps) => {\r\n  const { children, className } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['container'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      { children }\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  DetailedHTMLProps,\r\n  HTMLAttributes\r\n} from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// css\r\nimport styles from './paragraph.module.css';\r\n\r\n// PROPS\r\ninterface ParagraphProps\r\n  extends DetailedHTMLProps<HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement> {\r\n    text?: string;\r\n    size?: 'regular' | 'small' | 'medium' | 'large';\r\n}\r\n\r\n// COMPONENT\r\nexport const Paragraph = (props: ParagraphProps) => {\r\n  const {\r\n    text = '',\r\n    children,\r\n    size = 'regular',\r\n    className = '',\r\n    style,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['paragraph'],\r\n    {\r\n      [styles['paragraph--regular']]: size === 'regular',\r\n      [styles['paragraph--small']]: size === 'small',\r\n      [styles['paragraph--medium']]: size === 'medium',\r\n      [styles['paragraph--large']]: size === 'large'\r\n    },\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <p\r\n      className={classes}\r\n      style={style}\r\n      onClick={onClick}\r\n      role=\"presentation\"\r\n    >\r\n      { children || text }\r\n    </p>\r\n  );\r\n};\r\n","import {\r\n  DetailedHTMLProps,\r\n  HTMLAttributes\r\n} from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// css\r\nimport styles from './paragraph-digits.module.css';\r\n\r\n// PROPS\r\ninterface ParagraphDigitsProps\r\n  extends DetailedHTMLProps<HTMLAttributes<HTMLParagraphElement>, HTMLParagraphElement> {\r\n    text?: string | number | undefined;\r\n    size?: 'regular' | 'medium' | 'large';\r\n    shadowed?: boolean;\r\n}\r\n\r\n// COMPONENT\r\nexport const ParagraphDigits = (props: ParagraphDigitsProps) => {\r\n  const {\r\n    text,\r\n    size = 'regular',\r\n    shadowed = false,\r\n    children,\r\n    className = '',\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['paragraph-digits'],\r\n    {\r\n      [styles['paragraph-digits--regular']]: size === 'regular',\r\n      [styles['paragraph-digits--medium']]: size === 'medium',\r\n      [styles['paragraph-digits--large']]: size === 'large',\r\n      [styles['paragraph-digits--shadowed']]: shadowed\r\n    },\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <p\r\n      className={classes}\r\n      onClick={onClick}\r\n      role=\"presentation\"\r\n    >\r\n      { children || text }\r\n    </p>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Spinner } from 'components/base';\r\n// css\r\nimport styles from './button.module.css';\r\n\r\n// PROPS\r\ninterface ButtonProps {\r\n  text: string;\r\n  type?: 'submit' | 'button';\r\n  loading?: boolean;\r\n  disabled?: boolean;\r\n  size?: 'default' | 'small' | 'large';\r\n  className?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const Button = (props: ButtonProps) => {\r\n  const {\r\n    text,\r\n    type = 'button',\r\n    loading = false,\r\n    disabled = false,\r\n    size = 'default',\r\n    className = '',\r\n    onClick\r\n  } = props;\r\n\r\n  // css-classes for the root element\r\n  const classRoot = classNames(\r\n    styles['button-wrapper'],\r\n    className\r\n  );\r\n\r\n  // css-classes for the button\r\n  const classButton = classNames(\r\n    styles['button'],\r\n    {\r\n      [styles['button--default']]: size === 'default',\r\n      [styles['button--large']]: size === 'large',\r\n      [styles['button--small']]: size === 'small',\r\n      [styles['button--loading']]: loading\r\n    }\r\n  );\r\n\r\n  // Handles to click the button\r\n  const onClickHandler = () => {\r\n    if (loading) {\r\n      return;\r\n    }\r\n    onClick && onClick();\r\n  };\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classRoot}>\r\n      <input\r\n        className={classButton}\r\n        type={type}\r\n        value={text}\r\n        disabled={disabled}\r\n        onClick={onClickHandler}\r\n      />\r\n      {/* Spinner when loading */}\r\n      { loading && <Spinner className={styles['button__spinner']} /> }\r\n    </div>\r\n  );\r\n};\r\n","import { ReactNode } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// css\r\nimport styles from './header-menu.module.css';\r\n\r\n// PROPS\r\ninterface HeaderMenuProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const HeaderMenu = (props: HeaderMenuProps) => {\r\n  const { children, className } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['header-menu'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","// Custom types\r\nimport { IconTypeType } from '../icon.props';\r\n// CSS\r\nimport styles from '../icon.module.css';\r\n\r\nexport const getClass = (type: IconTypeType): string => {\r\n  let value = '';\r\n\r\n  switch (type) {\r\n    case 'primary':\r\n      value = styles['icon--primary'];\r\n      break;\r\n    case 'secondary':\r\n      value = styles['icon--secondary'];\r\n      break;\r\n    case 'success':\r\n      value = styles['icon--success'];\r\n      break;\r\n    case 'error':\r\n      value = styles['icon--error'];\r\n      break;\r\n    default:\r\n      value = '';\r\n  }\r\n\r\n  return value;\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const CloseIcon = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.29289 3.29289C3.68342 2.90237 4.31658 2.90237 4.70711 3.29289L12 10.5858L19.2929 3.29289C19.6834 2.90237 20.3166 2.90237 20.7071 3.29289C21.0976 3.68342 21.0976 4.31658 20.7071 4.70711L13.4142 12L20.7071 19.2929C21.0976 19.6834 21.0976 20.3166 20.7071 20.7071C20.3166 21.0976 19.6834 21.0976 19.2929 20.7071L12 13.4142L4.70711 20.7071C4.31658 21.0976 3.68342 21.0976 3.29289 20.7071C2.90237 20.3166 2.90237 19.6834 3.29289 19.2929L10.5858 12L3.29289 4.70711C2.90237 4.31658 2.90237 3.68342 3.29289 3.29289Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// components\r\nimport {\r\n  BurgerIcon,\r\n  ProfileIcon,\r\n  ListIcon,\r\n  CurrencyIcon,\r\n  DeleteIcon,\r\n  LockIcon,\r\n  DragIcon,\r\n  CloseIcon,\r\n  ErrorIcon,\r\n  NotificationIcon,\r\n  ArrowUp,\r\n  ArrowDown\r\n} from './icons';\r\n\r\nexport type IconTypeType =\r\n  | 'primary'\r\n  | 'secondary'\r\n  | 'error'\r\n  | 'success'\r\n  | 'none';\r\n\r\nexport const icons = {\r\n  BurgerIcon,\r\n  ProfileIcon,\r\n  ListIcon,\r\n  CurrencyIcon,\r\n  DeleteIcon,\r\n  LockIcon,\r\n  DragIcon,\r\n  CloseIcon,\r\n  ErrorIcon,\r\n  NotificationIcon,\r\n  ArrowUp,\r\n  ArrowDown\r\n};\r\n\r\nexport type IconNameType = keyof typeof icons;\r\n\r\n// type SpanProps = HTMLAttributes<HTMLSpanElement>;\r\n\r\nexport interface IconProps {\r\n  name?: IconNameType,\r\n  type?: IconTypeType,\r\n  large?: boolean,\r\n  className?: string\r\n  onClick?: () => void;\r\n}\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const BurgerIcon = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M22.0571 8.7H1.96905C1.44524 8.7 1.02619 8.25842 1 7.70645C1 3.26308 4.69286 1 12 1C19.3071 1 23 3.26308 23 7.70645C23 8.25842 22.581 8.7 22.0571 8.7ZM24 12.55C24 11.6362 23.2674 10.9 22.3579 10.9H1.64211C0.732632 10.9 0 11.6362 0 12.55C0 13.4638 0.732632 14.2 1.64211 14.2H22.3579C23.2674 14.2 24 13.4638 24 12.55ZM22.0321 16.4H1.94174C1.41855 16.4 1 16.8693 1 17.456V18.5707C1 21.0053 2.77883 23 4.95006 23H19.0499C21.2212 23 23 21.0053 23 18.5707V17.456C22.9738 16.8693 22.5553 16.4 22.0321 16.4Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const ProfileIcon = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M17.068 6.56875C17.068 10.0837 14.8959 13.1 12 13.1C9.10401 13.1 6.93203 10.0837 6.93203 6.56875C6.93203 3.05385 8.80118 1 12 1C15.1988 1 17.068 3.05385 17.068 6.56875ZM3.10524 20.9572C3.53926 21.4607 5.40556 23 12 23C18.5944 23 20.4608 21.4607 20.8947 20.9572C20.9792 20.8593 21.0103 20.7362 20.9971 20.6088C20.8969 19.638 20.0015 15.3 12 15.3C3.99848 15.3 3.10311 19.638 3.00291 20.6088C2.98975 20.7362 3.02077 20.8593 3.10524 20.9572Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const ListIcon = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M1 3C1 1.89543 1.89543 1 3 1H21C22.1046 1 23 1.89543 23 3V21C23 22.1046 22.1046 23 21 23H3C1.89543 23 1 22.1046 1 21V3ZM6.5 8C7.0523 8 7.5 7.5523 7.5 7C7.5 6.4477 7.0523 6 6.5 6C5.9477 6 5.5 6.4477 5.5 7C5.5 7.5523 5.9477 8 6.5 8ZM8.5 7C8.5 6.44772 8.94772 6 9.5 6H17.5C18.0523 6 18.5 6.44772 18.5 7C18.5 7.55228 18.0523 8 17.5 8H9.5C8.94772 8 8.5 7.55228 8.5 7ZM9.5 11C8.94772 11 8.5 11.4477 8.5 12C8.5 12.5523 8.94772 13 9.5 13H17.5C18.0523 13 18.5 12.5523 18.5 12C18.5 11.4477 18.0523 11 17.5 11H9.5ZM9.5 16C8.94772 16 8.5 16.4477 8.5 17C8.5 17.5523 8.94772 18 9.5 18H17.5C18.0523 18 18.5 17.5523 18.5 17C18.5 16.4477 18.0523 16 17.5 16H9.5ZM6.5 13C7.0523 13 7.5 12.5523 7.5 12C7.5 11.4477 7.0523 11 6.5 11C5.9477 11 5.5 11.4477 5.5 12C5.5 12.5523 5.9477 13 6.5 13ZM6.5 18C7.0523 18 7.5 17.5523 7.5 17C7.5 16.4477 7.0523 16 6.5 16C5.9477 16 5.5 16.4477 5.5 17C5.5 17.5523 5.9477 18 6.5 18Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const CurrencyIcon = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path d=\"M10.3849 2.65561C10.5818 2.18895 10.0397 1.75899 9.63011 2.05689L1.41184 8.03382C1.15309 8.222 1.00001 8.52262 1.00001 8.84256V13.4828C1.00001 13.6932 1.13171 13.8811 1.32948 13.9529L4.15637 14.9785C4.65685 15.1601 5.21185 14.9177 5.41879 14.4271L10.3849 2.65561Z\" />\r\n      <path d=\"M1.62116 15.9076C1.32217 15.7916 1.00001 16.0122 1 16.3329C1 16.4889 1.07968 16.634 1.21127 16.7178L10.2307 22.4574C10.3326 22.5223 10.4408 22.3844 10.3536 22.3008L5.22556 17.3879C5.13043 17.2968 5.01823 17.2254 4.89541 17.1777L1.62116 15.9076Z\" />\r\n      <path d=\"M13.6465 22.3008C13.5592 22.3844 13.6674 22.5223 13.7693 22.4574L22.7887 16.7178C22.9203 16.634 23 16.4889 23 16.3329C23 16.0122 22.6778 15.7916 22.3788 15.9076L19.1046 17.1777C18.9818 17.2254 18.8696 17.2968 18.7745 17.3879L13.6465 22.3008Z\" />\r\n      <path d=\"M22.6705 13.9529C22.8683 13.8811 23 13.6932 23 13.4828V8.84256C23 8.52262 22.8469 8.222 22.5882 8.03382L14.3699 2.05689C13.9603 1.75899 13.4183 2.18895 13.6151 2.65561L18.5812 14.4271C18.7882 14.9177 19.3432 15.1601 19.8436 14.9785L22.6705 13.9529Z\" />\r\n      <path d=\"M12.7142 20.9615C12.3221 21.3616 11.6779 21.3616 11.2858 20.9615L7.10635 16.6968C6.83068 16.4155 6.7458 15.9986 6.88954 15.6319L11.069 4.97004C11.4009 4.12332 12.5991 4.12333 12.931 4.97004L17.1105 15.6319C17.2542 15.9986 17.1693 16.4155 16.8937 16.6968L12.7142 20.9615Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const DeleteIcon = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path d=\"M18.9391 8.69713C19.1384 8.69713 19.3193 8.78413 19.4623 8.93113C19.5955 9.08813 19.6626 9.28313 19.6432 9.48913C19.6432 9.55712 19.1102 16.2971 18.8058 19.134C18.6152 20.875 17.4929 21.932 15.8094 21.961C14.5149 21.99 13.2496 22 12.0038 22C10.6811 22 9.38763 21.99 8.13206 21.961C6.50498 21.922 5.38168 20.846 5.20079 19.134C4.88763 16.2871 4.36439 9.55712 4.35467 9.48913C4.34494 9.28313 4.41108 9.08813 4.54529 8.93113C4.67756 8.78413 4.86818 8.69713 5.06852 8.69713H18.9391ZM14.0647 2C14.9488 2 15.7385 2.61699 15.967 3.49699L16.1304 4.22698C16.2627 4.82197 16.7781 5.24297 17.3714 5.24297H20.2871C20.6761 5.24297 21 5.56596 21 5.97696V6.35696C21 6.75795 20.6761 7.09095 20.2871 7.09095H3.71385C3.32386 7.09095 3 6.75795 3 6.35696V5.97696C3 5.56596 3.32386 5.24297 3.71385 5.24297H6.62957C7.22185 5.24297 7.7373 4.82197 7.87054 4.22798L8.02323 3.54598C8.26054 2.61699 9.0415 2 9.93527 2H14.0647Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const LockIcon = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M6 7V10H4C2.89543 10 2 10.8954 2 12V21C2 22.1046 2.89543 23 4 23H20C21.1046 23 22 22.1046 22 21V12C22 10.8954 21.1046 10 20 10H18V7C18 3.68629 15.3137 1 12 1C8.68632 1 6 3.68629 6 7ZM12 3C9.79088 3 8 4.79086 8 7V10H16V7C16 4.79086 14.2091 3 12 3ZM13 15C13 14.4477 12.5523 14 12 14C11.4477 14 11 14.4477 11 15V18C11 18.5523 11.4477 19 12 19C12.5523 19 13 18.5523 13 18V15Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const DragIcon = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M9.5 5.15375C9.5 6.34325 8.60455 7.3075 7.5 7.3075C6.39545 7.3075 5.5 6.34325 5.5 5.15375C5.5 3.96427 6.39545 3 7.5 3C8.60455 3 9.5 3.96427 9.5 5.15375ZM7.5 14.3075C8.60455 14.3075 9.5 13.3433 9.5 12.1538C9.5 10.9643 8.60455 10 7.5 10C6.39545 10 5.5 10.9643 5.5 12.1538C5.5 13.3433 6.39545 14.3075 7.5 14.3075ZM7.5 21.3075C8.60455 21.3075 9.5 20.3433 9.5 19.1537C9.5 17.9642 8.60455 17 7.5 17C6.39545 17 5.5 17.9642 5.5 19.1537C5.5 20.3433 6.39545 21.3075 7.5 21.3075Z\" />\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.5 5.15375C18.5 6.34325 17.6045 7.3075 16.5 7.3075C15.3954 7.3075 14.5 6.34325 14.5 5.15375C14.5 3.96427 15.3954 3 16.5 3C17.6045 3 18.5 3.96427 18.5 5.15375ZM16.5 14.3075C17.6045 14.3075 18.5 13.3433 18.5 12.1538C18.5 10.9643 17.6045 10 16.5 10C15.3954 10 14.5 10.9643 14.5 12.1538C14.5 13.3433 15.3954 14.3075 16.5 14.3075ZM16.5 21.3075C17.6045 21.3075 18.5 20.3433 18.5 19.1537C18.5 17.9642 17.6045 17 16.5 17C15.3954 17 14.5 17.9642 14.5 19.1537C14.5 20.3433 15.3954 21.3075 16.5 21.3075Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const ErrorIcon = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path d=\"M11 15h2v2h-2v-2zm0-8h2v6h-2V7zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const NotificationIcon = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      height=\"24px\"\r\n      viewBox=\"0 0 24 24\"\r\n      width=\"24px\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path d=\"M0 0h24v24H0V0z\" fill=\"none\" />\r\n      <path d=\"M12 22c1.1 0 2-.9 2-2h-4c0 1.1.9 2 2 2zm6-6v-5c0-3.07-1.63-5.64-4.5-6.32V4c0-.83-.67-1.5-1.5-1.5s-1.5.67-1.5 1.5v.68C7.64 5.36 6 7.92 6 11v5l-2 2v1h16v-1l-2-2zm-2 1H8v-6c0-2.48 1.51-4.5 4-4.5s4 2.02 4 4.5v6zM7.58 4.08L6.15 2.65C3.75 4.48 2.17 7.3 2.03 10.5h2c.15-2.65 1.51-4.97 3.55-6.42zm12.39 6.42h2c-.15-3.2-1.73-6.02-4.12-7.85l-1.42 1.43c2.02 1.45 3.39 3.77 3.54 6.42z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const ArrowUp = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path d=\"M10.9541 10.3525C11.5164 9.88251 12.4836 9.88251 13.0459 10.3525L17.6243 14.1786C18.4585 14.8758 17.8129 16 16.5783 16H7.42166C6.1871 16 5.54152 14.8758 6.37574 14.1786L10.9541 10.3525Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// aux.\r\nimport { IconProps } from '../icon.props';\r\nimport { getClass } from '../utils';\r\n\r\n// COMPONENT\r\nexport const ArrowDown = (props: IconProps) => {\r\n  const {\r\n    type = 'none',\r\n    className,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    getClass(type),\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n      className={classes}\r\n      onClick={onClick}\r\n    >\r\n      <path d=\"M10.9541 15.6475C11.5164 16.1175 12.4836 16.1175 13.0459 15.6475L17.6243 11.8214C18.4585 11.1242 17.8129 10 16.5783 10H7.42166C6.1871 10 5.54152 11.1242 6.37574 11.8214L10.9541 15.6475Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// types\r\nimport { IconProps, icons } from './icon.props';\r\n// css\r\nimport styles from './icon.module.css';\r\n\r\n// COMPONENT\r\nexport const Icon = (props: IconProps) => {\r\n  const {\r\n    name = 'BurgerIcon',\r\n    type = 'none',\r\n    large = false,\r\n    onClick,\r\n    className = ''\r\n  } = props;\r\n\r\n  // css-classes for the root element\r\n  const classes = classNames(\r\n    styles['icon'],\r\n    {\r\n      [`${styles['icon--large']}`]: large,\r\n      [`${className}`]: !!className\r\n    }\r\n  );\r\n\r\n  const IconItem = icons[name];\r\n\r\n  // RENDER\r\n  return (\r\n    <span className={classes}>\r\n      <IconItem\r\n        type={type}\r\n        onClick={onClick}\r\n      />\r\n    </span>\r\n  );\r\n};\r\n","// router\r\nimport { NavLink } from 'react-router-dom';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport { Icon, IconNameType } from 'components/icons';\r\n// css\r\nimport styles from './header-menu.module.css';\r\n\r\n// PROPS\r\nexport interface HeaderMenuItemProps {\r\n  text: string;\r\n  url: string;\r\n  icon: IconNameType;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const HeaderMenuItem = (props: HeaderMenuItemProps) => {\r\n  const {\r\n    text,\r\n    icon,\r\n    url,\r\n    className = ''\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['menu-item'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <NavLink\r\n      className={classes}\r\n      activeClassName={styles['menu-item--active']}\r\n      exact\r\n      to={url}\r\n    >\r\n\r\n      <Icon\r\n        className={styles['menu-item__icon']}\r\n        name={icon}\r\n      />\r\n\r\n      {/* Text */}\r\n      <Paragraph\r\n        className={styles['menu-item__text']}\r\n        text={text}\r\n      />\r\n\r\n    </NavLink>\r\n  );\r\n};\r\n","import { ReactNode } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// css\r\nimport styles from './mobile-menu.module.css';\r\n\r\n// PROPS\r\ninterface MobileMenuProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const MobileMenu = (props: MobileMenuProps) => {\r\n  const { children, className } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['mobile-menu'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <nav className={classes}>\r\n      {children}\r\n    </nav>\r\n  );\r\n};\r\n","// router\r\nimport { NavLink } from 'react-router-dom';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport { Icon, IconNameType } from 'components/icons';\r\n// css\r\nimport styles from './mobile-menu.module.css';\r\n\r\n// PROPS\r\ninterface MobileMenuItemProps {\r\n  text: string;\r\n  url: string;\r\n  icon?: IconNameType;\r\n  onClick?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const MobileMenuItem = (props: MobileMenuItemProps) => {\r\n  const {\r\n    text,\r\n    url,\r\n    icon,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['mobile-menu-item'],\r\n    {\r\n      [styles['mobile-menu-item--height_small']]: !icon\r\n    }\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <NavLink\r\n      className={classes}\r\n      activeClassName={styles['mobile-menu-item--active']}\r\n      to={url}\r\n      exact\r\n      onClick={onClick}\r\n    >\r\n      {\r\n        icon && (\r\n          <Icon\r\n            className={styles['mobile-menu-item__icon']}\r\n            name={icon}\r\n          />\r\n        )\r\n      }\r\n      <Paragraph\r\n        className={styles['mobile-menu-item__text']}\r\n        size=\"small\"\r\n        text={text}\r\n      />\r\n    </NavLink>\r\n  );\r\n};\r\n","import { ReactNode } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport { Icon, IconNameType } from 'components/icons';\r\n// css\r\nimport styles from './mobile-menu.module.css';\r\n\r\n// PROPS\r\ninterface MobileMenuGroupProps {\r\n  children: ReactNode;\r\n  text: string;\r\n  icon: IconNameType;\r\n  active?: boolean;\r\n  isOpen?: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const MobileMenuGroup = (props: MobileMenuGroupProps) => {\r\n  const {\r\n    children,\r\n    text,\r\n    icon,\r\n    isOpen = true,\r\n    active = false,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classesItem = classNames(\r\n    styles['mobile-menu-item'],\r\n    {\r\n      [styles['mobile-menu-item--active']]: active\r\n    }\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['mobile-menu-group']}>\r\n      <div\r\n        className={classesItem}\r\n        role=\"button\"\r\n        tabIndex={0}\r\n        onClick={onClick}\r\n      >\r\n        <Icon\r\n          className={styles['mobile-menu-item__icon']}\r\n          name={icon}\r\n        />\r\n        <Paragraph\r\n          className={styles['mobile-menu-item__text']}\r\n          size=\"small\"\r\n          text={text}\r\n        />\r\n        <Icon\r\n          className={styles['mobile-menu-item__arrow']}\r\n          name={isOpen ? 'ArrowDown' : 'ArrowUp'}\r\n        />\r\n      </div>\r\n\r\n      {/* Children */}\r\n      { isOpen && (\r\n        <div className={styles['mobile-menu-group__children']}>\r\n          { children }\r\n        </div>\r\n      ) }\r\n    </div>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport { Icon, IconNameType } from 'components/icons';\r\n// css\r\nimport styles from './mobile-menu.module.css';\r\n\r\n// PROPS\r\ninterface MobileMenuActionProps {\r\n  text: string;\r\n  icon?: IconNameType;\r\n  onClick?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const MobileMenuAction = (props: MobileMenuActionProps) => {\r\n  const {\r\n    text,\r\n    icon,\r\n    onClick\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['mobile-menu-item'],\r\n    {\r\n      [styles['mobile-menu-item--height_small']]: !icon\r\n    }\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      className={classes}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n      onClick={onClick}\r\n    >\r\n      {\r\n        icon && (\r\n          <Icon\r\n            className={styles['mobile-menu-item__icon']}\r\n            name={icon}\r\n          />\r\n        )\r\n      }\r\n      <Paragraph\r\n        className={styles['mobile-menu-item__text']}\r\n        size=\"small\"\r\n        text={text}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// PROPS\r\ninterface MenuBurgerIconProps {\r\n  onClick?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const MenuBurgerIcon = (props: MenuBurgerIconProps) => {\r\n  const { onClick } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <svg onClick={onClick} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <rect x=\"3\" y=\"6\" width=\"18\" height=\"2\" rx=\"1\" fill=\"#F2F2F3\" />\r\n      <rect x=\"3\" y=\"11\" width=\"18\" height=\"2\" rx=\"1\" fill=\"#F2F2F3\" />\r\n      <rect x=\"3\" y=\"16\" width=\"18\" height=\"2\" rx=\"1\" fill=\"#F2F2F3\" />\r\n    </svg>\r\n  );\r\n};\r\n","// PROPS\r\ninterface CloseIconProps {\r\n  onClick?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const CloseIcon = (props: CloseIconProps) => {\r\n  const { onClick } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <svg onClick={onClick} width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M3.29289 3.29289C3.68342 2.90237 4.31658 2.90237 4.70711 3.29289L12 10.5858L19.2929 3.29289C19.6834 2.90237 20.3166 2.90237 20.7071 3.29289C21.0976 3.68342 21.0976 4.31658 20.7071 4.70711L13.4142 12L20.7071 19.2929C21.0976 19.6834 21.0976 20.3166 20.7071 20.7071C20.3166 21.0976 19.6834 21.0976 19.2929 20.7071L12 13.4142L4.70711 20.7071C4.31658 21.0976 3.68342 21.0976 3.29289 20.7071C2.90237 20.3166 2.90237 19.6834 3.29289 19.2929L10.5858 12L3.29289 4.70711C2.90237 4.31658 2.90237 3.68342 3.29289 3.29289Z\" fill=\"#F2F2F3\" />\r\n    </svg>\r\n  );\r\n};\r\n","// COMPONENT\r\nexport const LogoIcon = () => {\r\n  // RENDER\r\n  return (\r\n    <svg width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <g filter=\"url(#filter0_f_849_9587)\">\r\n        <path d=\"M30.6668 29.8193C31.1755 29.219 30.7267 28.3497 29.9399 28.3376C22.8833 28.2287 16.8898 28.3646 9.59712 28.809C8.81186 28.8568 8.40263 29.7452 8.93765 30.322C11.6102 33.2032 15.3896 35 19.5794 35C24.0077 35 27.9776 32.9927 30.6668 29.8193Z\" stroke=\"#4C4CFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n        <path d=\"M7.07348 12.1598C6.67114 12.8297 7.24275 13.6145 8.01852 13.5208C16.1184 12.5428 22.2272 12.2462 30.6868 12.7494C31.47 12.796 31.9955 11.9733 31.5482 11.3287C28.8908 7.49901 24.5205 5 19.5794 5C14.2892 5 9.65327 7.86456 7.07348 12.1598Z\" stroke=\"#4C4CFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      </g>\r\n      <g filter=\"url(#filter1_f_849_9587)\">\r\n        <path d=\"M30.6668 29.8193C31.1755 29.219 30.7267 28.3497 29.9399 28.3376C22.8833 28.2287 16.8898 28.3646 9.59712 28.809C8.81186 28.8568 8.40263 29.7452 8.93765 30.322C11.6102 33.2032 15.3896 35 19.5794 35C24.0077 35 27.9776 32.9927 30.6668 29.8193Z\" stroke=\"#4C4CFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n        <path d=\"M7.07348 12.1598C6.67114 12.8297 7.24275 13.6145 8.01852 13.5208C16.1184 12.5428 22.2272 12.2462 30.6868 12.7494C31.47 12.796 31.9955 11.9733 31.5482 11.3287C28.8908 7.49901 24.5205 5 19.5794 5C14.2892 5 9.65327 7.86456 7.07348 12.1598Z\" stroke=\"#4C4CFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      </g>\r\n      <path d=\"M30.6668 29.8193C31.1755 29.219 30.7267 28.3497 29.9399 28.3376C22.8833 28.2287 16.8898 28.3646 9.59712 28.809C8.81186 28.8568 8.40263 29.7452 8.93765 30.322C11.6102 33.2032 15.3896 35 19.5794 35C24.0077 35 27.9776 32.9927 30.6668 29.8193Z\" stroke=\"#4C4CFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M7.07348 12.1598C6.67114 12.8297 7.24275 13.6145 8.01852 13.5208C16.1184 12.5428 22.2272 12.2462 30.6868 12.7494C31.47 12.796 31.9955 11.9733 31.5482 11.3287C28.8908 7.49901 24.5205 5 19.5794 5C14.2892 5 9.65327 7.86456 7.07348 12.1598Z\" stroke=\"#4C4CFF\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M30.6668 29.8193C31.1755 29.219 30.7267 28.3497 29.9399 28.3376C22.8833 28.2287 16.8898 28.3646 9.59712 28.809C8.81186 28.8568 8.40263 29.7452 8.93765 30.322C11.6102 33.2032 15.3896 35 19.5794 35C24.0077 35 27.9776 32.9927 30.6668 29.8193Z\" stroke=\"white\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M7.07348 12.1598C6.67114 12.8297 7.24275 13.6145 8.01852 13.5208C16.1184 12.5428 22.2272 12.2462 30.6868 12.7494C31.47 12.796 31.9955 11.9733 31.5482 11.3287C28.8908 7.49901 24.5205 5 19.5794 5C14.2892 5 9.65327 7.86456 7.07348 12.1598Z\" stroke=\"white\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <g filter=\"url(#filter2_f_849_9587)\">\r\n        <path d=\"M34.0743 22.3125C34.2319 21.2661 33.417 20.3644 32.3622 20.2793C23.3161 19.5501 16.1297 19.4321 6.79862 19.9169C5.74046 19.9719 4.89937 20.8523 5.02882 21.904C5.13156 22.7387 5.30136 23.552 5.53252 24.3381C5.77115 25.1496 6.55924 25.6496 7.40462 25.6202C16.2597 25.3127 23.205 25.2892 31.7978 25.5205C32.6435 25.5432 33.4275 25.037 33.6597 24.2235C33.8371 23.6023 33.9762 22.9643 34.0743 22.3125Z\" stroke=\"#E33CD5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      </g>\r\n      <g filter=\"url(#filter3_f_849_9587)\">\r\n        <path d=\"M34.0743 22.3125C34.2319 21.2661 33.417 20.3644 32.3622 20.2793C23.3161 19.5501 16.1297 19.4321 6.79862 19.9169C5.74046 19.9719 4.89937 20.8523 5.02882 21.904C5.13156 22.7387 5.30136 23.552 5.53252 24.3381C5.77115 25.1496 6.55924 25.6496 7.40462 25.6202C16.2597 25.3127 23.205 25.2892 31.7978 25.5205C32.6435 25.5432 33.4275 25.037 33.6597 24.2235C33.8371 23.6023 33.9762 22.9643 34.0743 22.3125Z\" stroke=\"#E33CD5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      </g>\r\n      <path d=\"M34.0743 22.3125C34.2319 21.2661 33.417 20.3644 32.3622 20.2793C23.3161 19.5501 16.1297 19.4321 6.79862 19.9169C5.74046 19.9719 4.89937 20.8523 5.02882 21.904C5.13156 22.7387 5.30136 23.552 5.53252 24.3381C5.77115 25.1496 6.55924 25.6496 7.40462 25.6202C16.2597 25.3127 23.205 25.2892 31.7978 25.5205C32.6435 25.5432 33.4275 25.037 33.6597 24.2235C33.8371 23.6023 33.9762 22.9643 34.0743 22.3125Z\" stroke=\"#E33CD5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M34.0743 22.3125C34.2319 21.2661 33.417 20.3644 32.3622 20.2793C23.3161 19.5501 16.1297 19.4321 6.79862 19.9169C5.74046 19.9719 4.89937 20.8523 5.02882 21.904C5.13156 22.7387 5.30136 23.552 5.53252 24.3381C5.77115 25.1496 6.55924 25.6496 7.40462 25.6202C16.2597 25.3127 23.205 25.2892 31.7978 25.5205C32.6435 25.5432 33.4275 25.037 33.6597 24.2235C33.8371 23.6023 33.9762 22.9643 34.0743 22.3125Z\" stroke=\"white\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <g filter=\"url(#filter4_f_849_9587)\">\r\n        <path d=\"M4.91321 16.625C6.86833 15.125 8.82345 15.125 10.7786 16.625C12.7337 18.125 14.6888 18.125 16.6439 16.625C18.5991 15.125 20.5542 15.125 22.5093 16.625C24.4644 18.125 26.4196 18.125 28.3747 16.625C30.3298 15.125 32.2849 15.125 34.2401 16.625\" stroke=\"#00CCCC\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      </g>\r\n      <g filter=\"url(#filter5_f_849_9587)\">\r\n        <path d=\"M4.91321 16.625C6.86833 15.125 8.82345 15.125 10.7786 16.625C12.7337 18.125 14.6888 18.125 16.6439 16.625C18.5991 15.125 20.5542 15.125 22.5093 16.625C24.4644 18.125 26.4196 18.125 28.3747 16.625C30.3298 15.125 32.2849 15.125 34.2401 16.625\" stroke=\"#00CCCC\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      </g>\r\n      <path d=\"M4.91321 16.625C6.86833 15.125 8.82345 15.125 10.7786 16.625C12.7337 18.125 14.6888 18.125 16.6439 16.625C18.5991 15.125 20.5542 15.125 22.5093 16.625C24.4644 18.125 26.4196 18.125 28.3747 16.625C30.3298 15.125 32.2849 15.125 34.2401 16.625\" stroke=\"#00CCCC\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <path d=\"M4.91321 16.625C6.86833 15.125 8.82345 15.125 10.7786 16.625C12.7337 18.125 14.6888 18.125 16.6439 16.625C18.5991 15.125 20.5542 15.125 22.5093 16.625C24.4644 18.125 26.4196 18.125 28.3747 16.625C30.3298 15.125 32.2849 15.125 34.2401 16.625\" stroke=\"white\" strokeWidth=\"0.5\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n      <g filter=\"url(#filter6_f_849_9587)\">\r\n        <ellipse rx=\"0.736837\" ry=\"0.559799\" transform=\"matrix(0.881086 0.472957 0.45642 -0.889764 14.616 31.2359)\" stroke=\"#4C4CFF\" />\r\n        <ellipse rx=\"1.10147\" ry=\"0.748885\" transform=\"matrix(0.964427 0.264348 -0.25339 0.967364 25.9608 9.76562)\" stroke=\"#4C4CFF\" />\r\n        <ellipse rx=\"0.734315\" ry=\"0.561663\" transform=\"matrix(0.964428 -0.264347 -0.25339 -0.967364 24.093 31.2374)\" stroke=\"#4C4CFF\" />\r\n        <ellipse cx=\"18.4769\" cy=\"10.25\" rx=\"1.09975\" ry=\"0.75\" transform=\"rotate(180 18.4769 10.25)\" stroke=\"#4C4CFF\" />\r\n        <ellipse rx=\"1.10147\" ry=\"0.748885\" transform=\"matrix(0.964427 0.264349 -0.253389 0.967364 21.5618 7.51562)\" stroke=\"#4C4CFF\" />\r\n        <ellipse rx=\"0.733173\" ry=\"0.5625\" transform=\"matrix(1 0 0 -1 19.5767 32.5625)\" stroke=\"#4C4CFF\" />\r\n        <ellipse rx=\"1.10526\" ry=\"0.746399\" transform=\"matrix(0.881086 -0.472956 0.456421 0.889764 13.5594 9.18679)\" stroke=\"#4C4CFF\" />\r\n      </g>\r\n      <g filter=\"url(#filter7_f_849_9587)\">\r\n        <ellipse rx=\"0.736837\" ry=\"0.559799\" transform=\"matrix(0.881086 0.472957 0.45642 -0.889764 14.616 31.2359)\" stroke=\"#4C4CFF\" />\r\n        <ellipse rx=\"1.10147\" ry=\"0.748885\" transform=\"matrix(0.964427 0.264348 -0.25339 0.967364 25.9608 9.76562)\" stroke=\"#4C4CFF\" />\r\n        <ellipse rx=\"0.734315\" ry=\"0.561663\" transform=\"matrix(0.964428 -0.264347 -0.25339 -0.967364 24.093 31.2374)\" stroke=\"#4C4CFF\" />\r\n        <ellipse cx=\"18.4769\" cy=\"10.25\" rx=\"1.09975\" ry=\"0.75\" transform=\"rotate(180 18.4769 10.25)\" stroke=\"#4C4CFF\" />\r\n        <ellipse rx=\"1.10147\" ry=\"0.748885\" transform=\"matrix(0.964427 0.264349 -0.253389 0.967364 21.5618 7.51562)\" stroke=\"#4C4CFF\" />\r\n        <ellipse rx=\"0.733173\" ry=\"0.5625\" transform=\"matrix(1 0 0 -1 19.5767 32.5625)\" stroke=\"#4C4CFF\" />\r\n        <ellipse rx=\"1.10526\" ry=\"0.746399\" transform=\"matrix(0.881086 -0.472956 0.456421 0.889764 13.5594 9.18679)\" stroke=\"#4C4CFF\" />\r\n      </g>\r\n      <ellipse rx=\"0.736837\" ry=\"0.559799\" transform=\"matrix(0.881086 0.472957 0.45642 -0.889764 14.616 31.2359)\" stroke=\"#4C4CFF\" />\r\n      <ellipse rx=\"1.10147\" ry=\"0.748885\" transform=\"matrix(0.964427 0.264348 -0.25339 0.967364 25.9608 9.76562)\" stroke=\"#4C4CFF\" />\r\n      <ellipse rx=\"0.734315\" ry=\"0.561663\" transform=\"matrix(0.964428 -0.264347 -0.25339 -0.967364 24.093 31.2374)\" stroke=\"#4C4CFF\" />\r\n      <ellipse cx=\"18.4769\" cy=\"10.25\" rx=\"1.09975\" ry=\"0.75\" transform=\"rotate(180 18.4769 10.25)\" stroke=\"#4C4CFF\" />\r\n      <ellipse rx=\"1.10147\" ry=\"0.748885\" transform=\"matrix(0.964427 0.264349 -0.253389 0.967364 21.5618 7.51562)\" stroke=\"#4C4CFF\" />\r\n      <ellipse rx=\"0.733173\" ry=\"0.5625\" transform=\"matrix(1 0 0 -1 19.5767 32.5625)\" stroke=\"#4C4CFF\" />\r\n      <ellipse rx=\"1.10526\" ry=\"0.746399\" transform=\"matrix(0.881086 -0.472956 0.456421 0.889764 13.5594 9.18679)\" stroke=\"#4C4CFF\" />\r\n      <ellipse rx=\"0.736837\" ry=\"0.559799\" transform=\"matrix(0.881086 0.472957 0.45642 -0.889764 14.616 31.2359)\" stroke=\"white\" strokeWidth=\"0.5\" />\r\n      <ellipse rx=\"1.10147\" ry=\"0.748885\" transform=\"matrix(0.964427 0.264348 -0.25339 0.967364 25.9608 9.76562)\" stroke=\"white\" strokeWidth=\"0.5\" />\r\n      <ellipse rx=\"0.734315\" ry=\"0.561663\" transform=\"matrix(0.964428 -0.264347 -0.25339 -0.967364 24.093 31.2374)\" stroke=\"white\" strokeWidth=\"0.5\" />\r\n      <ellipse cx=\"18.4769\" cy=\"10.25\" rx=\"1.09975\" ry=\"0.75\" transform=\"rotate(180 18.4769 10.25)\" stroke=\"white\" strokeWidth=\"0.5\" />\r\n      <ellipse rx=\"1.10147\" ry=\"0.748885\" transform=\"matrix(0.964427 0.264349 -0.253389 0.967364 21.5618 7.51562)\" stroke=\"white\" strokeWidth=\"0.5\" />\r\n      <ellipse rx=\"0.733173\" ry=\"0.5625\" transform=\"matrix(1 0 0 -1 19.5767 32.5625)\" stroke=\"white\" strokeWidth=\"0.5\" />\r\n      <ellipse rx=\"1.10526\" ry=\"0.746399\" transform=\"matrix(0.881086 -0.472956 0.456421 0.889764 13.5594 9.18679)\" stroke=\"white\" strokeWidth=\"0.5\" />\r\n      <defs>\r\n        <filter id=\"filter0_f_849_9587\" x=\"2.43463\" y=\"0.5\" width=\"33.7848\" height=\"39\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"2\" result=\"effect1_foregroundBlur_849_9587\" />\r\n        </filter>\r\n        <filter id=\"filter1_f_849_9587\" x=\"2.43463\" y=\"0.5\" width=\"33.7848\" height=\"39\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"2\" result=\"effect1_foregroundBlur_849_9587\" />\r\n        </filter>\r\n        <filter id=\"filter2_f_849_9587\" x=\"0.515259\" y=\"15.125\" width=\"38.0792\" height=\"14.9963\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"2\" result=\"effect1_foregroundBlur_849_9587\" />\r\n        </filter>\r\n        <filter id=\"filter3_f_849_9587\" x=\"0.515259\" y=\"15.125\" width=\"38.0792\" height=\"14.9963\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"2\" result=\"effect1_foregroundBlur_849_9587\" />\r\n        </filter>\r\n        <filter id=\"filter4_f_849_9587\" x=\"0.413208\" y=\"11\" width=\"38.3268\" height=\"11.25\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"2\" result=\"effect1_foregroundBlur_849_9587\" />\r\n        </filter>\r\n        <filter id=\"filter5_f_849_9587\" x=\"0.413208\" y=\"11\" width=\"38.3268\" height=\"11.25\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"2\" result=\"effect1_foregroundBlur_849_9587\" />\r\n        </filter>\r\n        <filter id=\"filter6_f_849_9587\" x=\"8.03107\" y=\"2.23315\" width=\"23.5081\" height=\"35.3918\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"2\" result=\"effect1_foregroundBlur_849_9587\" />\r\n        </filter>\r\n        <filter id=\"filter7_f_849_9587\" x=\"8.03107\" y=\"2.23315\" width=\"23.5081\" height=\"35.3918\" filterUnits=\"userSpaceOnUse\" colorInterpolationFilters=\"sRGB\">\r\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\r\n          <feBlend mode=\"normal\" in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\" />\r\n          <feGaussianBlur stdDeviation=\"2\" result=\"effect1_foregroundBlur_849_9587\" />\r\n        </filter>\r\n      </defs>\r\n    </svg>\r\n  );\r\n};\r\n","import { useCallback, useState } from 'react';\r\n\r\n// HOOK\r\nexport const useToggle = (initialState: boolean) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const on = useCallback(() => {\r\n    setState(true);\r\n  }, []);\r\n\r\n  const off = useCallback(() => {\r\n    setState(false);\r\n  }, []);\r\n\r\n  const toggle = useCallback(() => {\r\n    setState((value) => !value);\r\n  }, []);\r\n\r\n  return {\r\n    state,\r\n\r\n    on,\r\n    off,\r\n    toggle\r\n  };\r\n};\r\n","// router\r\nimport { useRouteMatch } from 'react-router-dom';\r\n\r\n// HOOK\r\nexport const useIngredientUrl = (ingredientId: string) => {\r\n  // Get the current url\r\n  let { url } = useRouteMatch();\r\n  if (url === '/') {\r\n    url = '';\r\n  }\r\n  // Form the url to ingredient details\r\n  const path = `${url}/ingredients/${ingredientId}`;\r\n\r\n  // RETURN\r\n  return {\r\n    path\r\n  };\r\n};\r\n","// third-party libraries\r\nimport axios, { AxiosInstance } from 'axios';\r\n\r\n// SERVICE\r\nexport abstract class HttpBaseService {\r\n  protected readonly axiosInstance: AxiosInstance;\r\n\r\n  protected readonly baseUrl: string;\r\n\r\n  // CONSTRUCTOR\r\n  constructor(baseUrl: string) {\r\n    this.baseUrl = baseUrl;\r\n\r\n    // Initialize base settings of axios instance\r\n    this.axiosInstance = axios.create({\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      baseURL: this.baseUrl\r\n    });\r\n  }\r\n}\r\n","/* eslint-disable no-param-reassign */\r\n\r\nimport { AxiosRequestConfig, AxiosError } from 'axios';\r\n// aux.\r\nimport { HttpBaseService } from './http-base.service';\r\nimport { TokenServiceInterface } from './token.service';\r\n\r\nexport abstract class HttpBaseTokenService extends HttpBaseService {\r\n  protected readonly tokenService: TokenServiceInterface;\r\n\r\n  // CONSTRUCTOR\r\n  constructor(baseUrl: string, tokenService: TokenServiceInterface) {\r\n    super(baseUrl);\r\n\r\n    this.tokenService = tokenService;\r\n\r\n    // Set interceptors\r\n    this.setRequestInterceptors();\r\n    this.setReposnseInterceptors();\r\n  }\r\n\r\n  // The method realizes the token refreshing.\r\n  // Every inherited class has to make its own realization\r\n  protected abstract refreshToken(): void;\r\n\r\n  // The method sets request interceptors\r\n  private setRequestInterceptors(): void {\r\n    this.axiosInstance.interceptors.request.use(\r\n      (config: AxiosRequestConfig) => {\r\n        config.headers.authorization = `Bearer ${this.tokenService.getAccessToken()}`;\r\n        config.headers.isRetry = false;\r\n        return config;\r\n      }\r\n    );\r\n  }\r\n\r\n  // The method sets response interceptors\r\n  private setReposnseInterceptors(): void {\r\n    this.axiosInstance.interceptors.response.use(\r\n      (config) => config,\r\n      async (error: AxiosError) => {\r\n        // Save an original request\r\n        const originalRequest = error.config;\r\n        // Determine if it's retry or the first request\r\n        const isRetry = Boolean(originalRequest.headers?.isRetry || false);\r\n        // Determine if need to update token\r\n        const { needUpdateToken = false } = originalRequest.headers;\r\n\r\n        // Do the token refreshing,\r\n        // if the conditions are met\r\n        if (error.response?.status === 403 && originalRequest && !isRetry && needUpdateToken) {\r\n          originalRequest.headers.isRetry = true;\r\n          await this.refreshToken();\r\n          return this.axiosInstance.request(originalRequest);\r\n        }\r\n        throw error;\r\n      }\r\n    );\r\n  }\r\n}\r\n","// OPTIONS TYPE\r\nexport interface SocketServiceCreateOptions {\r\n  openHandler?: (event?: Event) => unknown;\r\n  closeHandler?: (event?: CloseEvent) => unknown;\r\n  errorHandler?: (event: Event) => unknown;\r\n  messageHandler?: (event: MessageEvent) => unknown;\r\n}\r\n\r\n// SOCKET\r\nexport abstract class SocketBaseService {\r\n  protected socket: WebSocket | null = null;\r\n\r\n  protected url = '';\r\n\r\n  protected abstract createSocket(): void;\r\n\r\n  // Function to create and start a web-socket connection\r\n  public start(url: string, options?: SocketServiceCreateOptions): void {\r\n    // If there is an active socket, close it\r\n    if (this.socket) {\r\n      this.socket.close();\r\n    }\r\n\r\n    this.url = url;\r\n\r\n    // Create a socket\r\n    this.createSocket();\r\n\r\n    if (!this.socket) {\r\n      return;\r\n    }\r\n\r\n    // Add a socket event handlers\r\n    // -> onOpen\r\n    if (options?.openHandler) {\r\n      this.socket.onopen = options.openHandler;\r\n    }\r\n    // -> onClose\r\n    if (options?.closeHandler) {\r\n      this.socket.onclose = options.closeHandler;\r\n    }\r\n    // -> onError\r\n    if (options?.errorHandler) {\r\n      this.socket.onerror = options.errorHandler;\r\n    }\r\n    // -> onMessage\r\n    if (options?.messageHandler) {\r\n      this.socket.onmessage = options.messageHandler;\r\n    }\r\n  }\r\n\r\n  // Function to close a web-socket connection\r\n  public close(): void {\r\n    if (this.socket) {\r\n      this.socket.close();\r\n    }\r\n  }\r\n}\r\n","// services\r\nimport { SocketBaseService } from 'services/base';\r\n\r\n// SERVICE\r\nclass FeedSocketService extends SocketBaseService {\r\n  protected createSocket(): void {\r\n    this.socket = new WebSocket(this.url);\r\n  }\r\n}\r\n\r\n// Create and export the instance of the service\r\nexport const feedSocketService = new FeedSocketService();\r\n","export const formatNumber = (data: number): string => {\r\n  return new Intl.NumberFormat('ru-RU').format(data);\r\n};\r\n","import moment from 'moment';\r\nimport 'moment/locale/ru';\r\n\r\nexport const formatDate = (strDate: string) => {\r\n  return moment(new Date(strDate)).calendar();\r\n};\r\n","// models\r\nimport { IngredientModel, OrderModel } from 'models';\r\n// services\r\nimport { OrderResponseInterface } from 'services/orders';\r\n\r\n// FUNCTION\r\nexport const convertRawOrdersToOrders = (\r\n  orders: OrderResponseInterface[],\r\n  ingredientsCollection: IngredientModel[]\r\n): OrderModel[] => {\r\n  // Create an empty array of orders\r\n  const result: OrderModel[] = [];\r\n  orders.forEach((order) => {\r\n    let price = 0;\r\n    // In this variable we will add found ingredients\r\n    const ingredients: IngredientModel[] = [];\r\n    order.ingredients.forEach((ingredientStr) => {\r\n      // Find an ingredient by id\r\n      const ingredientInStore = ingredientsCollection.find(\r\n        (ingredient) => ingredient.id === ingredientStr\r\n      );\r\n      // If the ingredient is found, add one to our collection\r\n      if (ingredientInStore) {\r\n        ingredients.push(ingredientInStore);\r\n        price += ingredientInStore.price;\r\n      }\r\n    });\r\n    // Create a new order\r\n    const newOrder: OrderModel = {\r\n      id: order._id,\r\n      orderNumber: order.number,\r\n      name: order.name,\r\n      creationDate: order.createdAt,\r\n      status: order.status,\r\n      price,\r\n      ingredients\r\n    };\r\n    // Add the new order\r\n    result.push(newOrder);\r\n  });\r\n\r\n  return result;\r\n};\r\n","// Custom types\r\nimport { BurgerConstructorModel } from 'models';\r\n\r\n// FUNCTION\r\nexport const getIDsFromConstructor = (\r\n  constructor: BurgerConstructorModel\r\n): string[] => {\r\n  const ids: string[] = [];\r\n\r\n  // from the top\r\n  const { bun } = constructor;\r\n  if (bun) {\r\n    ids.push(bun.id);\r\n    ids.push(bun.id);\r\n  }\r\n\r\n  // from the middle\r\n  const { middle } = constructor;\r\n  middle.forEach((item) => ids.push(item.id));\r\n\r\n  return ids;\r\n};\r\n","export class AppSettingsService {\r\n  static getBaseUrl(): string {\r\n    return process.env.REACT_APP_BASE_URL || '';\r\n  }\r\n\r\n  static urlSocketFeed(): string {\r\n    return process.env.REACT_APP_BASE_URL_WS_FEED || '';\r\n  }\r\n\r\n  static urlSocketOrders(): string {\r\n    return process.env.REACT_APP_BASE_URL_WS_ORDERS || '';\r\n  }\r\n}\r\n","export class ParameterNotValidatedError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'ParameterNotValidatedError';\r\n  }\r\n}\r\n","export class CreateOrderError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'CreateOrderError';\r\n  }\r\n}\r\n","// services\r\nimport { HttpBaseService } from 'services/base';\r\nimport { AppSettingsService } from 'services/app-settings';\r\n// types\r\nimport { ParameterNotValidatedError } from '../parameter-not-validated.error';\r\n// aux.\r\nimport {\r\n  OrderResponseInterface,\r\n  GetOrdersResponseInterface,\r\n  CreateOrderResponseInterface\r\n} from './types';\r\nimport { CreateOrderError } from './errors';\r\n\r\n// SERVICE\r\nexport class OrdersService extends HttpBaseService {\r\n  // CreateOrder url\r\n  private urlOrders = '/api/orders';\r\n\r\n  // CREATE ORDER\r\n  public async createOrder(ingredients: string[], token: string): Promise<OrderResponseInterface> {\r\n    const defaultMessage = 'При создании заказа произошла ошибка.';\r\n\r\n    try {\r\n      if (!ingredients.length) {\r\n        throw new ParameterNotValidatedError('В заказе не указаны ингредиенты.');\r\n      }\r\n\r\n      // Do the request\r\n      const response = await fetch(`${this.baseUrl}${this.urlOrders}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8',\r\n          authorization: `Bearer ${token}`\r\n        },\r\n        body: JSON.stringify({ ingredients })\r\n      });\r\n\r\n      // Get data from the response\r\n      const responseData: CreateOrderResponseInterface = await response.json();\r\n\r\n      // If we got response,\r\n      // but response has an error\r\n      if (!responseData.success) {\r\n        throw new CreateOrderError(responseData.message || defaultMessage);\r\n      }\r\n\r\n      const rawOrder: OrderResponseInterface = {\r\n        ...responseData.order,\r\n        ingredients: responseData.order.ingredients.map((ingredient) => ingredient._id)\r\n      };\r\n\r\n      return rawOrder;\r\n    } catch (err) {\r\n      // log errors. For example,\r\n      // if (err instanceof CreateOrderError) {\r\n      //  log(err.message)\r\n      // }\r\n      throw new Error(defaultMessage);\r\n    }\r\n  }\r\n\r\n  // GET ORDER\r\n  public async getOrder(orderNumber: string): Promise<OrderResponseInterface> {\r\n    const defaultMessage = 'Не удалось получить информацию о заказе';\r\n\r\n    try {\r\n      if (!orderNumber.trim()) {\r\n        throw new ParameterNotValidatedError('Не указан номер заказа.');\r\n      }\r\n\r\n      // Do the request\r\n      const response = await fetch(`${this.baseUrl}${this.urlOrders}/${orderNumber}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json;charset=utf-8'\r\n        }\r\n      });\r\n\r\n      // Get data from the response\r\n      const responseData: GetOrdersResponseInterface = await response.json();\r\n\r\n      // If we got response,\r\n      // but response has an error\r\n      if (!responseData.success) {\r\n        throw new Error(defaultMessage);\r\n      }\r\n\r\n      // Check if the response has an order info\r\n      if (responseData.orders.length === 0) {\r\n        throw new Error(defaultMessage);\r\n      }\r\n\r\n      return responseData.orders[0];\r\n    } catch {\r\n      throw new Error(defaultMessage);\r\n    }\r\n  }\r\n}\r\n\r\n// Create the service instance\r\nexport const ordersService = new OrdersService(\r\n  AppSettingsService.getBaseUrl() // baseUrl\r\n);\r\n","// services\r\nimport { SocketBaseService } from 'services/base';\r\n\r\n// SERVICE\r\nclass OrdersSocketService extends SocketBaseService {\r\n  private token = '';\r\n\r\n  public setToken(token: string) {\r\n    this.token = token;\r\n  }\r\n\r\n  protected createSocket(): void {\r\n    // Create a socket\r\n    this.socket = new WebSocket(`${this.url}?token=${this.token}`);\r\n  }\r\n}\r\n\r\n// Create and export the instance of the service\r\nexport const ordersSocketService = new OrdersSocketService();\r\n","// redux\r\nimport { createAction, createAsyncThunk } from '@reduxjs/toolkit';\r\n// store\r\nimport { AppState } from 'store';\r\n// models\r\nimport { OrderModel } from 'models';\r\n// services\r\nimport { ordersService } from 'services/orders';\r\n// aux.\r\nimport { convertRawOrdersToOrders } from 'utils';\r\n\r\n// ACTIONS\r\nexport const setFeedCurrentOrderAction = createAction<{ order: OrderModel }>('SET_FEED_CURRENT_ORDER');\r\nexport const clearFeedCurrentOrderAction = createAction<void>('CLEAR_FEED_CURRENT_ORDER');\r\n\r\nexport const getFeedOrderAction = createAsyncThunk<\r\n  { order: OrderModel },\r\n  { orderNumber: string },\r\n  {\r\n    state: AppState,\r\n    rejectValue: { error: string }\r\n  }\r\n>(\r\n  'feed/getOrder',\r\n  async ({ orderNumber }, thunkApi) => {\r\n    try {\r\n      const order = await ordersService.getOrder(orderNumber);\r\n      // Get state from the store\r\n      const { ingredients } = thunkApi.getState().ingredients;\r\n      const orders = convertRawOrdersToOrders([order], ingredients);\r\n      // If we can't convert the raw order to the \"system\" order,\r\n      // return the error\r\n      if (orders.length === 0) {\r\n        return thunkApi.rejectWithValue({ error: 'Не удалось получить информацию о заказе' });\r\n      }\r\n      // Return the order\r\n      return { order: orders[0] };\r\n    } catch (err) {\r\n      const msg = (err as Error).message;\r\n      return thunkApi.rejectWithValue({ error: msg });\r\n    }\r\n  }\r\n);\r\n\r\n// Actions, concerning web-socket\r\nexport const wsStartAction = createAction<void>('WS_START');\r\nexport const wsStartSuccessAction = createAction<void>('WS_START_SUCCESS');\r\n\r\nexport const wsCloseAction = createAction<void>('WS_CLOSE');\r\nexport const wsCloseSuccessAction = createAction<void>('WS_CLOSE_SUCCESS');\r\n\r\nexport const wsErrorAction = createAction<void>('WS_ERROR');\r\n\r\nexport const wsSetFeedTotalOrdersAction = createAction<{ amount: number }>('WS_SET_FEED_TOTAL_ORDERS');\r\nexport const wsSetFeedTotalTodayOrdersAction = createAction<{ amount: number }>('WS_SET_FEED_TOTAL_TODAY_ORDERS');\r\nexport const wsSetFeedOrders = createAction<{ orders: OrderModel[] }>('WS_SET_FEED_ORDERS');\r\n\r\n// Combine all ws-actions into one object\r\nexport const feedWsActions = {\r\n  wsStartAction,\r\n  wsStartSuccessAction,\r\n\r\n  wsCloseAction,\r\n  wsCloseSuccessAction,\r\n\r\n  wsErrorAction,\r\n\r\n  wsSetFeedTotalOrdersAction,\r\n  wsSetFeedTotalTodayOrdersAction,\r\n  wsSetFeedOrders\r\n};\r\n\r\n// Get type of combined actions\r\nexport type feedWsActionsType = typeof feedWsActions;\r\n","/* eslint-disable no-param-reassign */\r\n\r\n// redux\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// models\r\nimport { OrderModel } from 'models';\r\n// actions\r\nimport {\r\n  setFeedCurrentOrderAction,\r\n  clearFeedCurrentOrderAction,\r\n\r\n  getFeedOrderAction,\r\n\r\n  // for a socket\r\n  wsStartAction,\r\n  wsStartSuccessAction,\r\n\r\n  wsCloseAction,\r\n  wsCloseSuccessAction,\r\n\r\n  wsErrorAction,\r\n\r\n  wsSetFeedTotalOrdersAction,\r\n  wsSetFeedTotalTodayOrdersAction,\r\n  wsSetFeedOrders\r\n} from './feed-actions';\r\n\r\n// STATE TYPE\r\ninterface FeedState {\r\n  orders: OrderModel[];\r\n  currentOrder: OrderModel | null;\r\n\r\n  loading: boolean;\r\n  errorText: string;\r\n\r\n  total: number;\r\n  totalToday: number;\r\n\r\n  wsLoading: boolean;\r\n  wsConnected: boolean;\r\n  wsErrorText: string;\r\n}\r\n\r\n// THE INITIAL STATE\r\nconst initialState: FeedState = {\r\n  orders: [],\r\n  currentOrder: null,\r\n\r\n  loading: false,\r\n  errorText: '',\r\n\r\n  total: 0,\r\n  totalToday: 0,\r\n\r\n  // We start \"wsLoading\", when start the socket,\r\n  // and finish \"wsLoading\", when:\r\n  // - an error occurs;\r\n  // - the first data in the store will be received;\r\n  // - or we start to close the socket;\r\n  wsLoading: false,\r\n\r\n  wsConnected: false,\r\n  wsErrorText: ''\r\n};\r\n\r\n// REDUCER\r\nexport const feedReducer = createReducer<FeedState>(initialState, (builder) => {\r\n  builder\r\n    // setCurrentFeedOrderAction\r\n    .addCase(\r\n      setFeedCurrentOrderAction,\r\n      (state, action) => {\r\n        state.currentOrder = action.payload.order;\r\n      }\r\n    )\r\n    // clearCurrentFeedOrderAction\r\n    .addCase(\r\n      clearFeedCurrentOrderAction,\r\n      (state) => {\r\n        state.currentOrder = null;\r\n      }\r\n    )\r\n    // FEED GET ORDER\r\n    // We use \"currentOrder\" state\r\n    // to store info about the order\r\n    // -> pending\r\n    .addCase(\r\n      getFeedOrderAction.pending,\r\n      (state) => {\r\n        state.currentOrder = null;\r\n        state.loading = true;\r\n        state.errorText = '';\r\n      }\r\n    )\r\n    // -> success\r\n    .addCase(\r\n      getFeedOrderAction.fulfilled,\r\n      (state, action) => {\r\n        state.loading = false;\r\n        state.currentOrder = action.payload.order;\r\n      }\r\n    )\r\n    // -> failure\r\n    .addCase(\r\n      getFeedOrderAction.rejected,\r\n      (state, action) => {\r\n        state.loading = false;\r\n        state.errorText = action.payload?.error || '';\r\n      }\r\n    )\r\n\r\n    // SOCKET -> Start\r\n    .addCase(\r\n      wsStartAction,\r\n      (state) => {\r\n        state.orders = [];\r\n        state.wsLoading = true;\r\n        state.wsConnected = false;\r\n        state.wsErrorText = '';\r\n      }\r\n    )\r\n    .addCase(\r\n      wsStartSuccessAction,\r\n      (state) => {\r\n        state.wsConnected = true;\r\n      }\r\n    )\r\n    // SOCKET -> Close\r\n    .addCase(\r\n      wsCloseAction,\r\n      (state) => {\r\n        state.wsErrorText = '';\r\n        state.orders = [];\r\n      }\r\n    )\r\n    .addCase(\r\n      wsCloseSuccessAction,\r\n      (state) => {\r\n        state.wsConnected = false;\r\n      }\r\n    )\r\n    // SOCKET -> Error\r\n    .addCase(\r\n      wsErrorAction,\r\n      (state) => {\r\n        state.orders = [];\r\n        state.wsConnected = false;\r\n        state.wsLoading = false;\r\n        state.wsErrorText = 'Ошибка при подключении к серверу';\r\n      }\r\n    )\r\n\r\n    // SOCKET -> setFeedTotalOrdersAction\r\n    .addCase(\r\n      wsSetFeedTotalOrdersAction,\r\n      (state, action) => {\r\n        state.wsLoading = false;\r\n        state.wsErrorText = '';\r\n        state.total = action.payload.amount;\r\n      }\r\n    )\r\n    // SOCKET -> setFeedTotalTodayOrdersAction\r\n    .addCase(\r\n      wsSetFeedTotalTodayOrdersAction,\r\n      (state, action) => {\r\n        state.wsLoading = false;\r\n        state.wsErrorText = '';\r\n        state.totalToday = action.payload.amount;\r\n      }\r\n    )\r\n    // SOCKET -> wsSetFeedOrders\r\n    .addCase(\r\n      wsSetFeedOrders,\r\n      (state, action) => {\r\n        state.wsLoading = false;\r\n        state.wsErrorText = '';\r\n        state.orders = action.payload.orders;\r\n      }\r\n    );\r\n});\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n// store\r\nimport { AppState } from 'store';\r\n\r\n// SELECTORS\r\n// Select loading\r\nconst loadingSelector = createSelector(\r\n  (state: AppState) => state.feed.loading,\r\n  (loading) => ({ loading })\r\n);\r\n\r\n// Select error text\r\nconst errorTextSelector = createSelector(\r\n  (state: AppState) => state.feed.errorText,\r\n  (errorText) => ({ errorText })\r\n);\r\n\r\n// Select current order\r\nconst currentOrderSelector = createSelector(\r\n  (state: AppState) => state.feed.currentOrder,\r\n  (currentOrder) => ({ currentOrder })\r\n);\r\n\r\n// Select orders\r\nconst dataSelector = createSelector(\r\n  (state: AppState) => state.feed.orders,\r\n  (orders) => ({ orders })\r\n);\r\n\r\n// Select orders length\r\nconst dataLengthSelector = createSelector(\r\n  (state: AppState) => state.feed.orders.length,\r\n  (dataLength) => ({ dataLength })\r\n);\r\n\r\n// Select order by id\r\nconst orderByIdSelector = (id: string) => createSelector(\r\n  (state: AppState) => state.feed.orders.find((item) => item.id === id),\r\n  (order) => ({\r\n    order: order || null\r\n  })\r\n);\r\n\r\n// Select the fields \"total\" and \"totalToday\"\r\nconst totalSelector = createSelector(\r\n  (state: AppState) => state.feed.total,\r\n  (state: AppState) => state.feed.totalToday,\r\n  (total, totalToday) => ({\r\n    total,\r\n    totalToday\r\n  })\r\n);\r\n\r\n// Select order numbers\r\nconst orderNumbersSelector = createSelector(\r\n  (state: AppState) => state.feed.orders\r\n    .filter((order) => order.status === 'done')\r\n    .map((order) => `${order.orderNumber}` || ''),\r\n  (state: AppState) => state.feed.orders\r\n    .filter((order) => order.status === 'pending')\r\n    .map((order) => `${order.orderNumber}` || ''),\r\n  (completedOrders, pendingOrders) => ({\r\n    completedOrders,\r\n    pendingOrders\r\n  })\r\n);\r\n\r\n// Select ws loading\r\nconst wsLoadingSelector = createSelector(\r\n  (state: AppState) => state.feed.wsLoading,\r\n  (wsLoading) => ({ wsLoading })\r\n);\r\n\r\n// Select ws connected\r\nconst wsConnectedSelector = createSelector(\r\n  (state: AppState) => state.feed.wsConnected,\r\n  (wsConnected) => ({ wsConnected })\r\n);\r\n\r\n// Select ws error text\r\nconst wsErrorTextSelector = createSelector(\r\n  (state: AppState) => state.feed.wsErrorText,\r\n  (wsErrorText) => ({ wsErrorText })\r\n);\r\n\r\n// Combine all selectors\r\nexport const feedSelectors = {\r\n  loadingSelector,\r\n  errorTextSelector,\r\n  currentOrderSelector,\r\n  dataSelector,\r\n  dataLengthSelector,\r\n  orderByIdSelector,\r\n\r\n  totalSelector,\r\n  orderNumbersSelector,\r\n\r\n  wsLoadingSelector,\r\n  wsConnectedSelector,\r\n  wsErrorTextSelector\r\n};\r\n","// third-party libraries\r\nimport Cookies from 'js-cookie';\r\n// types\r\nimport { TokenServiceInterface } from 'services/base';\r\n\r\n// SERVICE\r\nclass TokenService implements TokenServiceInterface {\r\n  // Stores the access token prefix in storage\r\n  private accessTokenPrefix = 'Bearer';\r\n\r\n  // Stores the access token name in storage\r\n  private accessTokenName = 'accessToken';\r\n\r\n  // Stores the refresh token name in storage\r\n  private refreshTokenName = 'refreshToken';\r\n\r\n  // -> ACCESS TOKEN\r\n  private extractToken(token: string): string {\r\n    if (token.indexOf(this.accessTokenPrefix) === 0) {\r\n      return token.split(`${this.accessTokenPrefix} `)[1];\r\n    }\r\n    return token;\r\n  }\r\n\r\n  public saveAccessToken(token: string): void {\r\n    const inThirtyDays = new Date(new Date().getTime() + 30 * 60 * 60 * 1000);\r\n    Cookies.set(\r\n      this.accessTokenName,\r\n      this.extractToken(token),\r\n      { expires: inThirtyDays }\r\n    );\r\n  }\r\n\r\n  public getAccessToken(): string {\r\n    return Cookies.get(this.accessTokenName) || '';\r\n  }\r\n\r\n  public clearAccessToken(): void {\r\n    Cookies.remove(this.accessTokenName);\r\n  }\r\n\r\n  // -> REFRESH TOKEN\r\n  public saveRefreshToken(token: string): void {\r\n    localStorage.setItem(this.refreshTokenName, token);\r\n  }\r\n\r\n  public getRefreshToken(): string {\r\n    return localStorage.getItem(this.refreshTokenName) || '';\r\n  }\r\n\r\n  public clearRefreshToken(): void {\r\n    localStorage.removeItem(this.refreshTokenName);\r\n  }\r\n}\r\n\r\n// Create tokenService instance\r\nexport const tokenService = new TokenService();\r\n","// redux\r\nimport { createAction, createAsyncThunk } from '@reduxjs/toolkit';\r\n// store\r\nimport { AppState } from 'store';\r\n// services\r\nimport { ordersService } from 'services/orders';\r\nimport { tokenService } from 'services/token';\r\n// types\r\nimport { OrderModel } from 'models';\r\n// utils\r\nimport {\r\n  convertRawOrdersToOrders,\r\n  getIDsFromConstructor\r\n} from 'utils';\r\n\r\n// ACTIONS\r\nexport const setCurrentOrderAction = createAction<{ order: OrderModel }>('SET_CURRENT_ORDER');\r\nexport const clearCurrentOrderAction = createAction<void>('CLEAR_CURRENT_ORDER');\r\n\r\n// CREATE ORDER\r\nexport const createOrderAction = createAsyncThunk<\r\n  { order: OrderModel },\r\n  void,\r\n  {\r\n    state: AppState,\r\n    rejectValue: { error: string }\r\n  }\r\n>(\r\n  'orders/createOrder',\r\n  async (_, thunkApi) => {\r\n    try {\r\n      // Get constructor from the store\r\n      const { burgerConstructor } = thunkApi.getState().burgerConstructor;\r\n      // Get ids of ingredients from the burger constructor\r\n      const ids = getIDsFromConstructor(burgerConstructor);\r\n      // Get token\r\n      const token = tokenService.getAccessToken();\r\n      // Do the request\r\n      const newOrder = await ordersService.createOrder(ids, token);\r\n\r\n      // Get ingredients from the store\r\n      const { ingredients } = thunkApi.getState().ingredients;\r\n\r\n      const orders = convertRawOrdersToOrders([newOrder], ingredients);\r\n\r\n      // Return the order\r\n      return { order: orders[0] };\r\n    } catch (err) {\r\n      const msg = (err as Error).message;\r\n      return thunkApi.rejectWithValue({ error: msg });\r\n    }\r\n  }\r\n);\r\n\r\n// GET ORDER\r\nexport const getOrderAction = createAsyncThunk<\r\n  { order: OrderModel },\r\n  { orderNumber: string },\r\n  {\r\n    state: AppState,\r\n    rejectValue: { error: string }\r\n  }\r\n>(\r\n  'orders/getOrder',\r\n  async ({ orderNumber }, thunkApi) => {\r\n    try {\r\n      const order = await ordersService.getOrder(orderNumber);\r\n      // Get ingredients from the store\r\n      const { ingredients } = thunkApi.getState().ingredients;\r\n      const orders = convertRawOrdersToOrders([order], ingredients);\r\n      // If we can't convert the raw order to the \"system\" order,\r\n      // return the error\r\n      if (orders.length === 0) {\r\n        return thunkApi.rejectWithValue({ error: 'Не удалось получить информацию о заказе' });\r\n      }\r\n      // Return the order\r\n      return { order: orders[0] };\r\n    } catch (err) {\r\n      const msg = (err as Error).message;\r\n      return thunkApi.rejectWithValue({ error: msg });\r\n    }\r\n  }\r\n);\r\n\r\n// Actions, concerning web-socket\r\nexport const wsOrdersStartAction = createAction<void>('WS_ORDERS_START');\r\nexport const wsOrdersStartSuccessAction = createAction<void>('WS_ORDERS_START_SUCCESS');\r\n\r\nexport const wsOrdersCloseAction = createAction<void>('WS_ORDERS_CLOSE');\r\nexport const wsOrdersCloseSuccessAction = createAction<void>('WS_ORDERS_CLOSE_SUCCESS');\r\n\r\nexport const wsOrdersErrorAction = createAction<{ error: string }>('WS_ORDERS_ERROR');\r\n\r\nexport const wsOrdersSetOrders = createAction<{ orders: OrderModel[] }>('WS_ORDERS_SET_ORDERS');\r\n\r\n// Combine all actions into one object\r\nexport const ordersSocketActions = {\r\n  wsOrdersStartAction,\r\n  wsOrdersStartSuccessAction,\r\n\r\n  wsOrdersCloseAction,\r\n  wsOrdersCloseSuccessAction,\r\n\r\n  wsOrdersErrorAction,\r\n\r\n  wsOrdersSetOrders\r\n};\r\n\r\n// Get type of combined actions\r\nexport type ordersSocketActionsType = typeof ordersSocketActions;\r\n","/* eslint-disable no-param-reassign */\r\n\r\n// redux\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// models\r\nimport { OrderModel } from 'models';\r\n// actions\r\nimport {\r\n  createOrderAction,\r\n  getOrderAction,\r\n\r\n  setCurrentOrderAction,\r\n  clearCurrentOrderAction,\r\n\r\n  wsOrdersStartAction,\r\n  wsOrdersStartSuccessAction,\r\n  wsOrdersCloseAction,\r\n  wsOrdersCloseSuccessAction,\r\n  wsOrdersErrorAction,\r\n  wsOrdersSetOrders\r\n} from './orders-actions';\r\n\r\n// STATE TYPE\r\ninterface OrdersState {\r\n  order: OrderModel | null;\r\n  loading: boolean;\r\n  errorText: string;\r\n\r\n  orders: OrderModel[];\r\n  wsLoading: boolean;\r\n  wsConnected: boolean;\r\n  wsErrorText: string;\r\n}\r\n\r\n// THE INITIAL STATE\r\nconst initialState: OrdersState = {\r\n  order: null,\r\n  loading: false,\r\n  errorText: '',\r\n\r\n  orders: [],\r\n  wsLoading: false,\r\n  wsConnected: false,\r\n  wsErrorText: ''\r\n};\r\n\r\n// REDUCER\r\nexport const ordersReducer = createReducer<OrdersState>(initialState, (builder) => {\r\n  builder\r\n    // CREATE ORDER\r\n    .addCase(\r\n      createOrderAction.pending,\r\n      (state) => {\r\n        state.order = null;\r\n        state.loading = true;\r\n        state.errorText = '';\r\n      }\r\n    )\r\n    .addCase(\r\n      createOrderAction.fulfilled,\r\n      (state, action) => {\r\n        state.loading = false;\r\n        // Save the order in the store\r\n        state.order = action.payload.order;\r\n      }\r\n    )\r\n    .addCase(\r\n      createOrderAction.rejected,\r\n      (state, action) => {\r\n        state.loading = false;\r\n        state.errorText = action.payload?.error || '';\r\n      }\r\n    )\r\n\r\n    // SET CURRENT ORDER\r\n    .addCase(\r\n      setCurrentOrderAction,\r\n      (state, action) => {\r\n        state.order = action.payload.order;\r\n      }\r\n    )\r\n    // CLEAR CURRENT ORDER\r\n    .addCase(\r\n      clearCurrentOrderAction,\r\n      (state) => {\r\n        state.order = null;\r\n      }\r\n    )\r\n    // GET ORDER - start\r\n    .addCase(\r\n      getOrderAction.pending,\r\n      (state) => {\r\n        state.order = null;\r\n        state.loading = true;\r\n        state.errorText = '';\r\n      }\r\n    )\r\n    // GET ORDER - success\r\n    .addCase(\r\n      getOrderAction.fulfilled,\r\n      (state, action) => {\r\n        state.loading = false;\r\n        state.order = action.payload.order;\r\n      }\r\n    )\r\n    // GET ORDER - failure\r\n    .addCase(\r\n      getOrderAction.rejected,\r\n      (state, action) => {\r\n        state.loading = false;\r\n        state.errorText = action.payload?.error || '';\r\n      }\r\n    )\r\n\r\n    // SOCKET -> Start\r\n    .addCase(\r\n      wsOrdersStartAction,\r\n      (state) => {\r\n        state.orders = [];\r\n        state.wsLoading = true;\r\n        state.wsConnected = false;\r\n        state.wsErrorText = '';\r\n      }\r\n    )\r\n    .addCase(\r\n      wsOrdersStartSuccessAction,\r\n      (state) => {\r\n        state.wsConnected = true;\r\n      }\r\n    )\r\n    // SOCKET -> Close\r\n    .addCase(\r\n      wsOrdersCloseAction,\r\n      (state) => {\r\n        state.wsErrorText = '';\r\n        state.orders = [];\r\n      }\r\n    )\r\n    .addCase(\r\n      wsOrdersCloseSuccessAction,\r\n      (state) => {\r\n        state.wsConnected = false;\r\n      }\r\n    )\r\n    // SOCKET -> Error\r\n    .addCase(\r\n      wsOrdersErrorAction,\r\n      (state, action) => {\r\n        state.orders = [];\r\n        state.wsConnected = false;\r\n        state.wsLoading = false;\r\n        state.wsErrorText = action.payload.error;\r\n      }\r\n    )\r\n    // SOCKET -> wsOrdersSetOrders\r\n    .addCase(\r\n      wsOrdersSetOrders,\r\n      (state, action) => {\r\n        state.orders = action.payload.orders;\r\n        state.wsLoading = false;\r\n      }\r\n    );\r\n});\r\n","// redux\r\nimport { createSelector } from '@reduxjs/toolkit';\r\n// store\r\nimport { AppState } from 'store';\r\n\r\n// SELECTORS\r\n// Select loading\r\nconst loadingSelector = createSelector(\r\n  (state: AppState) => state.orders.loading,\r\n  (loading) => ({ loading })\r\n);\r\n\r\n// Select error text\r\nconst errorTextSelector = createSelector(\r\n  (state: AppState) => state.orders.errorText,\r\n  (errorText) => ({ errorText })\r\n);\r\n\r\n// Select the current order\r\nconst currentOrderSelector = createSelector(\r\n  (state: AppState) => state.orders.order,\r\n  (order) => ({ order })\r\n);\r\n\r\n// Select orders\r\nconst dataSelector = createSelector(\r\n  (state: AppState) => state.orders.orders,\r\n  (orders) => ({ orders })\r\n);\r\n\r\n// Select orders length\r\nconst dataLengthSelector = createSelector(\r\n  (state: AppState) => state.orders.orders.length,\r\n  (dataLength) => ({ dataLength })\r\n);\r\n\r\n// Select order by id\r\nconst orderByIdSelector = (id: string) => createSelector(\r\n  (state: AppState) => state.orders.orders.find((item) => item.id === id),\r\n  (order) => ({\r\n    order: order || null\r\n  })\r\n);\r\n\r\n// Select ws loading\r\nconst wsLoadingSelector = createSelector(\r\n  (state: AppState) => state.orders.wsLoading,\r\n  (wsLoading) => ({ wsLoading })\r\n);\r\n\r\n// Select ws connected\r\nconst wsConnectedSelector = createSelector(\r\n  (state: AppState) => state.orders.wsConnected,\r\n  (wsConnected) => ({ wsConnected })\r\n);\r\n\r\n// Select ws error text\r\nconst wsErrorTextSelector = createSelector(\r\n  (state: AppState) => state.orders.wsErrorText,\r\n  (wsErrorText) => ({ wsErrorText })\r\n);\r\n\r\n// Combine all selectors into one object\r\nexport const ordersSelectors = {\r\n  loadingSelector,\r\n  errorTextSelector,\r\n  dataSelector,\r\n  dataLengthSelector,\r\n  orderByIdSelector,\r\n  currentOrderSelector,\r\n\r\n  wsLoadingSelector,\r\n  wsConnectedSelector,\r\n  wsErrorTextSelector\r\n};\r\n","// redux\r\nimport { createAction } from '@reduxjs/toolkit';\r\n// types\r\nimport { TAppMode } from './types';\r\n\r\nexport const setModeAction = createAction<{ mode: TAppMode }>('SET_MODE');\r\n","/* eslint-disable no-param-reassign */\r\n\r\n// redux\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// actions\r\nimport {\r\n  setModeAction\r\n} from './common-actions';\r\n// types\r\nimport { TAppMode } from './types';\r\n\r\n// STATE TYPE\r\ninterface CommonState {\r\n  mode: TAppMode;\r\n}\r\n\r\n// THE INITIAL STATE\r\nconst initialState: CommonState = {\r\n  mode: 'desktop'\r\n};\r\n\r\n// REDUCER\r\nexport const commonReducer = createReducer<CommonState>(initialState, (builder) => {\r\n  builder\r\n    // setCurrentFeedOrderAction\r\n    .addCase(\r\n      setModeAction,\r\n      (state, action) => {\r\n        state.mode = action.payload.mode;\r\n      }\r\n    );\r\n});\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n// store\r\nimport { AppState } from 'store';\r\n\r\n// SELECTORS\r\n// Select mode\r\nconst modeSelector = createSelector(\r\n  (state: AppState) => state.common.mode,\r\n  (mode) => ({ mode })\r\n);\r\n\r\n// Combine all selectors\r\nexport const commonSelectors = {\r\n  modeSelector\r\n};\r\n","export class AuthError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'AuthError';\r\n  }\r\n}\r\n","/* eslint-disable class-methods-use-this */\r\n\r\n// third-party libraries\r\nimport { AxiosError } from 'axios';\r\n// services\r\nimport { HttpBaseTokenService, TokenServiceInterface } from 'services/base';\r\nimport { AppSettingsService } from 'services/app-settings';\r\nimport { tokenService as tokenServiceExternal } from 'services/token';\r\n// utils\r\nimport { instanceOfAxiosError } from 'utils';\r\n// types\r\nimport { UserModel } from 'models';\r\n// aux.\r\nimport {\r\n  ILoginResponse,\r\n  IRegisterResponse,\r\n  IGetUserResponse,\r\n  ILogoutResponse,\r\n  IUpdateUserResponse,\r\n  IUpdateTokenResponse,\r\n  IForgetPasswordResponse,\r\n  IResetPasswordResponse\r\n} from './types';\r\nimport { AuthError } from './errors';\r\nimport { ParameterNotValidatedError } from '../parameter-not-validated.error';\r\nimport { AuthUrlsInterface, authUrls } from './auth-urls';\r\n\r\n// Auxiliary interface used to infer an axios response data\r\n// to type with the message field\r\ninterface WithMessageResponseInterface {\r\n  message: string\r\n}\r\n\r\n// SERVICE\r\nclass AuthService extends HttpBaseTokenService {\r\n  private urls: AuthUrlsInterface;\r\n\r\n  // CONSTRUCTOR\r\n  constructor(\r\n    baseUrl: string,\r\n    tokenService: TokenServiceInterface,\r\n    urls: AuthUrlsInterface\r\n  ) {\r\n    super(baseUrl, tokenService);\r\n    this.urls = urls;\r\n  }\r\n\r\n  protected async refreshToken(): Promise<void> {\r\n    // Get the refresh token\r\n    const refreshToken = this.tokenService.getRefreshToken();\r\n\r\n    // Do a request\r\n    const { data } = await this.axiosInstance.post<IUpdateTokenResponse>(\r\n      this.urls.urlToken,\r\n      JSON.stringify({ token: refreshToken })\r\n    );\r\n\r\n    if (!data.success) {\r\n      throw new AuthError('Не удалось обновить токен.');\r\n    }\r\n\r\n    this.tokenService.saveAccessToken(data.accessToken);\r\n    this.tokenService.saveRefreshToken(data.refreshToken);\r\n  }\r\n\r\n  // The method extracts a message from the error object and returns it\r\n  //\r\n  private getMessageFromError(err: unknown, defaultMessage: string): string {\r\n    let msg = defaultMessage;\r\n\r\n    if (err instanceof ParameterNotValidatedError) {\r\n      msg = err.message;\r\n    } else if (err instanceof AuthError) {\r\n      msg = err.message;\r\n\r\n    // Try to get message from the axios response data\r\n    } else if (instanceOfAxiosError((err as AxiosError))) {\r\n      //\r\n      const axiosResponse = (err as AxiosError).response;\r\n      let axiosMessage = (axiosResponse?.data as WithMessageResponseInterface).message;\r\n      axiosMessage = axiosMessage || defaultMessage;\r\n\r\n      if (axiosMessage.toLowerCase() === 'email or password are incorrect') {\r\n        msg = 'Email или пароль введены неверно.';\r\n      } else if (axiosMessage.toLowerCase() === 'user already exists') {\r\n        msg = 'Пользователь с таким Email уже зарегистрирован.';\r\n      }\r\n    }\r\n\r\n    return msg;\r\n  }\r\n\r\n  // LOGIN\r\n  public async login(user: UserModel): Promise<UserModel> {\r\n    const defaultMessage = 'Не удалось авторизоваться в системе.';\r\n\r\n    try {\r\n      let msg = '';\r\n      // Check the email\r\n      if (!user.email.trim()) {\r\n        msg += 'Не заполнен \"Email\".;';\r\n      }\r\n      // Check the password\r\n      if (!user.password.trim()) {\r\n        msg += 'Не заполнен \"Пароль\".;';\r\n      }\r\n      // Throw an error, if any field isn't filled in\r\n      if (msg) {\r\n        throw new ParameterNotValidatedError(msg);\r\n      }\r\n\r\n      // Do the request\r\n      const { data } = await this.axiosInstance.post<ILoginResponse>(\r\n        this.urls.urlLogin,\r\n        JSON.stringify({\r\n          email: user.email,\r\n          password: user.password\r\n        })\r\n      );\r\n\r\n      // Save access token in cookies\r\n      this.tokenService.saveAccessToken(data.accessToken);\r\n      // Save refresh token in the local storage\r\n      this.tokenService.saveRefreshToken(data.refreshToken);\r\n\r\n      const { user: { name, email }, accessToken } = data;\r\n\r\n      // Return an user object\r\n      return {\r\n        name,\r\n        email,\r\n        password: '',\r\n        token: accessToken\r\n      };\r\n    } catch (err: unknown) {\r\n      throw new AuthError(this.getMessageFromError(err, defaultMessage));\r\n    }\r\n  }\r\n\r\n  // REGISTER\r\n  public async register(user: UserModel): Promise<UserModel> {\r\n    const defaultMessage = 'Не удалось создать пользователя.';\r\n\r\n    try {\r\n      let msg = '';\r\n      // Check the name\r\n      if (!user.name.trim()) {\r\n        msg += 'Не заполнено \"Имя пользователя\".;';\r\n      }\r\n      // Check the email\r\n      if (!user.email.trim()) {\r\n        msg += 'Не заполнен \"Email\".;';\r\n      }\r\n      // Check the password\r\n      if (!user.password.trim()) {\r\n        msg += 'Не заполнен \"Пароль\".;';\r\n      }\r\n      // Throw an error, if any field isn't filled in\r\n      if (msg) {\r\n        throw new ParameterNotValidatedError(msg);\r\n      }\r\n\r\n      // Do the request\r\n      const { data } = await this.axiosInstance.post<IRegisterResponse>(\r\n        this.urls.urlRegister,\r\n        JSON.stringify({\r\n          email: user.email,\r\n          password: user.password,\r\n          name: user.name\r\n        })\r\n      );\r\n\r\n      // Save access token in cookies\r\n      this.tokenService.saveAccessToken(data.accessToken);\r\n      // Save refresh token in local storage\r\n      this.tokenService.saveRefreshToken(data.refreshToken);\r\n\r\n      const { user: { name, email }, accessToken } = data;\r\n\r\n      // Return an user object\r\n      return {\r\n        name,\r\n        email,\r\n        password: '',\r\n        token: accessToken\r\n      };\r\n    } catch (err) {\r\n      throw new AuthError(this.getMessageFromError(err, defaultMessage));\r\n    }\r\n  }\r\n\r\n  // LOGOUT\r\n  public async logout(): Promise<boolean> {\r\n    const defaultMessage = 'При выходе из системы произошла ошибка.';\r\n\r\n    // Get the refresh token\r\n    const refreshToken = this.tokenService.getRefreshToken();\r\n\r\n    try {\r\n      // Throw an error, if token isn't provided\r\n      if (!refreshToken.trim()) {\r\n        throw new ParameterNotValidatedError('Не указан токен для выхода из системы.');\r\n      }\r\n\r\n      // Do the request\r\n      await this.axiosInstance.post<ILogoutResponse>(\r\n        this.urls.urlLogout,\r\n        JSON.stringify({\r\n          token: refreshToken\r\n        })\r\n      );\r\n\r\n      // Remove access token in cookies\r\n      this.tokenService.clearAccessToken();\r\n      // Remove refresh token in local storage\r\n      this.tokenService.clearRefreshToken();\r\n\r\n      // Return true\r\n      return true;\r\n    } catch (err) {\r\n      throw new AuthError(this.getMessageFromError(err, defaultMessage));\r\n    }\r\n  }\r\n\r\n  // UPDATE USER\r\n  public async updateUser(user: UserModel): Promise<UserModel> {\r\n    const defaultMessage = 'Не удалось обновить информацию о пользователе.';\r\n\r\n    // Copy the user object to the new variable\r\n    const newUser: Record<string, unknown> = {\r\n      ...user\r\n    };\r\n    // If password isn't changed, it will be empty.\r\n    // So no need to pass the one to the request\r\n    if (newUser.password) {\r\n      delete newUser.password;\r\n    }\r\n\r\n    try {\r\n      // Do the request\r\n      const { data } = await this.axiosInstance.patch<IUpdateUserResponse>(\r\n        this.urls.urlUser,\r\n        JSON.stringify(newUser)\r\n      );\r\n\r\n      // Get the access token\r\n      const token = this.tokenService.getAccessToken();\r\n\r\n      // Return an user object\r\n      return {\r\n        name: data.user.name,\r\n        email: data.user.email,\r\n        token,\r\n        password: '' // We don't have to save a password in the store,\r\n        // so we pass the empty value\r\n      };\r\n    } catch (err) {\r\n      throw new AuthError(this.getMessageFromError(err, defaultMessage));\r\n    }\r\n  }\r\n\r\n  // GET USER\r\n  public async getUser(): Promise<UserModel> {\r\n    const defaultMessage = 'При получении пользователя произошла ошибка.';\r\n    // Get the access token\r\n    const accessToken = this.tokenService.getAccessToken();\r\n\r\n    try {\r\n      // Throw an error, if token isn't provided\r\n      if (!accessToken.trim()) {\r\n        throw new ParameterNotValidatedError('Не указан токен для получения пользователя.');\r\n      }\r\n\r\n      // Do the request\r\n      const { data } = await this.axiosInstance.get<IGetUserResponse>(\r\n        this.urls.urlUser,\r\n        {\r\n          headers: {\r\n            needUpdateToken: true\r\n          }\r\n        }\r\n      );\r\n\r\n      // Get the access token\r\n      const token = this.tokenService.getAccessToken();\r\n\r\n      // Return an user object\r\n      return {\r\n        name: data.user.name,\r\n        email: data.user.email,\r\n        token,\r\n        password: '',\r\n      };\r\n    } catch (err) {\r\n      throw new AuthError(this.getMessageFromError(err, defaultMessage));\r\n    }\r\n  }\r\n\r\n  // FORGET PASSWORD\r\n  public async forgetPassword(email: string): Promise<boolean> {\r\n    const defaultMessage = 'При попытке восстановить пароль произошла ошибка.';\r\n\r\n    try {\r\n      let msg = '';\r\n      // Check the email\r\n      if (!email.trim()) {\r\n        msg += 'Не заполнен \"Email\".;';\r\n      }\r\n      // Throw an error, if any field isn't filled in\r\n      if (msg) {\r\n        throw new ParameterNotValidatedError(msg);\r\n      }\r\n\r\n      // Do the request\r\n      const { data } = await this.axiosInstance.post<IForgetPasswordResponse>(\r\n        this.urls.urlForgetPassword,\r\n        JSON.stringify({\r\n          email\r\n        })\r\n      );\r\n\r\n      // Request wasn't successful\r\n      if (!data.success) {\r\n        throw new AuthError(defaultMessage);\r\n      }\r\n\r\n      // If all is OK, return true\r\n      return true;\r\n    } catch (err: unknown) {\r\n      throw new AuthError(this.getMessageFromError(err, defaultMessage));\r\n    }\r\n  }\r\n\r\n  // RESET PASSWORD\r\n  public async resetPassword(password: string, code: string): Promise<boolean> {\r\n    const defaultMessage = 'При попытке восстановить пароль произошла ошибка.';\r\n\r\n    try {\r\n      let msg = '';\r\n      // Check the password\r\n      if (!password.trim()) {\r\n        msg += 'Не заполнен \"Пароль\".;';\r\n      }\r\n      // Check the code\r\n      if (!code.trim()) {\r\n        msg += 'Не задан код восстановления.;';\r\n      }\r\n      // Throw an error, if any field isn't filled in\r\n      if (msg) {\r\n        throw new ParameterNotValidatedError(msg);\r\n      }\r\n\r\n      // Do the request\r\n      const { data } = await this.axiosInstance.post<IResetPasswordResponse>(\r\n        this.urls.urlResetPassword,\r\n        JSON.stringify({\r\n          password,\r\n          token: code\r\n        })\r\n      );\r\n\r\n      // Request wasn't successful\r\n      if (!data.success) {\r\n        throw new AuthError(defaultMessage);\r\n      }\r\n\r\n      // If all is OK, return true\r\n      return true;\r\n    } catch (err: unknown) {\r\n      throw new AuthError(this.getMessageFromError(err, defaultMessage));\r\n    }\r\n  }\r\n}\r\n\r\n// Create service\r\nexport const authService = new AuthService(\r\n  AppSettingsService.getBaseUrl(),\r\n  tokenServiceExternal,\r\n  authUrls\r\n);\r\n","import { AxiosError } from 'axios';\r\n\r\nexport const instanceOfAxiosError = (object: AxiosError): object is AxiosError => {\r\n  return 'isAxiosError' in object;\r\n};\r\n","export interface AuthUrlsInterface {\r\n  // login url\r\n  urlLogin: string;\r\n  // register url\r\n  urlRegister: string;\r\n  // logout url\r\n  urlLogout: string;\r\n  // update token url\r\n  urlToken: string;\r\n  // user url\r\n  urlUser: string;\r\n  // forget password url\r\n  urlForgetPassword: string;\r\n  // reset password url\r\n  urlResetPassword: string\r\n}\r\n\r\nexport const authUrls = {\r\n  // register url\r\n  urlRegister: '/api/auth/register',\r\n  // login url\r\n  urlLogin: '/api/auth/login',\r\n  // logout url\r\n  urlLogout: '/api/auth/logout',\r\n  // update token url\r\n  urlToken: '/api/auth/token',\r\n  // user url\r\n  urlUser: '/api/auth/user',\r\n  // forget password url\r\n  urlForgetPassword: '/api/password-reset',\r\n  // reset password url\r\n  urlResetPassword: 'api/password-reset/reset'\r\n};\r\n","// redux\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n// services\nimport { authService } from 'services/auth';\n// types\nimport { UserModel } from 'models';\nimport { IRejectedValue } from 'store/types';\n\n// LOGIN\nexport const loginAction = createAsyncThunk<\n  { user: UserModel },\n  { user: UserModel },\n  {\n    rejectValue: IRejectedValue\n  }\n>(\n  'auth/login',\n  async ({ user }, thunkApi) => {\n    try {\n      const loggedUser = await authService.login(user);\n      return { user: loggedUser };\n    } catch (err) {\n      const msg = (err as Error).message;\n      return thunkApi.rejectWithValue({ error: msg });\n    }\n  }\n);\n\n// REGISTER\nexport const registerAction = createAsyncThunk<\n  { user: UserModel },\n  { user: UserModel },\n  {\n    rejectValue: { error: string }\n  }\n>(\n  'auth/register',\n  async ({ user }, thunkApi) => {\n    try {\n      const registredUser = await authService.register(user);\n      return { user: registredUser };\n    } catch (err) {\n      const msg = (err as Error).message;\n      return thunkApi.rejectWithValue({ error: msg });\n    }\n  }\n);\n\n// LOGOUT\nexport const logoutAction = createAsyncThunk<\n  boolean,\n  void,\n  {\n    rejectValue: { error: string }\n  }\n>(\n  'auth/logout',\n  async (_, thunkApi) => {\n    try {\n      return await authService.logout();\n    } catch (err) {\n      const msg = (err as Error).message;\n      return thunkApi.rejectWithValue({ error: msg });\n    }\n  }\n);\n\n// UPDATE USER\nexport const updateUserAction = createAsyncThunk<\n  { user: UserModel },\n  { user: UserModel },\n  {\n    rejectValue: IRejectedValue\n  }\n>(\n  'auth/updateUser',\n  async ({ user }, thunkApi) => {\n    try {\n      const data = await authService.updateUser(user);\n      return { user: data };\n    } catch (err) {\n      const msg = (err as Error).message;\n      return thunkApi.rejectWithValue({ error: msg });\n    }\n  }\n);\n\n// GET USER\nexport const getUserAction = createAsyncThunk<\n  { user: UserModel },\n  void,\n  {\n    rejectValue: { error: string }\n  }\n>(\n  'auth/getUser',\n  async (_, thunkApi) => {\n    try {\n      const user = await authService.getUser();\n      return { user };\n    } catch (err) {\n      const msg = (err as Error).message;\n      return thunkApi.rejectWithValue({ error: msg });\n    }\n  }\n);\n\n// FORGET PASSWORD\nexport const forgetPasswordAction = createAsyncThunk<\n  boolean,\n  { email: string },\n  {\n    rejectValue: IRejectedValue\n  }\n>(\n  'auth/forgetPassword',\n  async ({ email }, thunkApi) => {\n    try {\n      return await authService.forgetPassword(email);\n    } catch (err) {\n      const msg = (err as Error).message;\n      return thunkApi.rejectWithValue({ error: msg });\n    }\n  }\n);\n\n// RESET PASSWORD\nexport const resetPasswordAction = createAsyncThunk<\n  boolean,\n  { password: string, code: string },\n  {\n    rejectValue: IRejectedValue\n  }\n>(\n  'auth/resetPassword',\n  async ({ password, code }, thunkApi) => {\n    try {\n      return await authService.resetPassword(password, code);\n    } catch (err) {\n      const msg = (err as Error).message;\n      return thunkApi.rejectWithValue({ error: msg });\n    }\n  }\n);\n","/* eslint-disable no-param-reassign */\n\n// redux\nimport { createReducer } from '@reduxjs/toolkit';\n// models\nimport { UserModel } from 'models';\n// actions\nimport {\n  loginAction,\n  registerAction,\n  logoutAction,\n  updateUserAction,\n  getUserAction,\n  forgetPasswordAction,\n  resetPasswordAction\n} from './auth-actions';\n\n// State Type\ninterface AuthState {\n  user: UserModel | null; // in the store we don't save password for an user\n  loading: boolean;\n  errorText: string;\n\n  getUserLoading: boolean;\n  getUserErrorText: string;\n}\n\n// The initial state\nconst initialState: AuthState = {\n  user: null,\n\n  loading: false,\n  errorText: '',\n\n  getUserLoading: false,\n  getUserErrorText: ''\n};\n\n// Reducer\nexport const authReducer = createReducer<AuthState>(initialState, (builder) => {\n  builder\n    // REGISTER\n    .addCase(\n      registerAction.pending,\n      (state) => {\n        state.user = null;\n        state.loading = true;\n        state.errorText = '';\n      }\n    )\n    .addCase(\n      registerAction.fulfilled,\n      (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n      }\n    )\n    .addCase(\n      registerAction.rejected,\n      (state, action) => {\n        state.loading = false;\n        state.errorText = action.payload?.error || '';\n      }\n    )\n    // LOGIN\n    .addCase(\n      loginAction.pending,\n      (state) => {\n        state.user = null;\n        state.loading = true;\n        state.errorText = '';\n      }\n    )\n    .addCase(\n      loginAction.fulfilled,\n      (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n      }\n    )\n    .addCase(\n      loginAction.rejected,\n      (state, action) => {\n        state.loading = false;\n        state.errorText = action.payload?.error || '';\n      }\n    )\n    // LOGOUT\n    .addCase(\n      logoutAction.pending,\n      (state) => {\n        state.loading = true;\n        state.errorText = '';\n      }\n    )\n    .addCase(\n      logoutAction.fulfilled,\n      (state) => {\n        state.loading = false;\n        state.user = null;\n      }\n    )\n    .addCase(\n      logoutAction.rejected,\n      (state, action) => {\n        state.loading = false;\n        state.errorText = action.payload?.error || '';\n      }\n    )\n    // UPDATE USER\n    .addCase(\n      updateUserAction.pending,\n      (state) => {\n        state.loading = true;\n        state.errorText = '';\n      }\n    )\n    .addCase(\n      updateUserAction.fulfilled,\n      (state, action) => {\n        state.loading = false;\n        state.user = action.payload.user;\n      }\n    )\n    .addCase(\n      updateUserAction.rejected,\n      (state, action) => {\n        state.loading = false;\n        state.errorText = action.payload?.error || '';\n      }\n    )\n    // FORGET PASSWORD\n    .addCase(\n      forgetPasswordAction.pending,\n      (state) => {\n        state.loading = true;\n        state.errorText = '';\n      }\n    )\n    .addCase(\n      forgetPasswordAction.fulfilled,\n      (state) => {\n        state.loading = false;\n      }\n    )\n    .addCase(\n      forgetPasswordAction.rejected,\n      (state, action) => {\n        state.loading = false;\n        state.errorText = action.payload?.error || '';\n      }\n    )\n    // RESET PASSWORD\n    .addCase(\n      resetPasswordAction.pending,\n      (state) => {\n        state.loading = true;\n        state.errorText = '';\n      }\n    )\n    .addCase(\n      resetPasswordAction.fulfilled,\n      (state) => {\n        state.loading = false;\n      }\n    )\n    .addCase(\n      resetPasswordAction.rejected,\n      (state, action) => {\n        state.loading = false;\n        state.errorText = action.payload?.error || '';\n      }\n    )\n\n    // GET USER\n    .addCase(\n      getUserAction.pending,\n      (state) => {\n        state.user = null;\n        state.getUserLoading = true;\n        state.getUserErrorText = '';\n      }\n    )\n    .addCase(\n      getUserAction.fulfilled,\n      (state, action) => {\n        state.getUserLoading = false;\n        state.user = action.payload.user;\n      }\n    )\n    .addCase(\n      getUserAction.rejected,\n      (state, action) => {\n        state.getUserLoading = false;\n        state.getUserErrorText = action.payload?.error || '';\n      }\n    );\n});\n","// redux\nimport { createSelector } from '@reduxjs/toolkit';\n// store\nimport { AppState } from 'store';\n\n// SELECTORS\nconst userSelector = createSelector(\n  (state: AppState) => state.auth.user,\n  (user) => ({ user })\n);\n\nconst loadingSelector = createSelector(\n  (state: AppState) => state.auth.loading,\n  (loading) => ({ loading })\n);\n\nconst errorTextSelector = createSelector(\n  (state: AppState) => state.auth.errorText,\n  (errorText) => ({ errorText })\n);\n\nconst getUserLoadingSelector = createSelector(\n  (state: AppState) => state.auth.getUserLoading,\n  (getUserLoading) => ({ getUserLoading })\n);\n\n// const getUserCompletedSelector = createSelector(\n//   (state: AppState) => state.auth.getUserCompleted,\n//   (getUserCompleted) => ({ getUserCompleted })\n// );\n\nconst getUserErrorTextSelector = createSelector(\n  (state: AppState) => state.auth.getUserErrorText,\n  (getUserErrorText) => ({ getUserErrorText })\n);\n\n// Combine all selectors\nexport const authSelectors = {\n  userSelector,\n  loadingSelector,\n  errorTextSelector,\n  getUserLoadingSelector,\n  // getUserCompletedSelector,\n  getUserErrorTextSelector\n};\n","export class IngredientsError extends Error {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.name = 'IngredientsError';\r\n  }\r\n}\r\n","// models\r\nimport { IngredientModel, TIngredientType } from 'models';\r\n// aux.\r\nimport { IngredientsResponseInterface } from '../types';\r\n\r\n// FUNCTION\r\nexport const convertToIngredient = (\r\n  rawIngredient: IngredientsResponseInterface\r\n): IngredientModel => ({\r\n  id: rawIngredient._id,\r\n  name: rawIngredient.name,\r\n  type: rawIngredient.type as TIngredientType,\r\n  proteins: rawIngredient.proteins,\r\n  fat: rawIngredient.fat,\r\n  carbohydrates: rawIngredient.carbohydrates,\r\n  calories: rawIngredient.calories,\r\n  price: rawIngredient.price,\r\n  image: rawIngredient.image,\r\n  imageMobile: rawIngredient.image_mobile,\r\n  imageLarge: rawIngredient.image_large,\r\n  version: rawIngredient.__v\r\n});\r\n","// services\r\nimport { AppSettingsService } from 'services/app-settings';\r\nimport { HttpBaseService } from 'services/base';\r\n// models\r\nimport { IngredientModel } from 'models';\r\n// aux.\r\nimport {\r\n  IngredientsError,\r\n  GetIngredientsResponseInterface\r\n} from './types';\r\nimport {\r\n  convertToIngredient\r\n} from './utils';\r\n\r\n// SERVICE\r\nclass IngredientsService extends HttpBaseService {\r\n  // ingredients url\r\n  private urlIngredients = '/api/ingredients';\r\n\r\n  // -> GET INGREDIENTS\r\n  public async getIngredients(): Promise<IngredientModel[]> {\r\n    const defaultMessage = 'Не удалось загрузить данные.';\r\n\r\n    try {\r\n      const { data: response } = await this.axiosInstance.get<GetIngredientsResponseInterface>(\r\n        this.urlIngredients\r\n      );\r\n\r\n      // We can get response, but response can contain no data\r\n      if (!response.success) {\r\n        throw new IngredientsError(defaultMessage);\r\n      }\r\n\r\n      // no data\r\n      if (response.data.length === 0) {\r\n        throw new IngredientsError('Нет данных');\r\n      }\r\n\r\n      // Get data from the response\r\n      const result: IngredientModel[] = response.data.map(convertToIngredient);\r\n\r\n      return result;\r\n    } catch {\r\n      // log errors.\r\n      throw new Error(defaultMessage);\r\n    }\r\n  }\r\n}\r\n\r\n// Create the service instance\r\nexport const ingredientsService = new IngredientsService(\r\n  AppSettingsService.getBaseUrl() // baseUrl\r\n);\r\n","// redux\r\nimport { createAction, createAsyncThunk } from '@reduxjs/toolkit';\r\n// services\r\nimport { ingredientsService } from 'services/ingredients';\r\n// models\r\nimport { IngredientModel } from 'models';\r\n\r\n// ACTIONS\r\nexport const fetchIngredientsAsyncAction = createAsyncThunk<\r\n  { ingredients: IngredientModel[] },\r\n  void,\r\n  {\r\n    rejectValue: { errorMessage: string }\r\n  }\r\n>(\r\n  'ingredients/fetchIngredients',\r\n  async (_, thunkApi) => {\r\n    try {\r\n      const ingredients = await ingredientsService.getIngredients();\r\n      return { ingredients };\r\n    } catch (err) {\r\n      const msg = (err as Error).message;\r\n      return thunkApi.rejectWithValue({ errorMessage: msg });\r\n    }\r\n  }\r\n);\r\n\r\nexport const setCurrentIngredientAction = createAction<{ ingredient: IngredientModel }>('SET_CURRENT_INGREDIENT');\r\nexport const clearCurrentIngredientAction = createAction<void>('CLEAR_CURRENT_INGREDIENT');\r\n","/* eslint-disable no-param-reassign */\r\n\r\n// redux\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// models\r\nimport { IngredientModel } from 'models';\r\n// actions\r\nimport {\r\n  fetchIngredientsAsyncAction,\r\n  setCurrentIngredientAction,\r\n  clearCurrentIngredientAction\r\n} from './ingredients-actions';\r\n\r\n// STATE TYPE\r\ninterface IngredientsState {\r\n  ingredients: IngredientModel[];\r\n  currentIngredient: IngredientModel | null;\r\n  loading: boolean;\r\n  errorText: string;\r\n}\r\n\r\n// THE INITIAL STATE\r\nexport const initialState: IngredientsState = {\r\n  ingredients: [],\r\n  currentIngredient: null,\r\n  loading: false,\r\n  errorText: ''\r\n};\r\n\r\n// REDUCER\r\nexport const ingredientsReducer = createReducer<IngredientsState>(initialState, (builder) => {\r\n  builder\r\n    // FETCH INGREDIENTS\r\n    .addCase(\r\n      fetchIngredientsAsyncAction.pending,\r\n      (state) => {\r\n        state.ingredients = [];\r\n        state.loading = true;\r\n        state.errorText = '';\r\n      }\r\n    )\r\n    .addCase(\r\n      fetchIngredientsAsyncAction.fulfilled,\r\n      (state, action) => {\r\n        state.loading = false;\r\n        state.ingredients = action.payload.ingredients;\r\n      }\r\n    )\r\n    .addCase(\r\n      fetchIngredientsAsyncAction.rejected,\r\n      (state, action) => {\r\n        state.loading = false;\r\n        state.errorText = action.payload?.errorMessage || '';\r\n      }\r\n    )\r\n    // CURRENT INGREDIENT\r\n    .addCase(\r\n      setCurrentIngredientAction,\r\n      (state, action) => {\r\n        state.currentIngredient = action.payload.ingredient;\r\n      }\r\n    )\r\n    .addCase(\r\n      clearCurrentIngredientAction,\r\n      (state) => {\r\n        state.currentIngredient = null;\r\n      }\r\n    );\r\n});\r\n","// redux\r\nimport { createSelector } from '@reduxjs/toolkit';\r\n// store\r\nimport { AppState } from 'store';\r\n// models\r\nimport { TIngredientType } from 'models';\r\n\r\n// SELECTORS\r\n// Select loading\r\nconst loadingSelector = createSelector(\r\n  (state: AppState) => state.ingredients.loading,\r\n  (loading) => ({ loading })\r\n);\r\n\r\n// Select error text\r\nconst errorTextSelector = createSelector(\r\n  (state: AppState) => state.ingredients.errorText,\r\n  (errorText) => ({ errorText })\r\n);\r\n\r\n// Select ingredients\r\nconst dataSelector = createSelector(\r\n  (state: AppState) => state.ingredients.ingredients,\r\n  (ingredients) => ({ ingredients })\r\n);\r\n\r\n// Select ingredients length\r\nconst dataLengthSelector = createSelector(\r\n  (state: AppState) => state.ingredients.ingredients.length,\r\n  (dataLength) => ({ dataLength })\r\n);\r\n\r\n// Select current ingredient\r\nconst currentIngredientSelector = createSelector(\r\n  (state: AppState) => state.ingredients.currentIngredient,\r\n  (currentIngredient) => ({ currentIngredient })\r\n);\r\n\r\n// Select ingredients by type\r\nconst ingredientsByTypeSelector = (type: TIngredientType) => createSelector(\r\n  (state: AppState) => state.ingredients.ingredients.filter((item) => item.type === type),\r\n  (ingredients) => ({\r\n    ingredients\r\n  })\r\n);\r\n\r\n// Select ingredient by id\r\nconst ingredientByIdSelector = (id: string) => createSelector(\r\n  (state: AppState) => state.ingredients.ingredients.find((item) => item.id === id),\r\n  (ingredient) => ({\r\n    ingredient: ingredient || null\r\n  })\r\n);\r\n\r\n// Combine all selectors\r\nexport const ingredientsSelectors = {\r\n  loadingSelector,\r\n  errorTextSelector,\r\n  dataSelector,\r\n  dataLengthSelector,\r\n  currentIngredientSelector,\r\n\r\n  ingredientsByTypeSelector,\r\n  ingredientByIdSelector\r\n};\r\n","// redux\r\nimport { createAction } from '@reduxjs/toolkit';\r\n// models\r\nimport {\r\n  IngredientModel,\r\n  IngredientWithPositionModel\r\n} from 'models';\r\n\r\n// ACTIONS\r\nexport const addBunAction = createAction<{ ingredient: IngredientModel }>('ADD_BUN_TO_CONSTRUCTOR');\r\n\r\nexport const addIngredientAction = createAction<{ ingredient: IngredientWithPositionModel }>('ADD_INGREDIENT_TO_CONSTRUCTOR');\r\n\r\nexport const deleteIngredientAction = createAction<{ id: string }>('DELETE_INGREDIENT_FROM_CONSTRUCTOR');\r\n\r\nexport const updateMiddleAction = createAction<{ middle: IngredientWithPositionModel[] }>('UPDATE_MIDDLE_IN_CONSTRUCTOR');\r\n\r\nexport const clearConstructorAction = createAction<void>('CLEAR_CONSTRUCTOR');\r\n","/* eslint-disable no-param-reassign */\r\n\r\n// redux\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// models\r\nimport { BurgerConstructorModel } from 'models';\r\n// actions\r\nimport {\r\n  addBunAction,\r\n  addIngredientAction,\r\n  updateMiddleAction,\r\n  deleteIngredientAction,\r\n  clearConstructorAction\r\n} from './burger-constructor-actions';\r\n\r\n// STATE TYPE\r\ninterface BurgerConstructorState {\r\n  burgerConstructor: BurgerConstructorModel;\r\n}\r\n\r\n// THE INITIAL STATE\r\nconst initialState: BurgerConstructorState = {\r\n  burgerConstructor: {\r\n    bun: null,\r\n    middle: []\r\n  }\r\n};\r\n\r\n// REDUCER\r\nexport const burgerConstructorReducer = createReducer<BurgerConstructorState>(\r\n  initialState,\r\n  (builder) => {\r\n    builder\r\n      .addCase(\r\n        addBunAction,\r\n        (state, action) => {\r\n          state.burgerConstructor.bun = action.payload.ingredient;\r\n        }\r\n      )\r\n      .addCase(\r\n        addIngredientAction,\r\n        (state, action) => {\r\n          state.burgerConstructor.middle.push(action.payload.ingredient);\r\n        }\r\n      )\r\n      .addCase(\r\n        deleteIngredientAction,\r\n        (state, action) => {\r\n          state.burgerConstructor.middle = state.burgerConstructor.middle.filter(\r\n            (ingredient) => ingredient.positionId !== action.payload.id\r\n          );\r\n        }\r\n      )\r\n      .addCase(\r\n        updateMiddleAction,\r\n        (state, action) => {\r\n          state.burgerConstructor.middle = [...action.payload.middle];\r\n        }\r\n      )\r\n      .addCase(\r\n        clearConstructorAction,\r\n        (state) => {\r\n          state.burgerConstructor.bun = null;\r\n          state.burgerConstructor.middle = [];\r\n        }\r\n      );\r\n  }\r\n);\r\n","// redux\r\nimport { createSelector } from '@reduxjs/toolkit';\r\n// store\r\nimport { AppState } from 'store';\r\n\r\n// SELECTORS\r\n// Select bun from the constructor\r\nconst bunSelector = createSelector(\r\n  (state: AppState) => state.burgerConstructor.burgerConstructor.bun,\r\n  (bun) => ({ bun })\r\n);\r\n\r\n// Select middle from the constructor\r\nconst middleSelector = createSelector(\r\n  (state: AppState) => state.burgerConstructor.burgerConstructor.middle,\r\n  (middle) => ({ middle })\r\n);\r\n\r\n// Select burger from the constructor\r\nconst dataSelector = createSelector(\r\n  (state: AppState) => state.burgerConstructor.burgerConstructor,\r\n  (burgerConstructor) => ({ burgerConstructor })\r\n);\r\n\r\n// Select total sum of the constructor\r\nconst totalSumSelector = createSelector(\r\n  (state: AppState) => state.burgerConstructor.burgerConstructor.bun,\r\n  (state: AppState) => state.burgerConstructor.burgerConstructor.middle,\r\n  (bun, middle) => {\r\n    // add bun price multiplied by two\r\n    let totalSum = (bun?.price || 0) * 2;\r\n    // add prices of ingredients from the middle\r\n    totalSum += middle.reduce(\r\n      (accumulator, ingredient) => accumulator + ingredient.price,\r\n      0\r\n    );\r\n\r\n    return {\r\n      totalSum\r\n    };\r\n  }\r\n);\r\n\r\n// Ingredient count in the constructor\r\nconst ingredientCountSelector = (id: string) => createSelector(\r\n  // define whether the bun is the required ingredient\r\n  (state: AppState) => state.burgerConstructor.burgerConstructor.bun?.id === id,\r\n  // get the amount of the required ingredient in the burger\r\n  (state: AppState) => state.burgerConstructor.burgerConstructor.middle.filter(\r\n    (item) => item.id === id\r\n  ).length,\r\n  // form the result\r\n  (isBun, middleCount) => {\r\n    const count = middleCount + (isBun ? 2 : 0);\r\n    return { count };\r\n  }\r\n);\r\n\r\n// Union all selectors\r\nexport const burgerConstructorSelectors = {\r\n  bunSelector,\r\n  middleSelector,\r\n  dataSelector,\r\n  totalSumSelector,\r\n  ingredientCountSelector\r\n};\r\n","// redux\r\nimport { createAction } from '@reduxjs/toolkit';\r\n// types\r\nimport { ToastModel } from 'models';\r\n\r\n// ACTIONS\r\nexport const addToastAction = createAction<{ toast: ToastModel }>('ADD_TOAST');\r\n\r\nexport const removeToastAction = createAction<{ id: string }>('REMOVE_TOAST');\r\n\r\nexport const replaceToastAction = createAction<{ toast: ToastModel }>('REPLACE_ACTION');\r\n","/* eslint-disable no-param-reassign */\r\n\r\n// redux\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n// types\r\nimport { ToastModel } from 'models';\r\n// actions\r\nimport {\r\n  addToastAction,\r\n  replaceToastAction,\r\n  removeToastAction\r\n} from './toasts-actions';\r\n\r\n// STATE TYPE\r\ninterface ToastsState {\r\n  toasts: ToastModel[];\r\n}\r\n\r\n// THE INITIAL STATE\r\nconst initialState: ToastsState = { toasts: [] };\r\n\r\n// REDUCER\r\nexport const toastsReducer = createReducer<ToastsState>(initialState, (builder) => {\r\n  builder\r\n    .addCase(\r\n      addToastAction,\r\n      (state, action) => {\r\n        state.toasts.push(action.payload.toast);\r\n      }\r\n    )\r\n    .addCase(\r\n      replaceToastAction,\r\n      (state, action) => {\r\n        state.toasts = [action.payload.toast];\r\n      }\r\n    )\r\n    .addCase(\r\n      removeToastAction,\r\n      (state, action) => {\r\n        const idx = state.toasts.findIndex((item) => item.id === action.payload.id);\r\n        if (idx !== -1) {\r\n          state.toasts.splice(idx, 1);\r\n        }\r\n      }\r\n    );\r\n});\r\n","// redux\r\nimport { createSelector } from '@reduxjs/toolkit';\r\n// store\r\nimport { AppState } from 'store';\r\n\r\n// SELECTORS\r\n// select data\r\nexport const dataSelector = createSelector(\r\n  (state: AppState) => state.toasts.toasts,\r\n  (toasts) => ({ toasts })\r\n);\r\n","// redux\r\nimport { combineReducers } from '@reduxjs/toolkit';\r\n// reducers\r\nimport { commonReducer } from './common';\r\nimport { authReducer } from './auth';\r\nimport { ingredientsReducer } from './ingredients';\r\nimport { burgerConstructorReducer } from './burger-constructor';\r\nimport { feedReducer } from './feed';\r\nimport { ordersReducer } from './orders';\r\nimport { toastsReducer } from './toasts';\r\n\r\n// Define the root reducer\r\nexport const rootReducer = combineReducers({\r\n  common: commonReducer,\r\n  auth: authReducer,\r\n  ingredients: ingredientsReducer,\r\n  burgerConstructor: burgerConstructorReducer,\r\n  orders: ordersReducer,\r\n  feed: feedReducer,\r\n  toasts: toastsReducer\r\n});\r\n","// redux\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport {\r\n  TypedUseSelectorHook,\r\n  useDispatch,\r\n  useSelector\r\n} from 'react-redux';\r\n// middleware\r\nimport {\r\n  feedSocketMiddleware,\r\n  ordersSocketMiddleware\r\n} from 'middleware';\r\n// services\r\nimport { AppSettingsService } from 'services/app-settings';\r\n// store\r\nimport { feedWsActions } from 'store/feed';\r\nimport { ordersSocketActions } from 'store/orders';\r\n\r\n// reducer\r\nimport { rootReducer } from './root-reducer';\r\n\r\n// Create store\r\nexport const store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware()\r\n    .concat(\r\n      feedSocketMiddleware(AppSettingsService.urlSocketFeed(), feedWsActions),\r\n      ordersSocketMiddleware(AppSettingsService.urlSocketOrders(), ordersSocketActions)\r\n    )\r\n});\r\n\r\n// Infer the 'AppState' and 'AppDispatch' types from the store itself\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n\r\n// Create typed hooks instead of plain 'useDispatch' and 'useSelector'\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<AppState> = useSelector;\r\n","// redux\r\nimport { Middleware, MiddlewareAPI } from '@reduxjs/toolkit';\r\n// models\r\nimport { OrderModel } from 'models';\r\n// store\r\nimport { AppDispatch, AppState } from 'store';\r\nimport { feedWsActionsType } from 'store/feed';\r\n// services\r\nimport { SocketServiceCreateOptions } from 'services/base';\r\nimport {\r\n  GetFeedResponseInterface,\r\n  feedSocketService\r\n} from 'services/feed';\r\n// utils\r\nimport { convertRawOrdersToOrders } from 'utils';\r\n\r\n// MIDDLEWARE\r\nexport const feedSocketMiddleware = (wsUrl: string, actions: feedWsActionsType): Middleware<\r\n  unknown,\r\n  AppState\r\n> => (api: MiddlewareAPI<AppDispatch, AppState>) => (next) => (action) => {\r\n// > => (store) => (next) => (action) => {\r\n  const state: AppState = api.getState();\r\n  const { dispatch } = api;\r\n\r\n  // Create a socket\r\n  if (action.type === actions.wsStartAction().type) {\r\n    // Handles to open a socket\r\n    const openHandler = () => {\r\n      dispatch(actions.wsStartSuccessAction());\r\n    };\r\n    // Handles to close a socket\r\n    const closeHandler = () => {\r\n      dispatch(actions.wsCloseSuccessAction());\r\n    };\r\n    // This handler gets called when an error occurs\r\n    const errorHandler = () => {\r\n      dispatch(actions.wsErrorAction());\r\n    };\r\n    // The handler gets called when a socket gets a message\r\n    const messageHandler = (event: MessageEvent) => {\r\n      const { data } = event;\r\n      const parsedData = JSON.parse(data) as GetFeedResponseInterface;\r\n      if (parsedData.success) {\r\n        // -> total\r\n        dispatch(actions.wsSetFeedTotalOrdersAction({ amount: parsedData.total }));\r\n\r\n        // -> total today\r\n        dispatch(actions.wsSetFeedTotalTodayOrdersAction({ amount: parsedData.totalToday }));\r\n\r\n        // -> orders\r\n        // Create an empty array of orders\r\n        const orders: OrderModel[] = convertRawOrdersToOrders(\r\n          parsedData.orders,\r\n          state.ingredients.ingredients\r\n        );\r\n        // Set feed-orders in the store\r\n        dispatch(actions.wsSetFeedOrders({ orders }));\r\n      }\r\n    };\r\n\r\n    // Socket options\r\n    const options: SocketServiceCreateOptions = {\r\n      openHandler,\r\n      closeHandler,\r\n      errorHandler,\r\n      messageHandler\r\n    };\r\n\r\n    // Start a socket\r\n    feedSocketService.start(wsUrl, options);\r\n  }\r\n\r\n  // Close a socket connection\r\n  if (action.type === actions.wsCloseAction().type) {\r\n    feedSocketService.close();\r\n  }\r\n\r\n  return next(action);\r\n};\r\n","// redux\r\nimport { Middleware, MiddlewareAPI } from '@reduxjs/toolkit';\r\n// models\r\nimport { OrderModel } from 'models';\r\n// store\r\nimport { AppDispatch, AppState } from 'store';\r\nimport { ordersSocketActionsType } from 'store/orders';\r\n// services\r\nimport { SocketServiceCreateOptions } from 'services/base';\r\nimport {\r\n  ordersSocketService,\r\n  GetOrdersResponseInterface\r\n} from 'services/orders';\r\n// utils\r\nimport { convertRawOrdersToOrders } from 'utils';\r\n\r\n// MIDDLEWARE\r\nexport const ordersSocketMiddleware = (\r\n  wsUrl: string, actions: ordersSocketActionsType\r\n): Middleware<unknown, AppState> => (\r\n  api: MiddlewareAPI<AppDispatch, AppState>\r\n) => (next) => (action) => {\r\n// > => (store) => (next) => (action) => {\r\n  const state: AppState = api.getState();\r\n  const { dispatch } = api;\r\n\r\n  // Create a socket\r\n  if (action.type === actions.wsOrdersStartAction().type) {\r\n    // Handles to open a socket\r\n    const openHandler = () => {\r\n      dispatch(actions.wsOrdersStartSuccessAction());\r\n    };\r\n    // Handles to close a socket\r\n    const closeHandler = () => {\r\n      dispatch(actions.wsOrdersCloseSuccessAction());\r\n    };\r\n    // This handler gets called when an error occurs\r\n    const errorHandler = () => {\r\n      dispatch(actions.wsOrdersErrorAction({ error: 'Ошибка при получении данных' }));\r\n    };\r\n    // The handler gets called when a socket gets a message\r\n    const messageHandler = (event: MessageEvent) => {\r\n      const { data } = event;\r\n\r\n      const parsedData = JSON.parse(data) as GetOrdersResponseInterface;\r\n      if (parsedData.success) {\r\n        // -> orders\r\n        const orders: OrderModel[] = convertRawOrdersToOrders(\r\n          parsedData.orders,\r\n          state.ingredients.ingredients\r\n        );\r\n\r\n        dispatch(actions.wsOrdersSetOrders({ orders }));\r\n      } else {\r\n        dispatch(actions.wsOrdersErrorAction({ error: 'Ошибка при получении данных' }));\r\n      }\r\n    };\r\n\r\n    // Socket options\r\n    const options: SocketServiceCreateOptions = {\r\n      openHandler,\r\n      closeHandler,\r\n      errorHandler,\r\n      messageHandler\r\n    };\r\n\r\n    // Get token from the state\r\n    const token = state.auth.user?.token || '';\r\n    // Set token before start\r\n    ordersSocketService.setToken(token);\r\n    // Start a socket\r\n    ordersSocketService.start(wsUrl, options);\r\n  }\r\n\r\n  // Close a socket connection\r\n  if (action.type === actions.wsOrdersCloseAction().type) {\r\n    ordersSocketService.close();\r\n  }\r\n\r\n  return next(action);\r\n};\r\n","import { ReactNode } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// hooks\r\nimport { useKeyPress } from 'hooks/common';\r\n// css\r\nimport styles from './overlay.module.css';\r\n\r\n// PROPS\r\ninterface OverlayProps {\r\n  children?: ReactNode;\r\n  className?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const Overlay = (props: OverlayProps) => {\r\n  const { children, className, onClick } = props;\r\n\r\n  // Define the handler for clicking \"Escape\"\r\n  useKeyPress({\r\n    key: 'escape',\r\n    keyUpHandler: onClick\r\n  });\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['overlay'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      className={classes}\r\n      onClick={onClick}\r\n      role=\"presentation\"\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\n\r\ntype UseKeyPressProps = {\r\n  key: string,\r\n  keyUpHandler?: () => unknown,\r\n  keyDownHandler?: () => unknown\r\n}\r\n\r\n// HOOK\r\nexport const useKeyPress = (\r\n  props: UseKeyPressProps\r\n) => {\r\n  // Destrcutire props\r\n  const { key, keyDownHandler, keyUpHandler } = props;\r\n\r\n  // Define the logic of the hook\r\n  useEffect(() => {\r\n    const keyUp = (e: KeyboardEvent) => {\r\n      (e.key.toLowerCase() === key) && keyUpHandler && keyUpHandler();\r\n    };\r\n\r\n    const keyDown = (e: KeyboardEvent) => {\r\n      (e.key.toLowerCase() === key) && keyDownHandler && keyDownHandler();\r\n    };\r\n\r\n    document.addEventListener('keyup', keyUp);\r\n    document.addEventListener('keydown', keyDown);\r\n\r\n    return () => {\r\n      document.removeEventListener('keyup', keyUp);\r\n      document.removeEventListener('keydown', keyDown);\r\n    };\r\n  }, [key, keyUpHandler, keyDownHandler]);\r\n};\r\n","/* eslint-disable react/self-closing-comp */\r\n\r\nimport { CSSProperties } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// css\r\nimport styles from './background-image.module.css';\r\n\r\n// PROPS\r\ninterface BackgroundImageProps {\r\n  src: string;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const BackgroundImage = (props: BackgroundImageProps) => {\r\n  const { src, className = '' } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['background-image'],\r\n    className\r\n  );\r\n\r\n  // define background-image\r\n  const imgStyle: CSSProperties = {\r\n    backgroundImage: `url(${src})`,\r\n  };\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      className={classes}\r\n      style={imgStyle}\r\n    >\r\n    </div>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Icon } from 'components/icons';\r\nimport { ParagraphDigits } from 'components/base';\r\n// utils\r\nimport { formatNumber } from 'utils';\r\n// css\r\nimport styles from './price.module.css';\r\n\r\n// PROPS\r\ninterface PriceProps {\r\n  price: number;\r\n  num?: number;\r\n  size?: 'regular' | 'medium' | 'large';\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const Price = (props: PriceProps) => {\r\n  const {\r\n    price,\r\n    num = 0,\r\n    size = 'regular',\r\n    className = ''\r\n  } = props;\r\n\r\n  // If price isn't set\r\n  if (price === 0) {\r\n    return null;\r\n  }\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['price'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n\r\n      {/* Value */}\r\n      <ParagraphDigits\r\n        className={styles['price__number']}\r\n        size={size}\r\n      >\r\n        { num === 0 && formatNumber(price) }\r\n        { num !== 0 && `${num} x ${formatNumber(price)}` }\r\n      </ParagraphDigits>\r\n\r\n      {/* Currency Icon */}\r\n      <Icon\r\n        name=\"CurrencyIcon\"\r\n        type=\"primary\"\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable react/self-closing-comp */\r\n\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// css\r\nimport styles from './spinner.module.css';\r\n\r\n// Downloaded from https://loading.io\r\n\r\n// PROPS\r\ninterface SpinnerProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const Spinner = (props: SpinnerProps) => {\r\n  const { className } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['spinner'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n","// models\r\nimport { OrderStatusType } from 'models';\r\n\r\n// FUNCTION\r\nexport const getStatusText = (status: OrderStatusType): string => {\r\n  // Define the text of the status\r\n  let text = '';\r\n  switch (status) {\r\n    case 'created':\r\n      text = 'Создан';\r\n      break;\r\n    case 'pending':\r\n      text = 'Готовится';\r\n      break;\r\n    default:\r\n      text = 'Выполнен';\r\n  }\r\n\r\n  return text;\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\n// models\r\nimport { OrderStatusType } from 'models';\r\n// aux\r\nimport { getStatusText } from './utils';\r\n// css\r\nimport styles from './order-status.module.css';\r\n\r\n// PROPS\r\ninterface OrderStatusProps {\r\n  status: OrderStatusType;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderStatus = (props: OrderStatusProps) => {\r\n  const { status, className = '' } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    {\r\n      [`${styles['order-status--done']}`]: status === 'done'\r\n    },\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <Paragraph\r\n      className={classes}\r\n      text={getStatusText(status)}\r\n    />\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\n// css\r\nimport styles from './ingredient-logo.module.css';\r\n\r\n// PROPS\r\nexport interface IngredientLogoProps {\r\n  imgPath: string;\r\n  shadowed?: boolean;\r\n  num?: number;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const IngredientLogo = (props: IngredientLogoProps) => {\r\n  const {\r\n    imgPath,\r\n    shadowed = false,\r\n    num = 0,\r\n    className = ''\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['ingredient-logo'],\r\n    className\r\n  );\r\n\r\n  // css-classes for the image\r\n  const classesImg = classNames(\r\n    styles['ingredient-logo__image'],\r\n    {\r\n      [`${styles['ingredient-logo__image--last']}`]: shadowed\r\n    }\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      <img\r\n        alt=\"logo\"\r\n        className={classesImg}\r\n        src={imgPath}\r\n      />\r\n      {\r\n        num && (\r\n          <Paragraph\r\n            text={`+${num}`}\r\n          />\r\n        )\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","// third-party libraries\nimport classNames from 'classnames';\n// components\nimport { Paragraph, ParagraphDigits } from 'components/base';\n// css\nimport styles from './order-numbers.module.css';\n\n// PROPS\ninterface OrderNumbersProps {\n  header: string;\n  orders: string[];\n  theme?: 'default' | 'success';\n  className?: string;\n}\n\n// COMPONENT\nexport const OrderNumbers = (props: OrderNumbersProps) => {\n  const {\n    header,\n    orders,\n    theme = 'default',\n    className = ''\n  } = props;\n\n  // css\n  const classes = classNames(\n    styles['order-numbers'],\n    className\n  );\n  // css for items\n  const classesItem = classNames({\n    [`${styles['order-numbers__item--success']}`]: theme === 'success'\n  });\n\n  // RENDER\n  return (\n    <div className={classes}>\n\n      {/* Header */}\n      <Paragraph\n        size=\"medium\"\n        text={header}\n      />\n\n      {/* Content */}\n      <div className={styles['order-numbers__content']}>\n        {\n          orders.map((order) => (\n            <ParagraphDigits\n              key={order}\n              className={classesItem}\n              text={order}\n            />\n          ))\n        }\n      </div>\n\n    </div>\n  );\n};\n","import { useCallback, useState } from 'react';\r\n// components\r\nimport { Input } from 'components/yandex';\r\n\r\n// PROPS\r\ninterface PasswordInputProps {\r\n  value: string;\r\n  name?: string;\r\n  placeholder?: string;\r\n  disabled?: boolean;\r\n  size?: 'default' | 'small';\r\n  error?: boolean;\r\n  errorText?: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const PasswordInput = (props: PasswordInputProps) => {\r\n  const {\r\n    value,\r\n    name = '',\r\n    placeholder = '',\r\n    size = 'default',\r\n    error = false,\r\n    errorText = '',\r\n    disabled = false,\r\n    onChange\r\n  } = props;\r\n\r\n  const [showPassword, setShowPassword] = useState<boolean>(false);\r\n\r\n  // EVENT HANDLERS\r\n  //\r\n  const onClickIconHandler = useCallback(() => {\r\n    setShowPassword((state) => !state);\r\n  }, []);\r\n\r\n  // RENDER\r\n  return (\r\n    <Input\r\n      value={value}\r\n      name={name}\r\n      placeholder={placeholder}\r\n      type={showPassword ? 'text' : 'password'}\r\n      icon={showPassword ? 'HideIcon' : 'ShowIcon'}\r\n      size={size}\r\n      error={error}\r\n      errorText={errorText}\r\n      disabled={disabled}\r\n      onChange={onChange}\r\n      onIconClick={onClickIconHandler}\r\n    />\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// css\r\nimport styles from './side-menu.module.css';\r\n\r\n// PROPS\r\ninterface SideMenuProps {\r\n  children: JSX.Element[] | JSX.Element;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const SideMenu = (props: SideMenuProps) => {\r\n  const { children, className = '' } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['side-menu'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <nav className={classes}>\r\n      { children }\r\n    </nav>\r\n  );\r\n};\r\n","// router\r\nimport { Link, useRouteMatch } from 'react-router-dom';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\n// css\r\nimport styles from '../side-menu.module.css';\r\n\r\n// PROPS\r\ninterface SideMenuElementProps {\r\n  text: string;\r\n  to: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const SideMenuElement = (props: SideMenuElementProps) => {\r\n  const { text, to } = props;\r\n\r\n  const match = useRouteMatch({\r\n    path: to,\r\n    exact: true\r\n  });\r\n\r\n  const active = match?.isExact || false;\r\n  // css\r\n  const classesRoot: string = classNames(\r\n    styles['side-menu-element'],\r\n    {\r\n      [`${styles['side-menu-element--active']}`]: active\r\n    }\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <Link\r\n      className={classesRoot}\r\n      to={to}\r\n    >\r\n      <Paragraph\r\n        className={styles['side-menu-element__text']}\r\n        size=\"medium\"\r\n        text={text}\r\n      />\r\n    </Link>\r\n  );\r\n};\r\n","// components\r\nimport { Paragraph } from 'components/base';\r\n// css\r\nimport styles from '../side-menu.module.css';\r\n\r\n// PROPS\r\ninterface SideMenuElementActionProps {\r\n  text: string;\r\n  onClick: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const SideMenuElementAction = (props: SideMenuElementActionProps) => {\r\n  const { text, onClick } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      className={styles['side-menu-element']}\r\n      onClick={onClick}\r\n      role=\"button\"\r\n      tabIndex={0}\r\n    >\r\n      <Paragraph\r\n        className={styles['side-menu-element__action']}\r\n        size=\"medium\"\r\n        text={text}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// router\r\nimport { useHistory } from 'react-router-dom';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Button, Paragraph } from 'components/base';\r\n// css\r\nimport styles from './not-found.module.css';\r\n\r\n// PROPS\r\ninterface NotFoundProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const NotFound = (props: NotFoundProps) => {\r\n  const { className } = props;\r\n\r\n  const { push } = useHistory();\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['not-found'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      <Paragraph\r\n        text=\"По Вашему запросу ничего не найдено\"\r\n        size=\"medium\"\r\n      />\r\n      <Button\r\n        text=\"На главную\"\r\n        onClick={() => push('/')}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { ReactNode } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// PROPS\r\ninterface FooterPortalProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const FooterPortal = (props: FooterPortalProps) => {\r\n  const { children } = props;\r\n\r\n  // Get the element where modal windows will be rendered\r\n  const footerElement = document.getElementById('footer');\r\n\r\n  // If there is no the required \"div\",\r\n  // return nothing\r\n  if (!footerElement) {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return ReactDOM.createPortal(\r\n    children,\r\n    footerElement\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\n// css\r\nimport styles from './tab.module.css';\r\n\r\n// PROPS\r\ninterface TabProps<T> {\r\n  text: string;\r\n  value: T;\r\n  active?: boolean;\r\n  onClick: (data: T) => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const Tab = <T extends unknown>(props: TabProps<T>) => {\r\n  const {\r\n    text,\r\n    value,\r\n    active = false,\r\n    onClick\r\n  } = props;\r\n\r\n  // EVENT HANDLERS\r\n  const onClickHandler = () => {\r\n    onClick && onClick(value);\r\n  };\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['tab'],\r\n    {\r\n      [styles['tab--active']]: active\r\n    }\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      className={classes}\r\n      role=\"presentation\"\r\n      onClick={onClickHandler}\r\n    >\r\n      <Paragraph\r\n        text={text}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { ReactNode } from 'react';\r\n// css\r\nimport styles from '../app-header.module.css';\r\n\r\n// PROPS\r\ninterface AppHeaderInnerProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// COMPONENT\r\nexport const AppHeaderInner = (props: AppHeaderInnerProps) => {\r\n  const { children } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['app-header__inner']}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import { ReactNode } from 'react';\r\n// css\r\nimport styles from '../app-header.module.css';\r\n\r\n// PROPS\r\ninterface AppHeaderLeftProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// COMPONENT\r\nexport const AppHeaderLeft = (props: AppHeaderLeftProps) => {\r\n  const { children } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['app-header__left']}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","// components\r\nimport { HeaderMenu, HeaderMenuItem } from 'components/base';\r\n// css\r\nimport styles from '../app-header.module.css';\r\n\r\n// COMPONENT\r\nexport const AppHeaderMainMenu = () => {\r\n  // RENDER\r\n  return (\r\n    <HeaderMenu className={styles['app-header__main-menu']}>\r\n      <HeaderMenuItem\r\n        text=\"Конструктор\"\r\n        url=\"/\"\r\n        icon=\"BurgerIcon\"\r\n      />\r\n      <HeaderMenuItem\r\n        text=\"Лента заказов\"\r\n        url=\"/feed\"\r\n        icon=\"ListIcon\"\r\n      />\r\n    </HeaderMenu>\r\n  );\r\n};\r\n","// components\r\nimport { HeaderMenu, HeaderMenuItem } from 'components/base';\r\n\r\n// COMPONENT\r\nexport const AppHeaderProfileMenu = () => {\r\n  // RENDER\r\n  return (\r\n    <HeaderMenu>\r\n      <HeaderMenuItem\r\n        text=\"Личный кабинет\"\r\n        url=\"/profile\"\r\n        icon=\"ProfileIcon\"\r\n      />\r\n    </HeaderMenu>\r\n  );\r\n};\r\n","// router\r\nimport { Link } from 'react-router-dom';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Container } from 'components/base';\r\nimport { Logo } from 'components/yandex';\r\n// aux. components\r\nimport {\r\n  AppHeaderInner,\r\n  AppHeaderLeft,\r\n  AppHeaderMainMenu,\r\n  AppHeaderProfileMenu\r\n} from './auxiliary';\r\n// css\r\nimport styles from './app-header.module.css';\r\n\r\n// PROPS\r\ninterface AppHeaderProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const AppHeader = (props: AppHeaderProps) => {\r\n  const { className } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['app-header'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <header className={classes}>\r\n      <Container>\r\n        <AppHeaderInner>\r\n\r\n          <AppHeaderLeft>\r\n            {/* Main Menu */}\r\n            <AppHeaderMainMenu />\r\n            {/* Logo */}\r\n            <Link to=\"/\">\r\n              <Logo />\r\n            </Link>\r\n          </AppHeaderLeft>\r\n\r\n          {/* Profile Menu */}\r\n          <AppHeaderProfileMenu />\r\n\r\n        </AppHeaderInner>\r\n      </Container>\r\n    </header>\r\n  );\r\n};\r\n","import { useCallback } from 'react';\r\n// store\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\nimport {\r\n  authSelectors,\r\n\r\n  loginAction,\r\n  registerAction,\r\n  logoutAction,\r\n  updateUserAction,\r\n  forgetPasswordAction,\r\n  resetPasswordAction,\r\n  getUserAction\r\n} from 'store/auth';\r\n// types\r\nimport { UserModel } from 'models';\r\n\r\n// Get required selectors\r\nconst { loadingSelector } = authSelectors;\r\n\r\n// HOOK\r\nexport const useAuth = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { loading } = useAppSelector(loadingSelector);\r\n\r\n  // -> LOGIN\r\n  const loginUser = useCallback(async (user: UserModel): Promise<{ user: UserModel } | null> => {\r\n    if (loading) {\r\n      return null;\r\n    }\r\n    return dispatch(loginAction({ user })).unwrap();\r\n  }, [dispatch, loading]);\r\n\r\n  // -> REGISTER\r\n  const registerUser = useCallback(async (user: UserModel): Promise<{ user: UserModel } | null> => {\r\n    if (loading) {\r\n      return null;\r\n    }\r\n    return dispatch(registerAction({ user })).unwrap();\r\n  }, [dispatch, loading]);\r\n\r\n  // -> LOGOUT\r\n  const logoutUser = useCallback(async (): Promise<boolean | null> => {\r\n    if (loading) {\r\n      return false;\r\n    }\r\n    return dispatch(logoutAction()).unwrap();\r\n  }, [dispatch, loading]);\r\n\r\n  // -> UPDATE USER\r\n  const updateUser = useCallback(async (user: UserModel): Promise<{ user: UserModel } | null> => {\r\n    if (loading) {\r\n      return null;\r\n    }\r\n    return dispatch(updateUserAction({ user })).unwrap();\r\n  }, [dispatch, loading]);\r\n\r\n  // -> FORGET PASSWORD\r\n  const forgetPassword = useCallback(async (email: string): Promise<boolean | null> => {\r\n    if (loading) {\r\n      return null;\r\n    }\r\n    return dispatch(forgetPasswordAction({ email })).unwrap();\r\n  }, [dispatch, loading]);\r\n\r\n  // -> RESET PASSWORD\r\n  const resetPassword = useCallback(\r\n    async (password: string, code: string): Promise<boolean | null> => {\r\n      if (loading) {\r\n        return null;\r\n      }\r\n      return dispatch(resetPasswordAction({ password, code })).unwrap();\r\n    },\r\n    [dispatch, loading]\r\n  );\r\n\r\n  // -> GET USER\r\n  const getUser = useCallback(async (): Promise<{ user: UserModel }> => {\r\n    return dispatch(getUserAction()).unwrap();\r\n  }, [dispatch]);\r\n\r\n  // RENDER\r\n  return {\r\n    loginUser,\r\n    registerUser,\r\n    logoutUser,\r\n    updateUser,\r\n    forgetPassword,\r\n    resetPassword,\r\n    getUser\r\n  };\r\n};\r\n","import { useCallback } from 'react';\r\n// third-party libraries\r\nimport { v4 as uuid } from 'uuid';\r\n// store\r\nimport { useAppSelector, useAppDispatch } from 'store';\r\nimport {\r\n  addToastAction,\r\n  replaceToastAction,\r\n  removeToastAction,\r\n  dataSelector\r\n} from 'store/toasts';\r\nimport { commonSelectors } from 'store/common';\r\n// types\r\nimport { ToastModel, ToastTypeType } from 'models';\r\n\r\n// get selectors\r\nconst { modeSelector } = commonSelectors;\r\n\r\n// HOOK\r\nexport const useToasts = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  // Get the toasts from the store\r\n  const { toasts } = useAppSelector(dataSelector);\r\n\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  // Function to add a toast with information type\r\n  const toastInformation = useCallback((text: string) => {\r\n    const toast: ToastModel = {\r\n      id: uuid(),\r\n      text,\r\n      type: 'information'\r\n    };\r\n\r\n    if (mode === 'desktop') {\r\n      dispatch(addToastAction({ toast }));\r\n    } else {\r\n      dispatch(replaceToastAction({ toast }));\r\n    }\r\n  }, [dispatch, mode]);\r\n\r\n  // Function to add a toast with error type\r\n  const toastError = useCallback((text: string) => {\r\n    const toast: ToastModel = {\r\n      id: uuid(),\r\n      text,\r\n      type: 'danger'\r\n    };\r\n\r\n    if (mode === 'desktop') {\r\n      dispatch(addToastAction({ toast }));\r\n    } else {\r\n      dispatch(replaceToastAction({ toast }));\r\n    }\r\n  }, [dispatch, mode]);\r\n\r\n  // Function to add a toast with error type\r\n  const toastSuccess = useCallback((text: string) => {\r\n    const toast: ToastModel = {\r\n      id: uuid(),\r\n      text,\r\n      type: 'success'\r\n    };\r\n\r\n    if (mode === 'desktop') {\r\n      dispatch(addToastAction({ toast }));\r\n    } else {\r\n      dispatch(replaceToastAction({ toast }));\r\n    }\r\n  }, [dispatch, mode]);\r\n\r\n  // Function to add a toast\r\n  const toastAny = useCallback((text: string, type: ToastTypeType) => {\r\n    const toast: ToastModel = {\r\n      id: uuid(),\r\n      text,\r\n      type\r\n    };\r\n\r\n    if (mode === 'desktop') {\r\n      dispatch(addToastAction({ toast }));\r\n    } else {\r\n      dispatch(replaceToastAction({ toast }));\r\n    }\r\n  }, [dispatch, mode]);\r\n\r\n  // Function to remove a toast by id\r\n  const deleteToast = useCallback((id: string) => {\r\n    dispatch(removeToastAction({ id }));\r\n  }, [dispatch]);\r\n\r\n  return {\r\n    toasts,\r\n    toastAny,\r\n    toastInformation,\r\n    toastError,\r\n    toastSuccess,\r\n    deleteToast\r\n  };\r\n};\r\n","// router\r\nimport { useRouteMatch } from 'react-router-dom';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport {\r\n  MobileMenu,\r\n  MobileMenuGroup,\r\n  MobileMenuItem,\r\n  MobileMenuAction,\r\n  CloseIcon,\r\n  Overlay\r\n} from 'components/base';\r\n// hooks\r\nimport { useAuth } from 'hooks/auth';\r\nimport { useToggle } from 'hooks/common';\r\nimport { useToasts } from 'hooks/toasts';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { authSelectors } from 'store/auth';\r\n// css\r\nimport styles from '../mobile-header.module.css';\r\n\r\n// Get selectors\r\nconst { userSelector } = authSelectors;\r\n\r\n// PROPS\r\ninterface MobileHeaderMenuProps {\r\n  show?: boolean;\r\n  onClose?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const MobileHeaderMenu = (props: MobileHeaderMenuProps) => {\r\n  const { onClose, show = true } = props;\r\n\r\n  const { logoutUser } = useAuth();\r\n\r\n  const { toastSuccess, toastError } = useToasts();\r\n\r\n  // Get current user\r\n  const { user } = useAppSelector(userSelector);\r\n\r\n  // Define if the current route is profile\r\n  const profileMacth = useRouteMatch('/profile');\r\n  const isProfileRoute = profileMacth?.isExact || false;\r\n\r\n  const profileOrdersMacth = useRouteMatch('/profile/orders');\r\n  const isProfileOrdersRoute = profileOrdersMacth?.isExact || false;\r\n\r\n  const isProfile = isProfileRoute\r\n    || isProfileOrdersRoute;\r\n\r\n  const {\r\n    state: isProfileOpen,\r\n    toggle: toggleProfile\r\n  } = useToggle(isProfile);\r\n\r\n  const logoutUserExt = () => {\r\n    logoutUser()\r\n      .then(() => {\r\n        toastSuccess('Вы вышли из системы');\r\n        onClose && onClose();\r\n      })\r\n      .catch(() => {\r\n        toastError('Возникла ошибка при операции');\r\n      });\r\n  };\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['mobile-header__menu'],\r\n    {\r\n      [styles['mobile-header__menu--show']]: show\r\n    }\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      { show && <Overlay onClick={onClose} /> }\r\n\r\n      <div\r\n        className={classes}\r\n      >\r\n        {/* Menu Header */}\r\n        <div className={styles['mobile-header__menu-top']}>\r\n          <p className={styles['mobile-header__menu-header']}>\r\n            Меню\r\n          </p>\r\n          <CloseIcon onClick={onClose} />\r\n        </div>\r\n\r\n        {/* Menu */}\r\n        <MobileMenu>\r\n\r\n          {/* Group - Profile */}\r\n          <MobileMenuGroup\r\n            text=\"Личный кабинет\"\r\n            icon=\"ProfileIcon\"\r\n            active={isProfile}\r\n            isOpen={isProfileOpen}\r\n            onClick={toggleProfile}\r\n          >\r\n            <MobileMenuItem\r\n              text=\"Профиль\"\r\n              url=\"/profile\"\r\n              onClick={onClose}\r\n            />\r\n            <MobileMenuItem\r\n              text=\"История заказов\"\r\n              url=\"/profile/orders\"\r\n              onClick={onClose}\r\n            />\r\n            {\r\n              user && (\r\n                <MobileMenuAction\r\n                  text=\"Выход\"\r\n                  onClick={logoutUserExt}\r\n                />\r\n              )\r\n            }\r\n          </MobileMenuGroup>\r\n\r\n          <MobileMenuItem\r\n            text=\"Конструктор бургеров\"\r\n            url=\"/\"\r\n            icon=\"BurgerIcon\"\r\n            onClick={onClose}\r\n          />\r\n\r\n          <MobileMenuItem\r\n            text=\"Лента заказов\"\r\n            url=\"/feed\"\r\n            icon=\"ListIcon\"\r\n            onClick={onClose}\r\n          />\r\n        </MobileMenu>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// router\r\nimport { Link } from 'react-router-dom';\r\n// components\r\nimport { LogoIcon, MenuBurgerIcon } from 'components/base';\r\n// hooks\r\nimport { useToggle } from 'hooks/common';\r\n// aux.\r\nimport { MobileHeaderMenu } from './auxiliary';\r\n// css\r\nimport styles from './mobile-header.module.css';\r\n\r\n// COMPONENT\r\nexport const MobileHeader = () => {\r\n  const {\r\n    state: menuIsOpen,\r\n    on: showMenu,\r\n    off: closeMenu\r\n  } = useToggle(false);\r\n\r\n  // RENDER\r\n  return (\r\n    <header className={styles['mobile-header']}>\r\n      <Link to=\"/\">\r\n        <LogoIcon />\r\n      </Link>\r\n\r\n      {/* Toggle Menu */}\r\n      <MenuBurgerIcon\r\n        onClick={showMenu}\r\n      />\r\n\r\n      {/* Menu */}\r\n      <MobileHeaderMenu\r\n        show={menuIsOpen}\r\n        onClose={closeMenu}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n","/* eslint-disable react/self-closing-comp */\r\n\r\nimport ReactDOM from 'react-dom';\r\n// components\r\nimport { Overlay } from 'components/base';\r\n// css\r\nimport styles from './app-loader.module.css';\r\n\r\n// Get the element where modal windows will be rendered\r\nconst divReactModals = document.getElementById('react-modals');\r\n\r\n// COMPONENT\r\nexport const AppLoader = () => {\r\n  // If there is no the required \"div\",\r\n  // return nothing\r\n  if (!divReactModals) {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return ReactDOM.createPortal(\r\n    (\r\n      <Overlay className={styles['app-loader__overlay']}>\r\n        <div className={styles['app-loader']}>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </Overlay>\r\n    ),\r\n    divReactModals\r\n  );\r\n};\r\n","// components\r\nimport { Container, Paragraph } from 'components/base';\r\n// css\r\nimport styles from './app-message.module.css';\r\n\r\n// PROPS\r\ninterface AppMessageProps {\r\n  message: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const AppMessage = (props: AppMessageProps) => {\r\n  const { message } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <Container>\r\n      <div className={styles['app-message__inner']}>\r\n        <Paragraph\r\n          text={message}\r\n          size=\"medium\"\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph, ParagraphDigits } from 'components/base';\r\n// css\r\nimport styles from './ingredient-details-info-item.module.css';\r\n\r\n// PROPS\r\ninterface IngredientDetailsInfoItemProps {\r\n  caption: string;\r\n  value: string;\r\n  position?: 'right' | 'left' | 'default';\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const IngredientDetailsInfoItem = (props: IngredientDetailsInfoItemProps) => {\r\n  const {\r\n    caption,\r\n    value,\r\n    position = 'default',\r\n    className\r\n  } = props;\r\n\r\n  // css\r\n  const classesWrapper = classNames(\r\n    styles['ingredient-details__info-item-wrapper'],\r\n    {\r\n      right: position === 'right',\r\n      left: position === 'left',\r\n    },\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classesWrapper}>\r\n      <div className={styles['ingredient-details__info-item']}>\r\n\r\n        {/* Caption */}\r\n        <Paragraph\r\n          className={styles['ingredient-details__info-caption']}\r\n          text={caption}\r\n        />\r\n\r\n        {/* Value */}\r\n        <ParagraphDigits\r\n          className={styles['ingredient-details__info-value']}\r\n          text={value}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// types\r\nimport { IngredientModel } from 'models';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\n// aux.\r\nimport { IngredientDetailsInfoItem } from './ingredient-details-info-item';\r\n// css\r\nimport styles from './ingredient-details.module.css';\r\n\r\n// PROPS\r\ninterface IngredientDetailsProps {\r\n  ingredient: IngredientModel | null;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const IngredientDetails = (props: IngredientDetailsProps) => {\r\n  const { ingredient, className } = props;\r\n\r\n  // There is no ingredient passed\r\n  if (!ingredient) {\r\n    return null;\r\n  }\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['ingredient-details'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n\r\n      {/* Img */}\r\n      <img\r\n        className={styles['ingredient-details__image']}\r\n        alt=\"\"\r\n        src={ingredient.imageLarge}\r\n      />\r\n\r\n      {/* Name */}\r\n      <Paragraph\r\n        className={styles['ingredient-details__name']}\r\n        size=\"medium\"\r\n        text={ingredient.name}\r\n      />\r\n\r\n      {/* Info */}\r\n      <div className={styles['ingredient-details__info']}>\r\n\r\n        <IngredientDetailsInfoItem\r\n          caption=\"Калории,ккал\"\r\n          value={`${ingredient.calories}`}\r\n          position=\"right\"\r\n        />\r\n\r\n        <IngredientDetailsInfoItem\r\n          caption=\"Белки, г\"\r\n          value={`${ingredient.proteins}`}\r\n          position=\"left\"\r\n        />\r\n\r\n        <IngredientDetailsInfoItem\r\n          caption=\"Жиры, г\"\r\n          value={`${ingredient.fat}`}\r\n          position=\"right\"\r\n        />\r\n\r\n        <IngredientDetailsInfoItem\r\n          caption=\"Углеводы, г\"\r\n          value={`${ingredient.carbohydrates}`}\r\n          position=\"left\"\r\n        />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/done.bb209912.png\";","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph, ParagraphDigits } from 'components/base';\r\n// types\r\nimport { OrderModel } from 'models';\r\n// images\r\n// eslint-disable-next-line import/extensions\r\nimport imageDone from 'assets/images/done.png';\r\n// css\r\nimport styles from './order-details.module.css';\r\n\r\n// PROPS\r\ninterface OrderDetailsProps {\r\n  order: OrderModel;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderDetails = (props: OrderDetailsProps) => {\r\n  const { order, className = '' } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['order-details'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n\r\n      {/* Order Number */}\r\n      <ParagraphDigits\r\n        className={styles['order-details__number']}\r\n        size=\"large\"\r\n        text={order.orderNumber}\r\n        shadowed\r\n      />\r\n\r\n      {/* Identificator */}\r\n      <Paragraph\r\n        className={styles['order-details__identificator']}\r\n        size=\"medium\"\r\n        text=\"Идентификатор заказа\"\r\n      />\r\n\r\n      {/* Image \"Done\" */}\r\n      <img\r\n        className={styles['order-details__image']}\r\n        alt=\"Done\"\r\n        src={imageDone}\r\n      />\r\n\r\n      {/* Notification 1 */}\r\n      <Paragraph\r\n        className={styles['order-details__notification1']}\r\n        text=\"Ваш заказ начали готовить\"\r\n      />\r\n\r\n      {/* Notification 2 */}\r\n      <Paragraph\r\n        className={styles['order-details__notification2']}\r\n        text=\"Дождитесь готовности на орбитальной станции\"\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n","import { useCallback } from 'react';\r\n// store\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\nimport { wsStartAction, wsCloseAction, feedSelectors } from 'store/feed';\r\n\r\n// Get required selectors\r\nconst {\r\n  wsLoadingSelector,\r\n  wsErrorTextSelector,\r\n  wsConnectedSelector\r\n} = feedSelectors;\r\n\r\n// HOOK\r\nexport const useFeedSocket = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { wsLoading } = useAppSelector(wsLoadingSelector);\r\n  const { wsErrorText } = useAppSelector(wsErrorTextSelector);\r\n  const { wsConnected } = useAppSelector(wsConnectedSelector);\r\n\r\n  const wsStart = useCallback(() => {\r\n    dispatch(wsStartAction());\r\n  }, [dispatch]);\r\n\r\n  const wsClose = useCallback(() => {\r\n    dispatch(wsCloseAction());\r\n  }, [dispatch]);\r\n\r\n  // RETURN\r\n  return {\r\n    wsLoading,\r\n    wsErrorText,\r\n    wsConnected,\r\n\r\n    wsStart,\r\n    wsClose\r\n  };\r\n};\r\n","import { useCallback } from 'react';\r\n// store\r\nimport { useAppDispatch } from 'store';\r\nimport {\r\n  clearFeedCurrentOrderAction,\r\n  setFeedCurrentOrderAction,\r\n  getFeedOrderAction\r\n} from 'store/feed';\r\n// models\r\nimport { OrderModel } from 'models';\r\n\r\n// HOOK\r\nexport const useFeedActions = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const setCurrentOrder = useCallback((order: OrderModel) => {\r\n    dispatch(setFeedCurrentOrderAction({ order }));\r\n  }, [dispatch]);\r\n\r\n  const clearCurrentOrder = useCallback(() => {\r\n    dispatch(clearFeedCurrentOrderAction());\r\n  }, [dispatch]);\r\n\r\n  const fetchOrder = useCallback(async (orderNumber: string): Promise<void> => {\r\n    await dispatch(getFeedOrderAction({ orderNumber }));\r\n  }, [dispatch]);\r\n\r\n  // RETURN\r\n  return {\r\n    setCurrentOrder,\r\n    clearCurrentOrder,\r\n    fetchOrder\r\n  };\r\n};\r\n","import { ReactNode } from 'react';\n// css\nimport styles from '../order-card.module.css';\n\n// PROPS\ninterface OrderCardTopProps {\n  children: ReactNode;\n}\n\n// COMPONENT\nexport const OrderCardTop = (props: OrderCardTopProps) => {\n  const { children } = props;\n\n  // RENDER\n  return (\n    <div className={styles['order-card__top']}>\n      { children }\n    </div>\n  );\n};\n","import { ReactNode } from 'react';\n// css\nimport styles from '../order-card.module.css';\n\n// PROPS\ninterface OrderCardBottomProps {\n  children: ReactNode;\n}\n\n// COMPONENT\nexport const OrderCardBottom = (props: OrderCardBottomProps) => {\n  const { children } = props;\n\n  // RENDER\n  return (\n    <div className={styles['order-card__bottom']}>\n      { children }\n    </div>\n  );\n};\n","// components\nimport { Paragraph } from 'components/base';\n// utils\nimport { formatDate } from 'utils';\n// css\nimport styles from '../order-card.module.css';\n\n// PROPS\ninterface OrderCardDateProps {\n  creationDate: string;\n}\n\n// COMPONENT\nexport const OrderCardDate = (props: OrderCardDateProps) => {\n  const { creationDate } = props;\n\n  // RENDER\n  return (\n    <Paragraph\n      className={styles['order-card__date']}\n      text={formatDate(creationDate)}\n    />\n  );\n};\n","// components\nimport { Paragraph } from 'components/base';\n// css\nimport styles from '../order-card.module.css';\n\n// PROPS\ninterface OrderCardDescriptionProps {\n  description: string;\n}\n\n// COMPONENT\nexport const OrderCardDescription = (props: OrderCardDescriptionProps) => {\n  const { description } = props;\n\n  // RENDER\n  return (\n    <Paragraph\n      className={styles['order-card__description']}\n      text={description}\n      size=\"medium\"\n    />\n  );\n};\n","// components\nimport { OrderStatus } from 'components/base';\n// models\nimport { OrderStatusType } from 'models';\n// css\nimport styles from '../order-card.module.css';\n\n// PROPS\ninterface OrderCardStatusProps {\n  status: OrderStatusType;\n}\n\n// COMPONENT\nexport const OrderCardStatus = (props: OrderCardStatusProps) => {\n  const { status } = props;\n\n  // RENDER\n  return (\n    <OrderStatus\n      className={styles['order-card__status']}\n      status={status}\n    />\n  );\n};\n","// components\nimport { IngredientLogo } from 'components/base';\n// types\nimport { IngredientModel } from 'models';\n// css\nimport styles from '../order-card.module.css';\n\ninterface IElement {\n  imgPath: string;\n  num: number;\n}\n\n// PROPS\ninterface OrderCardPreviewProps {\n  ingredients: IngredientModel[];\n}\n\n// COMPONENT\nexport const OrderCardPreview = (props: OrderCardPreviewProps) => {\n  const { ingredients } = props;\n\n  let firstElement: IElement | null = null;\n  let secondElement: IElement | null = null;\n  let thirdElement: IElement | null = null;\n  let fourthElement: IElement | null = null;\n  let fifthElement: IElement | null = null;\n  let sixthElement: IElement | null = null;\n\n  // FIRST\n  if (ingredients.length > 0) {\n    firstElement = {\n      imgPath: ingredients[0].imageMobile,\n      num: 0\n    };\n  }\n\n  // SECOND\n  if (ingredients.length > 1) {\n    secondElement = {\n      imgPath: ingredients[1].imageMobile,\n      num: 0\n    };\n  }\n\n  // THIRD\n  if (ingredients.length > 2) {\n    thirdElement = {\n      imgPath: ingredients[2].imageMobile,\n      num: 0\n    };\n  }\n\n  // FOURTH\n  if (ingredients.length > 3) {\n    fourthElement = {\n      imgPath: ingredients[3].imageMobile,\n      num: 0\n    };\n  }\n\n  // FIFTH\n  if (ingredients.length > 4) {\n    fifthElement = {\n      imgPath: ingredients[4].imageMobile,\n      num: 0\n    };\n  }\n\n  // SIXTH\n  if (ingredients.length > 5) {\n    sixthElement = {\n      imgPath: ingredients[5].imageMobile,\n      num: ingredients.length - 5\n    };\n  }\n\n  // RENDER\n  return (\n    <div className={styles['order-card__preview']}>\n\n      {/* FIRST */}\n      <div className={styles['order-card__preview-first']}>\n        { firstElement && (\n          <IngredientLogo\n            key={1}\n            imgPath={firstElement.imgPath}\n            num={firstElement.num}\n          />\n        ) }\n      </div>\n\n      {/* SECOND */}\n      <div className={styles['order-card__preview-second']}>\n        { secondElement && (\n          <IngredientLogo\n            key={2}\n            imgPath={secondElement.imgPath}\n            num={secondElement.num}\n          />\n        ) }\n      </div>\n\n      {/* THIRD */}\n      <div className={styles['order-card__preview-third']}>\n        { thirdElement && (\n          <IngredientLogo\n            key={3}\n            imgPath={thirdElement.imgPath}\n            num={thirdElement.num}\n          />\n        ) }\n      </div>\n\n      {/* FOURTH */}\n      <div className={styles['order-card__preview-fourth']}>\n        { fourthElement && (\n          <IngredientLogo\n            key={4}\n            imgPath={fourthElement.imgPath}\n            num={fourthElement.num}\n          />\n        ) }\n      </div>\n\n      {/* FIFTH */}\n      <div className={styles['order-card__preview-fifth']}>\n        { fifthElement && (\n          <IngredientLogo\n            key={5}\n            imgPath={fifthElement.imgPath}\n            num={fifthElement.num}\n          />\n        ) }\n      </div>\n\n      {/* SIXTH */}\n      <div className={styles['order-card__preview-sixth']}>\n        { sixthElement && (\n          <IngredientLogo\n            key={6}\n            imgPath={sixthElement.imgPath}\n            num={sixthElement.num}\n            shadowed\n          />\n        ) }\n      </div>\n    </div>\n  );\n};\n","import { memo } from 'react';\n// router\nimport { useRouteMatch, useLocation, Link } from 'react-router-dom';\n// third-party libraries\nimport classNames from 'classnames';\n// components\nimport { Price, ParagraphDigits } from 'components/base';\n// store\nimport { useAppSelector } from 'store';\nimport { feedSelectors } from 'store/feed';\n// hooks\nimport { useFeedActions } from 'hooks/feed';\n// aux.\nimport {\n  OrderCardTop,\n  OrderCardBottom,\n  // OrderCardNumber,\n  OrderCardDate,\n  OrderCardDescription,\n  OrderCardPreview\n} from './auxiliary';\n// css\nimport styles from './order-card.module.css';\n\n// Get required selectors\nconst { orderByIdSelector } = feedSelectors;\n\n// PROPS\ninterface FeedOrderCardProps {\n  orderId: string;\n  className?: string;\n}\n\n// COMPONENT\nexport const FeedOrderCard = memo((props: FeedOrderCardProps) => {\n  // Props\n  const {\n    orderId,\n    className = ''\n  } = props;\n\n  // Get the parameters of the current url\n  const { url } = useRouteMatch();\n  // Get the current location\n  const location = useLocation();\n\n  // Get a feed-order from the store\n  const { order: feedOrder } = useAppSelector(orderByIdSelector(orderId));\n  // Get the function to set the current feed-order\n  const { setCurrentOrder } = useFeedActions();\n\n  // No feed-order\n  if (!feedOrder) {\n    return null;\n  }\n\n  // Get fields of the current feed-order\n  const {\n    orderNumber,\n    creationDate,\n    name,\n    ingredients,\n    price\n  } = feedOrder;\n\n  // css\n  const classes = classNames(\n    styles['order-card'],\n    className\n  );\n\n  // RENDER\n  return (\n    <Link\n      className={classes}\n      to={{\n        pathname: `${url}/${orderNumber}`,\n        state: { background: location }\n      }}\n      onClick={() => setCurrentOrder(feedOrder)}\n    >\n      {/* Top */}\n      <OrderCardTop>\n        {/* Number */}\n        <ParagraphDigits\n          text={`#${orderNumber}`}\n        />\n        {/* Date */}\n        <OrderCardDate\n          creationDate={creationDate}\n        />\n      </OrderCardTop>\n\n      {/* Name */}\n      <OrderCardDescription\n        description={name}\n      />\n\n      {/* Bottom */}\n      <OrderCardBottom>\n        {/* Order Ingredients Logos */}\n        <OrderCardPreview\n          ingredients={ingredients}\n        />\n        {/* Order Sum */}\n        <Price\n          price={price}\n        />\n      </OrderCardBottom>\n\n    </Link>\n  );\n});\n","import { useCallback } from 'react';\r\n// store\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\nimport {\r\n  wsOrdersStartAction,\r\n  wsOrdersCloseAction,\r\n  ordersSelectors\r\n} from 'store/orders';\r\n\r\n// Get required selectors\r\nconst {\r\n  wsLoadingSelector,\r\n  wsErrorTextSelector,\r\n  wsConnectedSelector\r\n} = ordersSelectors;\r\n\r\n// HOOK\r\nexport const useProfileSocket = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { wsLoading } = useAppSelector(wsLoadingSelector);\r\n  const { wsErrorText } = useAppSelector(wsErrorTextSelector);\r\n  const { wsConnected } = useAppSelector(wsConnectedSelector);\r\n\r\n  const wsStart = useCallback(() => {\r\n    dispatch(wsOrdersStartAction());\r\n  }, [dispatch]);\r\n\r\n  const wsClose = useCallback(() => {\r\n    dispatch(wsOrdersCloseAction());\r\n  }, [dispatch]);\r\n\r\n  // RETURN\r\n  return {\r\n    wsLoading,\r\n    wsErrorText,\r\n    wsConnected,\r\n\r\n    wsStart,\r\n    wsClose\r\n  };\r\n};\r\n","import { useCallback } from 'react';\r\n// store\r\nimport { useAppDispatch } from 'store';\r\nimport {\r\n  setCurrentOrderAction,\r\n  clearCurrentOrderAction,\r\n  getOrderAction\r\n} from 'store/orders';\r\n// models\r\nimport { OrderModel } from 'models';\r\n\r\n// HOOK\r\nexport const useProfileActions = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const setCurrentOrder = useCallback((order: OrderModel) => {\r\n    dispatch(setCurrentOrderAction({ order }));\r\n  }, [dispatch]);\r\n\r\n  const clearCurrentOrder = useCallback(() => {\r\n    dispatch(clearCurrentOrderAction());\r\n  }, [dispatch]);\r\n\r\n  const fetchOrder = useCallback(async (orderNumber: string): Promise<void> => {\r\n    await dispatch(getOrderAction({ orderNumber }));\r\n  }, [dispatch]);\r\n\r\n  // RETURN\r\n  return {\r\n    setCurrentOrder,\r\n    clearCurrentOrder,\r\n\r\n    fetchOrder\r\n  };\r\n};\r\n","import { memo } from 'react';\n// router\nimport { useRouteMatch, useLocation, Link } from 'react-router-dom';\n// third-party libraries\nimport classNames from 'classnames';\n// store\nimport { useAppSelector } from 'store';\nimport { ordersSelectors } from 'store/orders';\n// hooks\nimport { useProfileActions } from 'hooks/profile';\n// сomponents\nimport { Price, ParagraphDigits } from 'components/base';\n// aux.\nimport {\n  OrderCardTop,\n  OrderCardDate,\n  OrderCardDescription,\n  OrderCardStatus,\n  OrderCardBottom,\n  OrderCardPreview\n} from './auxiliary';\n// css\nimport styles from './order-card.module.css';\n\n// Get required selectors\nconst { orderByIdSelector } = ordersSelectors;\n\n// PROPS\ninterface ProfileOrderCardProps {\n  orderId: string;\n  className?: string;\n}\n\n// COMPONENT\nexport const ProfileOrderCard = memo((props: ProfileOrderCardProps) => {\n  const { orderId, className } = props;\n\n  // Get the parameters of the current url\n  const { url } = useRouteMatch();\n  // Get the current location\n  const location = useLocation();\n\n  // Get the order by id\n  const { order } = useAppSelector(orderByIdSelector(orderId));\n\n  // Get function to set current order\n  const { setCurrentOrder } = useProfileActions();\n\n  // No order\n  if (!order) {\n    return null;\n  }\n\n  // Get fields of the current feed-order\n  const {\n    orderNumber,\n    creationDate,\n    name,\n    ingredients,\n    price,\n    status\n  } = order;\n\n  // css\n  const classesRoot = classNames(\n    styles['order-card'],\n    className\n  );\n\n  // RENDER\n  return (\n    <Link\n      className={classesRoot}\n      to={{\n        pathname: `${url}/${orderNumber}`,\n        state: { backgroundProfile: location }\n      }}\n      onClick={() => setCurrentOrder(order)}\n    >\n      {/* Top */}\n      <OrderCardTop>\n        {/* Number */}\n        <ParagraphDigits\n          text={`#${orderNumber}`}\n        />\n        {/* Date */}\n        <OrderCardDate\n          creationDate={creationDate}\n        />\n      </OrderCardTop>\n\n      {/* Name */}\n      <OrderCardDescription\n        description={name}\n      />\n\n      {/* Status */}\n      <OrderCardStatus\n        status={status}\n      />\n\n      {/* Bottom */}\n      <OrderCardBottom>\n        {/* Order Ingredients Logos */}\n        <OrderCardPreview\n          ingredients={ingredients}\n        />\n        {/* Order Sum */}\n        <Price\n          price={price}\n        />\n      </OrderCardBottom>\n\n    </Link>\n  );\n});\n","// components\r\nimport {\r\n  Paragraph,\r\n  IngredientLogo,\r\n  Price\r\n} from 'components/base';\r\n// css\r\nimport styles from './order-info-item.module.css';\r\n\r\n// PROPS\r\ninterface OrderInfoItemProps {\r\n  img: string;\r\n  name: string;\r\n  num: number;\r\n  price: number;\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderInfoItem = (props: OrderInfoItemProps) => {\r\n  const {\r\n    img,\r\n    name,\r\n    num,\r\n    price\r\n  } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['order-info__item']}>\r\n\r\n      {/* Image */}\r\n      <IngredientLogo\r\n        imgPath={img}\r\n      />\r\n\r\n      {/* Name */}\r\n      <Paragraph\r\n        className={styles['order-info__item-name']}\r\n        text={name}\r\n      />\r\n\r\n      {/* Price */}\r\n      <Price\r\n        price={price}\r\n        num={num}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n","import { IngredientModel } from 'models';\r\n\r\ntype IngredientsByIdType = {\r\n  [key: string]: {\r\n    num: number,\r\n    ingredient: IngredientModel\r\n  }\r\n}\r\n\r\ntype IngredientsForOrderInfoType = {\r\n  id: string,\r\n  name: string,\r\n  img: string,\r\n  price: number,\r\n  num: number\r\n}\r\n\r\n// FUNCTION\r\nconst convertArrayToObject = (\r\n  ingredients: IngredientModel[]\r\n): IngredientsByIdType => ingredients.reduce(\r\n  // Reduce function\r\n  (acc: IngredientsByIdType, current) => {\r\n    if (Object.keys(acc).includes(current.id)) {\r\n      acc[current.id].num += 1;\r\n    } else {\r\n      acc[current.id] = {\r\n        ingredient: current,\r\n        num: 1\r\n      };\r\n    }\r\n\r\n    return acc;\r\n  },\r\n  // The initial value\r\n  {}\r\n);\r\n\r\n// FUNCTION\r\nexport const prepareIngredientsForOrderInfo = (\r\n  ingredients: IngredientModel[]\r\n): IngredientsForOrderInfoType[] => {\r\n  const obj = convertArrayToObject(ingredients);\r\n\r\n  return Object.keys(obj)\r\n    .map((key) => ({\r\n      id: key,\r\n      name: obj[key].ingredient.name,\r\n      img: obj[key].ingredient.imageMobile,\r\n      price: obj[key].ingredient.price,\r\n      num: obj[key].num\r\n    }));\r\n};\r\n","import { useMemo } from 'react';\r\n// types\r\nimport { IngredientModel } from 'models';\r\n// aux.\r\nimport { OrderInfoItem } from '../order-info-item';\r\nimport { prepareIngredientsForOrderInfo } from '../utils';\r\n// css\r\nimport styles from './order-info-list.module.css';\r\n\r\n// PROPS\r\ninterface OrderInfoIngredientsProps {\r\n  ingredients: IngredientModel[];\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderInfoList = (props: OrderInfoIngredientsProps) => {\r\n  const {\r\n    ingredients\r\n  } = props;\r\n\r\n  // Define the list of items to render\r\n  const contentList = useMemo(() => {\r\n    // Convert the array of ingredients\r\n    // to the required format\r\n    const data = prepareIngredientsForOrderInfo(ingredients);\r\n\r\n    return (\r\n      <>\r\n        {\r\n          data.map((item) => (\r\n            <OrderInfoItem\r\n              key={item.id}\r\n              img={item.img}\r\n              name={item.name}\r\n              num={item.num}\r\n              price={item.price}\r\n            />\r\n          ))\r\n        }\r\n      </>\r\n    );\r\n  }, [ingredients]);\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['order-info__list']}>\r\n      { contentList }\r\n    </div>\r\n  );\r\n};\r\n","// third-party libraires\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph, Price } from 'components/base';\r\n// utils\r\nimport { formatDate } from 'utils';\r\n// css\r\nimport styles from './order-info-total.module.css';\r\n\r\n// PROPS\r\ninterface OrderInfoTotalProps {\r\n  date: string;\r\n  price: number;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderInfoTotal = (props: OrderInfoTotalProps) => {\r\n  const { date, price, className } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['order-info-total'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      {/* Date */}\r\n      <Paragraph\r\n        className={styles['order-info-total__date']}\r\n        text={formatDate(date)}\r\n      />\r\n      {/* Price */}\r\n      <Price\r\n        price={price}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph, OrderStatus } from 'components/base';\r\n// types\r\nimport { OrderModel } from 'models';\r\n// aux.\r\nimport { OrderInfoList } from '../order-info-list';\r\nimport { OrderInfoTotal } from '../order-info-total';\r\n// css\r\nimport styles from './order-info-desktop.module.css';\r\n\r\n// PROPS\r\ninterface OrderInfoDesktopProps {\r\n  order: OrderModel;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderInfoDesktop = (props: OrderInfoDesktopProps) => {\r\n  const {\r\n    order: {\r\n      name,\r\n      status,\r\n      creationDate,\r\n      price,\r\n      ingredients\r\n    },\r\n    className\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['order-info'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n\r\n      {/* NAME */}\r\n      <Paragraph\r\n        className={styles['order-info__name']}\r\n        size=\"medium\"\r\n        text={name}\r\n      />\r\n\r\n      {/* STATUS */}\r\n      <OrderStatus\r\n        className={styles['order-info__status']}\r\n        status={status}\r\n      />\r\n\r\n      {/* CONTENT HEADER */}\r\n      <Paragraph\r\n        className={styles['order-info__content-header']}\r\n        text=\"Состав:\"\r\n        size=\"medium\"\r\n      />\r\n\r\n      {/* CONTENT */}\r\n      <div className={styles['order-info__content']}>\r\n        <OrderInfoList ingredients={ingredients} />\r\n      </div>\r\n\r\n      {/* ORDER TOTAL */}\r\n      <OrderInfoTotal\r\n        className={styles['order-info__total']}\r\n        date={creationDate}\r\n        price={price}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph, ParagraphDigits, OrderStatus } from 'components/base';\r\n// types\r\nimport { OrderModel } from 'models';\r\n// aux.\r\nimport { OrderInfoList } from '../order-info-list';\r\n// css\r\nimport styles from './order-info-mobile.module.css';\r\n\r\n// PROPS\r\ninterface OrderInfoMobileProps {\r\n  order: OrderModel;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderInfoMobile = (props: OrderInfoMobileProps) => {\r\n  const {\r\n    order: {\r\n      orderNumber,\r\n      name,\r\n      status,\r\n      ingredients\r\n    },\r\n    className\r\n  } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['order-info'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n\r\n      {/* NUMBER */}\r\n      <ParagraphDigits\r\n        className={styles['order-info__number']}\r\n        text={`#${orderNumber}`}\r\n      />\r\n\r\n      {/* NAME */}\r\n      <Paragraph\r\n        className={styles['order-info__name']}\r\n        size=\"medium\"\r\n        text={name}\r\n      />\r\n\r\n      {/* STATUS */}\r\n      <OrderStatus\r\n        className={styles['order-info__status']}\r\n        status={status}\r\n      />\r\n\r\n      {/* CONTENT HEADER */}\r\n      <Paragraph\r\n        className={styles['order-info__content-header']}\r\n        text=\"Состав:\"\r\n        size=\"medium\"\r\n      />\r\n\r\n      {/* CONTENT */}\r\n      <div className={styles['order-info__content']}>\r\n        <OrderInfoList ingredients={ingredients} />\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n","// models\r\nimport { OrderModel } from 'models';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { commonSelectors } from 'store/common';\r\n// aux.\r\nimport { OrderInfoDesktop } from './order-info-desktop';\r\nimport { OrderInfoMobile } from './order-info-mobile';\r\n\r\n// Get selectors\r\nconst { modeSelector } = commonSelectors;\r\n\r\n// PROPS\r\ninterface OrderInfoProps {\r\n  order: OrderModel;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderInfo = (props: OrderInfoProps) => {\r\n  const {\r\n    order,\r\n    className\r\n  } = props;\r\n\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n\r\n      {/* FOR DESKTOP */}\r\n      { mode === 'desktop' && (\r\n        <OrderInfoDesktop\r\n          className={className}\r\n          order={order}\r\n        />\r\n      ) }\r\n\r\n      {/* FOR MOBILE */}\r\n      { mode === 'mobile' && (\r\n        <OrderInfoMobile\r\n          className={className}\r\n          order={order}\r\n        />\r\n      ) }\r\n\r\n    </>\r\n  );\r\n};\r\n","import { ReactNode, useEffect, useState } from 'react';\r\n// hooks\r\nimport { useAuth } from 'hooks/auth';\r\n// components\r\nimport { AppLoader } from 'components/common';\r\n\r\n// PROPS\r\ninterface PreloaderProps {\r\n  children: ReactNode\r\n}\r\n\r\n// COMPONENT\r\nexport const Preloader = (props: PreloaderProps) => {\r\n  const { children } = props;\r\n\r\n  // Here we store the flag whether prep actions are completed or not.\r\n  // While prep actions aren't completed, we show loader\r\n  const [preCompleted, setPreCompleted] = useState<boolean>(false);\r\n\r\n  // Get function to get user by the token saved in cookies\r\n  const { getUser } = useAuth();\r\n\r\n  // Define the function to load required data before to render component\r\n  const preloadData = async () => {\r\n    try {\r\n      // fetch user\r\n      await getUser();\r\n    } catch {\r\n      //\r\n    } finally {\r\n      // complete prep\r\n      setPreCompleted(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preloadData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // LOADER\r\n  if (!preCompleted) {\r\n    return <AppLoader />;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      { children }\r\n    </>\r\n  );\r\n};\r\n","import { RefObject } from 'react';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport { Icon } from 'components/icons';\r\n// css\r\nimport styles from './action-delete.module.css';\r\n\r\n// PROPS\r\ninterface ActionDeleteProps {\r\n  elementRef?: RefObject<HTMLDivElement>;\r\n}\r\n\r\n// COMPONENT\r\nexport const ActionDelete = (props: ActionDeleteProps) => {\r\n  const { elementRef } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      className={styles['swiper__actions-delete']}\r\n      ref={elementRef}\r\n    >\r\n      <Icon\r\n        name=\"DeleteIcon\"\r\n        type=\"primary\"\r\n      />\r\n      <Paragraph\r\n        text=\"Удалить\"\r\n        size=\"small\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  ReactNode,\r\n  useRef,\r\n  useEffect,\r\n  RefObject\r\n} from 'react';\r\n// aux.\r\nimport { ActionDelete } from './action-delete';\r\n// css\r\nimport styles from './swiper.module.css';\r\n\r\n// PROPS\r\ninterface SwiperProps {\r\n  elementRef: RefObject<HTMLDivElement>;\r\n  children: ReactNode;\r\n  active?: boolean;\r\n  onDelete?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const Swiper = (props: SwiperProps) => {\r\n  const {\r\n    elementRef,\r\n    children,\r\n    active = true,\r\n    onDelete\r\n  } = props;\r\n\r\n  const deleteRef = useRef<HTMLDivElement>(null);\r\n\r\n  //\r\n  useEffect(() => {\r\n    let start = 0;\r\n    let offset = 0;\r\n\r\n    let currentDelta = 0;\r\n\r\n    const widthDeleteAction = 70;\r\n\r\n    const element = elementRef.current;\r\n    const deleteElement = deleteRef.current;\r\n\r\n    // function to get the width of the component\r\n    //\r\n    const getComponentWidth = (): number => {\r\n      return (element?.clientWidth || 0);\r\n    };\r\n\r\n    // function to get the threshold.\r\n    // The threshold is a value when the element is deleted\r\n    //\r\n    const getThreshold = (): number => {\r\n      return (getComponentWidth() * 60) / 100;\r\n    };\r\n\r\n    // function to set the \"translateX\" property\r\n    // for the element\r\n    //\r\n    const setElementOffset = (data: number, smooth?: boolean): void => {\r\n      if (!element) {\r\n        return;\r\n      }\r\n\r\n      // set the offset\r\n      if (data) {\r\n        element.style.transform = `translateX(${data}px)`;\r\n      } else {\r\n        element.style.transform = '';\r\n      }\r\n\r\n      // set transition duration for smooth moving\r\n      if (smooth) {\r\n        element.style.transitionDuration = '0.5s';\r\n      } else {\r\n        element.style.transitionDuration = '';\r\n      }\r\n    };\r\n\r\n    // function to set the \"right\" property\r\n    // for the action \"delete\"\r\n    //\r\n    const setDeleteOffset = (data: number, options?: { duration?: number }) => {\r\n      if (!deleteElement) {\r\n        return;\r\n      }\r\n\r\n      // do offset\r\n      if (data) {\r\n        deleteElement.style.right = `${data}px`;\r\n      } else {\r\n        deleteElement.style.right = '';\r\n      }\r\n\r\n      // set duration\r\n      if (options?.duration) {\r\n        deleteElement.style.transitionDuration = `${options.duration}ms`;\r\n      } else {\r\n        deleteElement.style.transitionDuration = '';\r\n      }\r\n    };\r\n\r\n    // function to zero the element height\r\n    //\r\n    const collapseElement = (): void => {\r\n      // Get the DOM-element\r\n      if (!element) {\r\n        return;\r\n      }\r\n\r\n      // const height = elementRef.current.scrollHeight;\r\n      // const style = elementRef.current.style;\r\n      const { clientHeight: height, style } = element;\r\n\r\n      // Use the method \"requestAnimationFrame\"\r\n      //  to reset the height of the element\r\n      requestAnimationFrame(() => {\r\n        style.minHeight = 'initial';\r\n        style.height = `${height}px`;\r\n        style.transition = 'height 300ms';\r\n\r\n        requestAnimationFrame(() => {\r\n          style.height = '0';\r\n          // onDelete && onDelete();\r\n        });\r\n      });\r\n    };\r\n\r\n    // element -> touch start\r\n    const touchStartHandler = (e: TouchEvent) => {\r\n      start = e.targetTouches[0].clientX;\r\n    };\r\n\r\n    // element -> touch move\r\n    const touchMoveHandler = (e: TouchEvent) => {\r\n      //\r\n      const currentX = e.targetTouches[0].clientX;\r\n\r\n      // calculate the offset of the last touch\r\n      currentDelta = currentX - start;\r\n\r\n      // calculate the \"currentOffset\" as \"currentDelta\" and saved \"offset\"\r\n      const currentOffset = offset + currentDelta;\r\n\r\n      //\r\n      const threshold = getThreshold();\r\n\r\n      // don't allow to swipe to the right\r\n      if (currentOffset > 0) {\r\n        setElementOffset(0);\r\n      } else if (Math.abs(currentOffset) >= threshold) {\r\n        setElementOffset(currentOffset);\r\n\r\n        // move the action \"Delete\" to the left of the field \"Actions\"\r\n        const deleteOffset = Math.abs(currentOffset + widthDeleteAction);\r\n        setDeleteOffset(deleteOffset);\r\n      } else {\r\n        setElementOffset(currentOffset);\r\n\r\n        // reset the offset for action \"delete\"\r\n        setDeleteOffset(0);\r\n      }\r\n    };\r\n\r\n    // element -> touch end\r\n    //\r\n    const touchEndHandler = () => {\r\n      // save the current offset\r\n      offset += currentDelta;\r\n\r\n      //\r\n      const componentWidth = getComponentWidth();\r\n      const threshold = getThreshold();\r\n\r\n      // don't allow to swipe to right\r\n      if (offset > 0) {\r\n        offset = 0;\r\n        setElementOffset(offset);\r\n\r\n      // offset is less than action width\r\n      } else if (Math.abs(offset) < widthDeleteAction) {\r\n        offset = 0;\r\n        setElementOffset(offset, true);\r\n\r\n      // offset is less than threshold\r\n      } else if (Math.abs(offset) < threshold) {\r\n        offset = widthDeleteAction * -1;\r\n        setElementOffset(offset, true);\r\n\r\n      // offset is greater than threshold\r\n      } else if (Math.abs(offset) >= threshold) {\r\n        offset = componentWidth * -1;\r\n        setElementOffset(offset, true);\r\n\r\n        // hide the \"Delete\" action in the left end\r\n        setDeleteOffset(componentWidth, { duration: 500 });\r\n      }\r\n    };\r\n\r\n    // action \"delete\" -> transition end\r\n    //\r\n    const deleteActionTransitionEndHandler = () => {\r\n      if (!deleteElement) {\r\n        return;\r\n      }\r\n\r\n      // handle the situation, when the action \"delete\"\r\n      // get hidden in the left end\r\n      if (deleteElement.style.right === `${getComponentWidth()}px`) {\r\n        collapseElement();\r\n        // onDelete && onDelete();\r\n      } else if (deleteElement.style.height === '0') {\r\n        onDelete && onDelete();\r\n      }\r\n    };\r\n\r\n    const elementTransitionEndHandler = () => {\r\n      // console.log('element', element);\r\n      if (!element) {\r\n        return;\r\n      }\r\n\r\n      if (element.style.height === '0' || element.style.height === '0px') {\r\n        // console.log('collapsed1');\r\n        onDelete && onDelete();\r\n      }\r\n    };\r\n\r\n    // add handlers\r\n    if (active) {\r\n      element?.addEventListener('touchstart', touchStartHandler);\r\n      element?.addEventListener('touchmove', touchMoveHandler);\r\n      element?.addEventListener('touchend', touchEndHandler);\r\n      element?.addEventListener('transitionend', elementTransitionEndHandler);\r\n\r\n      deleteElement?.addEventListener('transitionend', deleteActionTransitionEndHandler);\r\n    }\r\n\r\n    // remove handlers\r\n    return () => {\r\n      if (active) {\r\n        element?.removeEventListener('touchstart', touchStartHandler);\r\n        element?.removeEventListener('touchmove', touchMoveHandler);\r\n        element?.removeEventListener('touchend', touchEndHandler);\r\n        element?.removeEventListener('transitionend', elementTransitionEndHandler);\r\n\r\n        deleteElement?.addEventListener('transitionend', deleteActionTransitionEndHandler);\r\n      }\r\n    };\r\n  }, [elementRef, onDelete, active]);\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['swiper']}>\r\n\r\n      {/* ACTIONS */}\r\n      <div className={styles['swiper__actions']}>\r\n        <ActionDelete elementRef={deleteRef} />\r\n      </div>\r\n\r\n      {/* CONTENT */}\r\n      { children }\r\n\r\n    </div>\r\n  );\r\n};\r\n","// hooks\r\nimport { useToasts } from 'hooks/toasts';\r\n// components\r\nimport { Toast } from 'components/toasts';\r\n// css\r\nimport styles from './toasts-container.module.css';\r\n\r\n// COMPONENT\r\nexport const ToastsContainer = () => {\r\n  const { toasts, deleteToast } = useToasts();\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['toasts-container']}>\r\n      {\r\n        toasts.map((item) => (\r\n          <Toast\r\n            key={item.id}\r\n            toast={item}\r\n            onRemoved={deleteToast}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n};\r\n","interface CheckCircleFillProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const CheckCircleFill = (props: CheckCircleFillProps) => {\r\n  const { className } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n      width=\"16\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 16 16\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\r\n    </svg>\r\n  );\r\n};\r\n","interface InfoFillProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const InfoFill = (props: InfoFillProps) => {\r\n  const { className } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n      width=\"16\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 16 16\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\" />\r\n    </svg>\r\n  );\r\n};\r\n","interface ExclamationTriangleFillProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const ExclamationTriangleFill = (props: ExclamationTriangleFillProps) => {\r\n  const { className } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      className={className}\r\n      width=\"16\"\r\n      height=\"16\"\r\n      viewBox=\"0 0 16 16\"\r\n      fill=\"currentColor\"\r\n    >\r\n      <path d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// hooks\r\nimport { useTimer } from 'hooks/common';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport { CloseIcon } from 'components/icons/icons';\r\n// types\r\nimport { ToastModel } from 'models';\r\n// aux.\r\nimport {\r\n  CheckCircleFill,\r\n  InfoFill,\r\n  ExclamationTriangleFill\r\n} from './svg';\r\n// css\r\nimport styles from './toast.module.css';\r\n\r\n// PROPS\r\ninterface ToastProps {\r\n  toast: ToastModel;\r\n  onRemoved: (id: string) => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const Toast = (props: ToastProps) => {\r\n  const {\r\n    toast: { id, text, type },\r\n    onRemoved\r\n  } = props;\r\n\r\n  // After 5 seconds delete the toast\r\n  const { finished } = useTimer(5);\r\n\r\n  useEffect(() => {\r\n    // If the timer is finished,\r\n    // run \"onRemoved\" from the props\r\n    finished && onRemoved(id);\r\n  }, [finished, id, onRemoved]);\r\n\r\n  // When an user clicks on the \"Close\" button\r\n  const onClickCloseHandler = () => {\r\n    onRemoved(id);\r\n  };\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['toast'],\r\n    {\r\n      [styles['toast--primary']]: type === 'information',\r\n      [styles['toast--danger']]: type === 'danger',\r\n      [styles['toast--success']]: type === 'success'\r\n    }\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n\r\n      {/* ICON */}\r\n      {\r\n        type === 'information' && (\r\n          <CheckCircleFill\r\n            className={styles['toast__icon']}\r\n          />\r\n        )\r\n      }\r\n      {\r\n        type === 'success' && (\r\n          <InfoFill\r\n            className={styles['toast__icon']}\r\n          />\r\n        )\r\n      }\r\n      {\r\n        type === 'danger' && (\r\n          <ExclamationTriangleFill\r\n            className={styles['toast__icon']}\r\n          />\r\n        )\r\n      }\r\n\r\n      {/* TEXT */}\r\n      <Paragraph\r\n        className={styles['toast__text']}\r\n        text={text}\r\n        size=\"small\"\r\n      />\r\n\r\n      {/* CLOSE */}\r\n      <CloseIcon\r\n        className={styles['toast__close']}\r\n        name=\"CloseIcon\"\r\n        onClick={onClickCloseHandler}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n\r\n// HOOK\r\nexport const useTimer = (seconds: number) => {\r\n  const [finished, setFinished] = useState<boolean>(false);\r\n  // Start the timer\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => setFinished(true), seconds * 1000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [seconds]);\r\n\r\n  return {\r\n    finished\r\n  };\r\n};\r\n","import { memo, ReactNode } from 'react';\r\n// components\r\nimport { Container } from 'components/base';\r\nimport { AppHeader } from 'components/common';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { commonSelectors } from 'store/common';\r\n// css\r\nimport styles from './main-layout.module.css';\r\n\r\n// Get selectors\r\nconst { modeSelector } = commonSelectors;\r\n\r\n// PROPS\r\ninterface MainLayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// COMPONENT\r\nexport const MainLayout = memo((props: MainLayoutProps) => {\r\n  const { children } = props;\r\n\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  // This layout can only be rendered in 'desktop' mode\r\n  if (mode !== 'desktop') {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['main-layout']}>\r\n\r\n      {/* HEADER */}\r\n      <AppHeader />\r\n\r\n      {/* MAIN */}\r\n      <main>\r\n        <Container>\r\n          {children}\r\n        </Container>\r\n      </main>\r\n\r\n    </div>\r\n  );\r\n});\r\n","/* eslint-disable react/self-closing-comp */\r\n\r\nimport { memo, ReactNode } from 'react';\r\n// components\r\nimport { Container } from 'components/base';\r\nimport { MobileHeader } from 'components/common';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { commonSelectors } from 'store/common';\r\n// css\r\nimport styles from './mobile-layout.module.css';\r\n\r\n// Get selectors\r\nconst { modeSelector } = commonSelectors;\r\n\r\n// PROPS\r\ninterface MobileLayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// COMPONENT\r\nexport const MobileLayout = memo((props: MobileLayoutProps) => {\r\n  const { children } = props;\r\n\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  // This layout can only be rendered in 'desktop' mode\r\n  if (mode !== 'mobile') {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['mobile-layout']}>\r\n\r\n      {/* HEADER */}\r\n      <MobileHeader />\r\n\r\n      {/* MAIN */}\r\n      <main id=\"content\">\r\n        <Container className={styles['mobile-layout__container']}>\r\n          {children}\r\n        </Container>\r\n      </main>\r\n\r\n      {/* FOOTER */}\r\n      <footer id=\"footer\"></footer>\r\n\r\n    </div>\r\n  );\r\n});\r\n","import { useCallback } from 'react';\r\n// store\r\nimport { useAppDispatch } from 'store';\r\nimport {\r\n  fetchIngredientsAsyncAction,\r\n  setCurrentIngredientAction,\r\n  clearCurrentIngredientAction\r\n} from 'store/ingredients';\r\n// types\r\nimport { IngredientModel } from 'models';\r\n\r\n// HOOK\r\nexport const useIngredientsActions = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  // Function to fetch ingredients\r\n  const fetchIngredients = useCallback(async (): Promise<void> => {\r\n    await dispatch(fetchIngredientsAsyncAction());\r\n  }, [dispatch]);\r\n\r\n  const setCurrentIngredient = useCallback((ingredient: IngredientModel) => {\r\n    dispatch(setCurrentIngredientAction({ ingredient }));\r\n  }, [dispatch]);\r\n\r\n  const clearCurrentIngredient = useCallback(() => {\r\n    dispatch(clearCurrentIngredientAction());\r\n  }, [dispatch]);\r\n\r\n  // RETURN\r\n  return {\r\n    fetchIngredients,\r\n    setCurrentIngredient,\r\n    clearCurrentIngredient\r\n  };\r\n};\r\n","import { memo } from 'react';\r\n// router\r\nimport { Link, useLocation } from 'react-router-dom';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\nimport { useDrag } from 'react-dnd';\r\n// components\r\nimport {\r\n  Paragraph,\r\n  BackgroundImage,\r\n  Price\r\n} from 'components/base';\r\nimport { Counter } from 'components/yandex';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\nimport { burgerConstructorSelectors } from 'store/burger-constructor';\r\n// hooks\r\nimport { useIngredientsActions } from 'hooks/ingredients';\r\nimport { useIngredientUrl } from 'hooks/common';\r\n// css\r\nimport styles from './ingredient.module.css';\r\n\r\n// Get required selectors\r\nconst { ingredientByIdSelector } = ingredientsSelectors;\r\nconst { ingredientCountSelector } = burgerConstructorSelectors;\r\n\r\n// PROPS\r\ninterface IngredientProps {\r\n  id: string;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const Ingredient = memo((props: IngredientProps) => {\r\n  const {\r\n    id,\r\n    className = ''\r\n  } = props;\r\n\r\n  // Get ingredient by id from the store\r\n  const { ingredient } = useAppSelector(ingredientByIdSelector(id));\r\n\r\n  // Get the count of the ingredient in the constructor\r\n  const { count } = useAppSelector(ingredientCountSelector(id));\r\n\r\n  // Function to set the current ingredient in the store\r\n  const { setCurrentIngredient } = useIngredientsActions();\r\n\r\n  // Get the current location\r\n  const location = useLocation();\r\n\r\n  // Define data for a drag-and-drop operation\r\n  const [, dragRef] = useDrag({\r\n    // Define the type of the draggable element\r\n    // as the ingredient type\r\n    type: ingredient?.type || '',\r\n    // Define the item as the ingredient id\r\n    item: { id: ingredient?.id || '' }\r\n  });\r\n\r\n  // Get the url to ingredient details\r\n  const { path } = useIngredientUrl(id);\r\n\r\n  // If there is no ingredient, return null\r\n  if (!ingredient) {\r\n    return null;\r\n  }\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['ingredient'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <Link\r\n      className={classes}\r\n      to={{\r\n        pathname: path,\r\n        state: { background: location }\r\n      }}\r\n      onClick={() => setCurrentIngredient(ingredient)}\r\n      ref={dragRef}\r\n    >\r\n\r\n      <div className={styles['ingredient__content']}>\r\n\r\n        {/* Image */}\r\n        <BackgroundImage\r\n          src={ingredient.image}\r\n          className={styles['ingredient__image']}\r\n        />\r\n\r\n        {/* Price */}\r\n        <Price\r\n          className={styles['ingredient__price']}\r\n          price={ingredient.price}\r\n        />\r\n\r\n        {/* Description */}\r\n        <Paragraph\r\n          className={styles['ingredient__description']}\r\n          text={ingredient.name}\r\n        />\r\n\r\n      </div>\r\n\r\n      {/* Counter */}\r\n      {\r\n        count !== 0 && (\r\n          <Counter\r\n            count={count}\r\n            size=\"small\"\r\n          />\r\n        )\r\n      }\r\n\r\n    </Link>\r\n  );\r\n});\r\n","import { useCallback } from 'react';\r\n// third-party libraries\r\nimport { v4 as uuid } from 'uuid';\r\n// types\r\nimport { IngredientModel, IngredientWithPositionModel } from 'models';\r\n// store\r\nimport { useAppDispatch } from 'store';\r\nimport {\r\n  addBunAction,\r\n  addIngredientAction,\r\n  deleteIngredientAction,\r\n  updateMiddleAction,\r\n  clearConstructorAction\r\n} from 'store/burger-constructor';\r\n\r\n// HOOK\r\nexport const useConstructorActions = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const addBun = useCallback((ingredient: IngredientModel) => {\r\n    dispatch(addBunAction({ ingredient }));\r\n  }, [dispatch]);\r\n\r\n  // The function adds an ingredient into the middle\r\n  // of the burger constructor\r\n  const addIngredient = useCallback((ingredient: IngredientModel) => {\r\n    dispatch(addIngredientAction({\r\n      // This action creator gets \"IngredientWithPositionType\" as a parameter,\r\n      // so we destructure ingredient and generate positionId\r\n      ingredient: {\r\n        ...ingredient,\r\n        positionId: uuid()\r\n      }\r\n    }));\r\n  }, [dispatch]);\r\n\r\n  // Function deletes ingredient from the constructor by its id\r\n  const deleteIngredient = useCallback((id: string) => {\r\n    dispatch(deleteIngredientAction({ id }));\r\n  }, [dispatch]);\r\n\r\n  // The handler to update the middle\r\n  // in the burger constructor in the store\r\n  const updateBurger = useCallback((middle: IngredientWithPositionModel[]) => {\r\n    dispatch(updateMiddleAction({ middle }));\r\n  }, [dispatch]);\r\n\r\n  // Function to remove all ingredients from the constructor\r\n  const clearBurger = useCallback(() => {\r\n    dispatch(clearConstructorAction());\r\n  }, [dispatch]);\r\n\r\n  // RETURN\r\n  return {\r\n    addBun,\r\n    addIngredient,\r\n    deleteIngredient,\r\n    updateBurger,\r\n    clearBurger\r\n  };\r\n};\r\n","import { memo } from 'react';\r\n// router\r\nimport { Link, useLocation } from 'react-router-dom';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport {\r\n  Paragraph,\r\n  BackgroundImage,\r\n  Price\r\n} from 'components/base';\r\nimport { Counter } from 'components/yandex';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\nimport { burgerConstructorSelectors } from 'store/burger-constructor';\r\n// hooks\r\nimport { useIngredientsActions } from 'hooks/ingredients';\r\nimport { useConstructorActions } from 'hooks/constructor';\r\nimport { useIngredientUrl } from 'hooks/common';\r\n// css\r\nimport styles from './ingredient-mobile.module.css';\r\n\r\n// Get required selectors\r\nconst { ingredientByIdSelector } = ingredientsSelectors;\r\nconst { ingredientCountSelector } = burgerConstructorSelectors;\r\n\r\n// PROPS\r\ninterface IngredientMobileProps {\r\n  id: string;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const IngredientMobile = memo((props: IngredientMobileProps) => {\r\n  const {\r\n    id,\r\n    className = ''\r\n  } = props;\r\n\r\n  // Get ingredient by id from the store\r\n  const { ingredient } = useAppSelector(ingredientByIdSelector(id));\r\n\r\n  // Get the count of the ingredient in the constructor\r\n  const { count } = useAppSelector(ingredientCountSelector(id));\r\n\r\n  // Function to set the current ingredient in the store\r\n  const { setCurrentIngredient } = useIngredientsActions();\r\n\r\n  // Functions to add ingredients to constructor\r\n  const { addBun, addIngredient } = useConstructorActions();\r\n\r\n  // Get the current location\r\n  const location = useLocation();\r\n\r\n  // Get the url to ingredient details\r\n  const { path } = useIngredientUrl(id);\r\n\r\n  // If there is no ingredient, return null\r\n  if (!ingredient) {\r\n    return null;\r\n  }\r\n\r\n  // Choose the right function depending on the ingredient type\r\n  const addToConstructor = ingredient.type === 'bun'\r\n    ? addBun\r\n    : addIngredient;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['ingredient'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n\r\n      <Link\r\n        className={styles['ingredient__content']}\r\n        to={{\r\n          pathname: path,\r\n          state: { background: location }\r\n        }}\r\n        onClick={() => setCurrentIngredient(ingredient)}\r\n      >\r\n\r\n        {/* Image */}\r\n        <BackgroundImage\r\n          className={styles['ingredient__image']}\r\n          src={ingredient.image}\r\n        />\r\n\r\n        {/* Price */}\r\n        <Price\r\n          className={styles['ingredient__price']}\r\n          price={ingredient.price}\r\n        />\r\n\r\n        {/* Description */}\r\n        <Paragraph\r\n          className={styles['ingredient__description']}\r\n          text={ingredient.name}\r\n        />\r\n      </Link>\r\n\r\n      {/* Button Add */}\r\n      <Paragraph\r\n        className={styles['ingredient__btn-add']}\r\n        text=\"Добавить\"\r\n        onClick={() => addToConstructor(ingredient)}\r\n      />\r\n\r\n      {/* Counter */}\r\n      {\r\n        count !== 0 && (\r\n          <Counter\r\n            count={count}\r\n            size=\"small\"\r\n          />\r\n        )\r\n      }\r\n\r\n    </div>\r\n  );\r\n});\r\n","import { memo } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// types\r\nimport { TIngredientType } from 'models';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\n// hooks\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\n// aux.\r\nimport { Ingredient, IngredientMobile } from 'components/home';\r\n// css\r\nimport styles from './ingredient-group.module.css';\r\n\r\n// Get required selectors\r\nconst { ingredientsByTypeSelector } = ingredientsSelectors;\r\n\r\n// PROPS TYPE\r\ninterface IngredientGroupProps {\r\n  name: string;\r\n  ingredientsType: TIngredientType;\r\n  mode?: 'desktop' | 'mobile';\r\n  // A reference to the root div-element.\r\n  // It's necessary for an animation\r\n  refDiv?: React.RefObject<HTMLDivElement>;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const IngredientGroup = memo((props: IngredientGroupProps) => {\r\n  const {\r\n    name,\r\n    ingredientsType,\r\n    mode = 'desktop',\r\n    refDiv,\r\n    className\r\n  } = props;\r\n\r\n  // Get ingredients by the type from the store\r\n  const { ingredients } = useAppSelector(ingredientsByTypeSelector(ingredientsType));\r\n\r\n  // If there are no ingredients,\r\n  // return null\r\n  if (ingredients.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['ingredient-group'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      className={classes}\r\n      ref={refDiv}\r\n    >\r\n\r\n      {/* HEADER */}\r\n      <Paragraph\r\n        size=\"medium\"\r\n        text={name}\r\n      />\r\n\r\n      {/* CONTENT */}\r\n      <div className={styles['ingredient-group__content']}>\r\n        {/* -> MOBILE */}\r\n        {\r\n          mode === 'mobile' && ingredients.map((item) => (\r\n            <IngredientMobile\r\n              key={item.id}\r\n              id={item.id}\r\n            />\r\n          ))\r\n        }\r\n        {/* -> DESKTOP */}\r\n        {\r\n          mode === 'desktop' && ingredients.map((item) => (\r\n            <Ingredient\r\n              key={item.id}\r\n              id={item.id}\r\n            />\r\n          ))\r\n        }\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n});\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Tab } from 'components/base';\r\n// types\r\nimport { TIngredientType } from 'models';\r\n// css\r\nimport styles from './ingredients-menu.module.css';\r\n\r\n// PROPS\r\ninterface IngredientsMenuProps {\r\n  activeTab: TIngredientType;\r\n  onClick: (data: TIngredientType) => void;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const IngredientsMenu = (props: IngredientsMenuProps) => {\r\n  const { activeTab, onClick, className } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['ingredients-menu'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n\r\n      <Tab<TIngredientType>\r\n        text=\"Булки\"\r\n        value=\"bun\"\r\n        active={activeTab === 'bun'}\r\n        onClick={onClick}\r\n      />\r\n\r\n      <Tab<TIngredientType>\r\n        text=\"Соусы\"\r\n        value=\"sauce\"\r\n        active={activeTab === 'sauce'}\r\n        onClick={onClick}\r\n      />\r\n\r\n      <Tab<TIngredientType>\r\n        text=\"Начинки\"\r\n        value=\"main\"\r\n        active={activeTab === 'main'}\r\n        onClick={onClick}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n// third-party libraries\r\nimport { useDrop } from 'react-dnd';\r\n// types\r\nimport { IngredientModel, TIngredientType } from 'models';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\n\r\n// get required selectors\r\nconst { ingredientByIdSelector } = ingredientsSelectors;\r\n\r\n// HOOK\r\nexport const useDropIngredientToConstructor = (\r\n  accepts: TIngredientType[],\r\n  dropHandler: (ingredient: IngredientModel) => void\r\n) => {\r\n  // State to store the id of the added ingredient\r\n  const [ingredientId, setIngredientId] = useState('');\r\n  // Get the ingredient by id\r\n  const { ingredient } = useAppSelector(ingredientByIdSelector(ingredientId));\r\n\r\n  // When the ingredient changed,\r\n  // add it to the constructor\r\n  useEffect(() => {\r\n    if (!ingredient) {\r\n      return;\r\n    }\r\n    dropHandler(ingredient);\r\n    // Zero the ingreident id\r\n    setIngredientId('');\r\n  }, [ingredient, dropHandler]);\r\n\r\n  // Define data for a drag-and-drop operation\r\n  const [{ isOver, canDrop }, connectRef] = useDrop(() => ({\r\n    accept: accepts,\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop()\r\n    }),\r\n    drop: (\r\n      item: { id: string }\r\n    ) => setIngredientId(item.id)\r\n  }));\r\n\r\n  // RETURN\r\n  return {\r\n    isOver,\r\n    canDrop,\r\n    connectRef\r\n  };\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Icon, IconNameType, IconTypeType } from 'components/icons';\r\nimport {\r\n  Paragraph,\r\n  Price\r\n} from 'components/base';\r\n// types\r\nimport {\r\n  IngredientModel,\r\n  IngredientWithPositionModel\r\n} from 'models';\r\n// css\r\nimport styles from './constructor-component.module.css';\r\n\r\n// PROPS\r\ninterface ConstructorComponentProps {\r\n  ingredient?: IngredientModel | IngredientWithPositionModel;\r\n  iconName?: IconNameType;\r\n  iconType?: IconTypeType;\r\n  defaultText?: string;\r\n  shadowCanDrop?: boolean;\r\n  shadowOver?: boolean;\r\n  position?: 'top' | 'bottom' | 'middle';\r\n  renderKey?: boolean;\r\n  onClickAction?: () => void;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const ConstructorComponent = (props: ConstructorComponentProps) => {\r\n  const {\r\n    ingredient,\r\n    iconName = 'DeleteIcon',\r\n    iconType = 'primary',\r\n    defaultText = 'Перенесите сюда начинку...',\r\n    shadowCanDrop = false,\r\n    shadowOver = false,\r\n    position = 'middle',\r\n    renderKey = false,\r\n    onClickAction,\r\n    className = ''\r\n  } = props;\r\n\r\n  // Get required data from the ingredient\r\n  const price = ingredient?.price || 0;\r\n  const image = ingredient?.imageMobile || '';\r\n\r\n  // Form the item description\r\n  let description = ingredient?.name || '';\r\n  if (position === 'top') {\r\n    description = `${description} (верх)`;\r\n  } else if (position === 'bottom') {\r\n    description = `${description} (низ)`;\r\n  }\r\n\r\n  // css\r\n  const classesIngredient = classNames(\r\n    styles['constructor__ingredient'],\r\n    {\r\n      [styles['constructor__ingredient--empty']]: !ingredient,\r\n      [styles['constructor--border']]: position === 'middle',\r\n      [styles['constructor--border_top']]: position === 'top',\r\n      [styles['constructor--border_bottom']]: position === 'bottom',\r\n      'shadow--can-drop': shadowCanDrop,\r\n      'shadow--over': shadowOver\r\n    },\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['constructor__component']}>\r\n\r\n      {/* DRAG ICON */}\r\n      {\r\n        renderKey && (\r\n          <Icon\r\n            className={styles['constructor__component-key']}\r\n            name=\"DragIcon\"\r\n            type=\"primary\"\r\n          />\r\n        )\r\n      }\r\n\r\n      {/* INGREDIENT */}\r\n      {\r\n        ingredient && (\r\n          <div className={classesIngredient}>\r\n            <div className={styles['constructor__ingredient-inner']}>\r\n\r\n              {/* Image */}\r\n              <img\r\n                className={styles['constructor__ingredient-image']}\r\n                alt=\"logo\"\r\n                src={image}\r\n              />\r\n\r\n              {/* Description */}\r\n              <Paragraph\r\n                className={styles['constructor__ingredient-description']}\r\n                text={description}\r\n              />\r\n\r\n              {/* Price */}\r\n              <Price\r\n                className={styles['constructor__ingredient-price']}\r\n                price={price}\r\n              />\r\n\r\n              {/* Action Icon */}\r\n              <Icon\r\n                className={styles['constructor__ingredient-action']}\r\n                name={iconName}\r\n                type={iconType}\r\n                onClick={onClickAction}\r\n              />\r\n\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n\r\n      {/* NO INGREDIENT */}\r\n      {\r\n        !ingredient && (\r\n          <div className={classesIngredient}>\r\n            <Paragraph\r\n              text={defaultText}\r\n            />\r\n          </div>\r\n        )\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n","import { useRef, memo } from 'react';\r\n// hooks\r\nimport { useConstructorActions } from 'hooks/constructor';\r\nimport { useDropIngredientToConstructor } from 'hooks/drag-drop';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { burgerConstructorSelectors } from 'store/burger-constructor';\r\n// aux.\r\nimport { ConstructorComponent } from '../constructor-component';\r\n// css\r\nimport styles from './constructor-top.module.css';\r\n\r\n// COMPONENT\r\nexport const ConstructorTop = memo(() => {\r\n  // Ref to the root element\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  // Get the bun from the burger constructor\r\n  const { bun } = useAppSelector(burgerConstructorSelectors.bunSelector);\r\n\r\n  // Get function to add a bun to the constructor\r\n  const { addBun } = useConstructorActions();\r\n\r\n  // Get data for drop operation\r\n  const {\r\n    isOver,\r\n    canDrop,\r\n    connectRef\r\n  } = useDropIngredientToConstructor(['bun'], addBun);\r\n\r\n  // Connect dnd to the root element\r\n  connectRef(ref);\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      key=\"top-wrapper\"\r\n      className={styles['constructor__top']}\r\n      ref={ref}\r\n    >\r\n\r\n      {/* Empty item */}\r\n      {\r\n        !bun && (\r\n          <ConstructorComponent\r\n            key=\"top\"\r\n            defaultText=\"Перенесите сюда булочку...\"\r\n            position=\"top\"\r\n            shadowCanDrop={canDrop}\r\n            shadowOver={isOver}\r\n          />\r\n        )\r\n      }\r\n\r\n      {/* Non-empty item */}\r\n      {\r\n        bun && (\r\n          <ConstructorComponent\r\n            key=\"top\"\r\n            ingredient={bun}\r\n            iconName=\"LockIcon\"\r\n            iconType=\"secondary\"\r\n            position=\"top\"\r\n            shadowCanDrop={canDrop}\r\n            shadowOver={isOver}\r\n          />\r\n        )\r\n      }\r\n\r\n    </div>\r\n  );\r\n});\r\n","import { useRef, ReactNode } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// hooks\r\nimport { useSorting } from 'hooks/drag-drop';\r\n// types\r\nimport { IngredientWithPositionModel } from 'models';\r\n// css\r\n// import styles from '../constructor.module.css';\r\n\r\n// PROPS\r\ninterface ConstructorSwapperProps {\r\n  children: ReactNode;\r\n  ingredient: IngredientWithPositionModel;\r\n  swapHandler: (id1: string, id2: string) => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const ConstructorSwapper = (props: ConstructorSwapperProps) => {\r\n  const {\r\n    children,\r\n    ingredient,\r\n    swapHandler\r\n  } = props;\r\n\r\n  // The ref to the root element\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  // Connect drag-drop sorting\r\n  const { isDragging } = useSorting(ref, ingredient, swapHandler);\r\n\r\n  // css-classes for the root element\r\n  const classes = classNames({ invisible: isDragging });\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      className={classes}\r\n      ref={ref}\r\n    >\r\n      { children }\r\n    </div>\r\n  );\r\n};\r\n","import { RefObject, useEffect } from 'react';\r\n// Third-party libraries\r\nimport { useDrag, useDrop } from 'react-dnd';\r\n// Custom models\r\nimport { IngredientWithPositionModel } from 'models';\r\n\r\n// HOOK\r\nexport const useSorting = (\r\n  ref: RefObject<HTMLDivElement>,\r\n  ingredient: IngredientWithPositionModel,\r\n  swapHandler: (id1: string, id2: string) => void\r\n) => {\r\n  // Define the drag operation,\r\n  // when an ingredient is being sorted\r\n  // inside the container.\r\n  const [{ isDragging }, connectRefDrag] = useDrag({\r\n    type: 'inner',\r\n    item: { positionId: ingredient.positionId },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  // Define the drop operation,\r\n  // when an ingredient is being sorted\r\n  // inside the container.\r\n  const [, connectRefDrop] = useDrop(() => ({\r\n    accept: 'inner',\r\n    hover: (\r\n      item: { positionId: string }\r\n    ) => swapHandler(ingredient.positionId, item.positionId),\r\n  }), [swapHandler]);\r\n\r\n  // Connect ref to an element\r\n  useEffect(() => {\r\n    if (!ingredient || !ref.current) {\r\n      return;\r\n    }\r\n    connectRefDrag(ref);\r\n    connectRefDrop(ref);\r\n  }, [ingredient, ref, connectRefDrag, connectRefDrop]);\r\n\r\n  return {\r\n    isDragging\r\n  };\r\n};\r\n","import {\r\n  useEffect,\r\n  useMemo,\r\n  useState,\r\n  memo,\r\n  useRef\r\n} from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// hooks\r\nimport { useConstructorActions } from 'hooks/constructor';\r\nimport { useSwapItemsInCollection } from 'hooks/common';\r\nimport {\r\n  useDropIngredientToConstructor,\r\n  useDropIngredientSorting\r\n} from 'hooks/drag-drop';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { burgerConstructorSelectors } from 'store/burger-constructor';\r\n// types\r\nimport { IngredientWithPositionModel } from 'models';\r\n// aux.\r\nimport { ConstructorComponent } from '../constructor-component';\r\nimport { ConstructorSwapper } from '../constructor-swapper';\r\n// css\r\nimport styles from './constructor-middle.module.css';\r\n\r\n// PROPS\r\ninterface ConstructorMiddleProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const ConstructorMiddle = memo((props: ConstructorMiddleProps) => {\r\n  const { className = '' } = props;\r\n\r\n  // The ref to the root element\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  // Save data about the middle of the burger constructor\r\n  // in the local state.\r\n  // To avoid updating the store on every swapping of items\r\n  const [middleIngredients, setMiddleIngredients] = useState<IngredientWithPositionModel[]>([]);\r\n\r\n  // Get the middle of the burger constructor\r\n  // from the store\r\n  const { middle } = useAppSelector(burgerConstructorSelectors.middleSelector);\r\n\r\n  // Handles changes to burgerConstructor.middle\r\n  useEffect(() => {\r\n    setMiddleIngredients(middle);\r\n  }, [middle]);\r\n\r\n  // Get functions to manipulate with the constructor\r\n  const { addIngredient, deleteIngredient, updateBurger } = useConstructorActions();\r\n\r\n  // Get data for drop operation.\r\n  // When an ingredient is being dragged\r\n  // from the \"Ingredients\" section\r\n  const {\r\n    isOver,\r\n    canDrop,\r\n    connectRef\r\n  } = useDropIngredientToConstructor(['main', 'sauce'], addIngredient);\r\n\r\n  // Define the drop operation,\r\n  // when an ingredient is being sorted\r\n  // inside the \"BurgerConstructor\" container.\r\n  useDropIngredientSorting(\r\n    ref,\r\n    middleIngredients,\r\n    updateBurger\r\n  );\r\n\r\n  // Get function to swap items in a collection\r\n  const { swap } = useSwapItemsInCollection(middleIngredients, setMiddleIngredients);\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['constructor__middle'],\r\n    {\r\n      'shadow--can-drop': (canDrop && !isOver),\r\n      'shadow--over': isOver\r\n    },\r\n    className\r\n  );\r\n\r\n  // Content to render\r\n  const content = useMemo(() => {\r\n    // If no ingredients in the middle,\r\n    // return the empty element\r\n    if (middleIngredients.length === 0) {\r\n      return (\r\n        <ConstructorComponent\r\n          key=\"middle\"\r\n          renderKey\r\n          defaultText=\"Перенесите сюда начинку...\"\r\n        />\r\n      );\r\n    }\r\n    // There are ingredients in the middle\r\n    return (\r\n      middleIngredients.map((ingredient) => (\r\n        <ConstructorSwapper\r\n          key={ingredient.positionId}\r\n          ingredient={ingredient}\r\n          swapHandler={swap}\r\n        >\r\n          <ConstructorComponent\r\n            ingredient={ingredient}\r\n            iconName=\"DeleteIcon\"\r\n            iconType=\"primary\"\r\n            renderKey\r\n            onClickAction={() => deleteIngredient(ingredient.positionId)}\r\n          />\r\n        </ConstructorSwapper>\r\n      ))\r\n    );\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [middleIngredients, swap]);\r\n\r\n  // Connect dnd to the root element\r\n  connectRef(ref);\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      key=\"middle-wrapper\"\r\n      className={classes}\r\n      ref={ref}\r\n    >\r\n      { content }\r\n    </div>\r\n  );\r\n});\r\n","import { useEffect, RefObject } from 'react';\r\n// Third-party libraries\r\nimport { useDrop } from 'react-dnd';\r\nimport { IngredientWithPositionModel } from 'models';\r\n\r\nexport const useDropIngredientSorting = (\r\n  ref: RefObject<HTMLDivElement>,\r\n  ingredients: IngredientWithPositionModel[],\r\n  dropHandler: (data: IngredientWithPositionModel[]) => void\r\n) => {\r\n  // Define the drop operation,\r\n  // when an ingredient is being sorted\r\n  // inside the \"BurgerConstructor\" container.\r\n  const [\r\n    { isOver, canDrop },\r\n    connectRef\r\n  ] = useDrop({\r\n    accept: 'inner',\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop()\r\n    }),\r\n    drop: () => dropHandler(ingredients)\r\n  });\r\n\r\n  // Connect ref to an element\r\n  useEffect(() => {\r\n    if (!ref.current) {\r\n      return;\r\n    }\r\n    connectRef(ref);\r\n  }, [ref, connectRef]);\r\n\r\n  // RETURN\r\n  return {\r\n    isOver,\r\n    canDrop\r\n  };\r\n};\r\n","import { useCallback } from 'react';\r\n// types\r\nimport { IngredientWithPositionModel } from 'models';\r\n\r\n// HOOK\r\nexport const useSwapItemsInCollection = (\r\n  collection: IngredientWithPositionModel[],\r\n  setCollection: (data: IngredientWithPositionModel[]) => void\r\n) => {\r\n  const swap = useCallback((id1: string, id2: string) => {\r\n    if (!id1 || !id2) {\r\n      return;\r\n    }\r\n    if (id1 === id2) {\r\n      return;\r\n    }\r\n\r\n    const copy = [...collection];\r\n\r\n    const index1 = copy.findIndex((item) => item.positionId === id1);\r\n    const index2 = copy.findIndex((item) => item.positionId === id2);\r\n\r\n    if (index1 !== -1 && index2 !== -1) {\r\n      const ingredient = { ...copy[index1] };\r\n\r\n      copy.splice(index1, 1);\r\n      copy.splice(index2, 0, ingredient);\r\n\r\n      setCollection(copy);\r\n    }\r\n  }, [collection, setCollection]);\r\n\r\n  return {\r\n    swap\r\n  };\r\n};\r\n","import { useRef, memo } from 'react';\r\n// hooks\r\nimport { useConstructorActions } from 'hooks/constructor';\r\nimport { useDropIngredientToConstructor } from 'hooks/drag-drop';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { burgerConstructorSelectors } from 'store/burger-constructor';\r\n// aux.\r\nimport { ConstructorComponent } from '../constructor-component';\r\n// css\r\nimport styles from './constructor-bottom.module.css';\r\n\r\n// COMPONENT\r\nexport const ConstructorBottom = memo(() => {\r\n  // Ref to the root element\r\n  const ref = useRef<HTMLDivElement>(null);\r\n\r\n  // Get the bun from the burger constructor\r\n  const { bun } = useAppSelector(burgerConstructorSelectors.bunSelector);\r\n\r\n  // Get function to add a bun to the constructor\r\n  const { addBun } = useConstructorActions();\r\n\r\n  // Get data for drop operation\r\n  const {\r\n    isOver,\r\n    canDrop,\r\n    connectRef\r\n  } = useDropIngredientToConstructor(['bun'], addBun);\r\n\r\n  // Connect dnd to the root element\r\n  connectRef(ref);\r\n\r\n  // RENDER\r\n  return (\r\n    <div\r\n      key=\"bottom-wrapper\"\r\n      className={styles['constructor__bottom']}\r\n      ref={ref}\r\n    >\r\n\r\n      {/* Empty item */}\r\n      {\r\n        !bun && (\r\n          <ConstructorComponent\r\n            key=\"bottom\"\r\n            defaultText=\"Перенесите сюда булочку...\"\r\n            position=\"bottom\"\r\n            shadowCanDrop={canDrop}\r\n            shadowOver={isOver}\r\n          />\r\n        )\r\n      }\r\n\r\n      {/* Non-empty item */}\r\n      {\r\n        bun && (\r\n          <ConstructorComponent\r\n            key=\"bottom\"\r\n            ingredient={bun}\r\n            iconName=\"LockIcon\"\r\n            iconType=\"secondary\"\r\n            position=\"bottom\"\r\n            shadowCanDrop={canDrop}\r\n            shadowOver={isOver}\r\n          />\r\n        )\r\n      }\r\n\r\n    </div>\r\n  );\r\n});\r\n","// components\r\nimport { Paragraph, ParagraphDigits } from 'components/base';\r\nimport { Icon } from 'components/icons';\r\n// css\r\nimport styles from './modal-header.module.css';\r\n\r\n// PROPS\r\ninterface ModalHeaderProps {\r\n  header?: string;\r\n  headerMode?: 'text' | 'digits';\r\n  onClick?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const ModalHeader = (props: ModalHeaderProps) => {\r\n  const {\r\n    header,\r\n    headerMode = 'text',\r\n    onClick\r\n  } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['modal__header']}>\r\n\r\n      {/* HEADER - TEXT */}\r\n      {\r\n        headerMode === 'text' && (\r\n          <Paragraph\r\n            size=\"large\"\r\n            text={header}\r\n          />\r\n        )\r\n      }\r\n\r\n      {/* HEADER - DIGITS */}\r\n      {\r\n        headerMode === 'digits' && (\r\n          <ParagraphDigits\r\n            size=\"medium\"\r\n            text={header}\r\n          />\r\n        )\r\n      }\r\n\r\n      {/* ICON - CLOSE BUTTON */}\r\n      <Icon\r\n        className={styles['modal__header-close']}\r\n        name=\"CloseIcon\"\r\n        type=\"primary\"\r\n        onClick={onClick}\r\n      />\r\n\r\n    </div>\r\n  );\r\n};\r\n","import ReactDOM from 'react-dom';\r\n// router\r\nimport { useHistory } from 'react-router-dom';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Overlay } from 'components/base';\r\n// aux.\r\nimport { ModalHeader } from './modal-header';\r\n// css\r\nimport styles from './modal.module.css';\r\n\r\n// Get the element where modal windows will be rendered\r\nconst divReactModals = document.getElementById('react-modals');\r\n\r\n// PROPS\r\ninterface ModalProps {\r\n  // showCloseButton?: boolean,\r\n  header?: string;\r\n  headerMode?: 'text' | 'digits';\r\n  hasOwnRoute?: boolean;\r\n  children?: React.ReactNode;\r\n  position?: 'center';\r\n  className?: string;\r\n  onClose?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const Modal = (props: ModalProps) => {\r\n  const {\r\n    className = '',\r\n    // showCloseButton = true,\r\n    header,\r\n    headerMode = 'text',\r\n    position = 'center',\r\n    hasOwnRoute = false,\r\n    children,\r\n    onClose\r\n  } = props;\r\n\r\n  const { goBack } = useHistory();\r\n\r\n  // If there is no the required \"div\",\r\n  // return nothing\r\n  if (!divReactModals) {\r\n    return null;\r\n  }\r\n\r\n  // EVENT HANDLERS\r\n  const onClickModalHandler = (e: React.MouseEvent<HTMLDivElement>): void => {\r\n    // stop bubbling the event,\r\n    // because we don't want to run the overlay's handler\r\n    e.stopPropagation();\r\n  };\r\n  // CLOSE -> Click\r\n  const onCloseHandler = () => {\r\n    onClose && onClose();\r\n    // Go to the previous page\r\n    if (hasOwnRoute) {\r\n      goBack();\r\n    }\r\n  };\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['modal'],\r\n    className\r\n  );\r\n  const classesOverlay = classNames(\r\n    {\r\n      [styles['modal--position_center']]: position === 'center'\r\n    }\r\n  );\r\n\r\n  // RENDER\r\n  return ReactDOM.createPortal(\r\n    (\r\n      <Overlay\r\n        className={classesOverlay}\r\n        onClick={onCloseHandler}\r\n      >\r\n\r\n        <div\r\n          className={classes}\r\n          onClick={onClickModalHandler}\r\n          role=\"presentation\"\r\n        >\r\n\r\n          {/* HEADER */}\r\n          <ModalHeader\r\n            header={header}\r\n            headerMode={headerMode}\r\n            onClick={onCloseHandler}\r\n          />\r\n\r\n          {/* CONTENT */}\r\n          { children }\r\n\r\n        </div>\r\n\r\n      </Overlay>\r\n    ),\r\n    divReactModals\r\n  );\r\n};\r\n","import { ReactNode } from 'react';\r\n// components\r\nimport { Container } from 'components/base';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { commonSelectors } from 'store/common';\r\n// css\r\nimport styles from './modal-content.module.css';\r\n\r\n// Get selectors\r\nconst { modeSelector } = commonSelectors;\r\n\r\n// PROPS\r\ninterface ModalContentProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// COMPONENT\r\nexport const ModalContent = (props: ModalContentProps) => {\r\n  const { children } = props;\r\n\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n\r\n      {/* MOBILE */}\r\n      { mode === 'mobile' && (\r\n        <div className={styles['modal__content']}>\r\n          <Container className={styles['modal__container']}>\r\n            { children }\r\n          </Container>\r\n        </div>\r\n      ) }\r\n\r\n      {/* DESKTOP */}\r\n      { mode === 'desktop' && (\r\n        <div className={styles['modal__content']}>\r\n          { children }\r\n        </div>\r\n      ) }\r\n\r\n    </>\r\n  );\r\n};\r\n","import { ReactNode } from 'react';\r\n// components\r\nimport { Container } from 'components/base';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { commonSelectors } from 'store/common';\r\n// css\r\nimport styles from './modal-content1.module.css';\r\n\r\n// Get selectors\r\nconst { modeSelector } = commonSelectors;\r\n\r\n// PROPS\r\ninterface ModalContent1Props {\r\n  children: ReactNode;\r\n}\r\n\r\n// COMPONENT\r\nexport const ModalContent1 = (props: ModalContent1Props) => {\r\n  const { children } = props;\r\n\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n\r\n      {/* MOBILE */}\r\n      { mode === 'mobile' && (\r\n        <div className={styles['modal__content1']}>\r\n          <Container className={styles['modal__container']}>\r\n            { children }\r\n          </Container>\r\n        </div>\r\n      ) }\r\n\r\n      {/* DESKTOP */}\r\n      { mode === 'desktop' && (\r\n        <div className={styles['modal__content1']}>\r\n          { children }\r\n        </div>\r\n      ) }\r\n\r\n    </>\r\n  );\r\n};\r\n","import { ReactNode } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// css\r\nimport styles from './modal-footer.module.css';\r\n\r\n// PROPS\r\ninterface ModalFooterProps {\r\n  children: ReactNode;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const ModalFooter = (props: ModalFooterProps) => {\r\n  const { children, className } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['modal__footer'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <footer className={classes}>\r\n      {children}\r\n    </footer>\r\n  );\r\n};\r\n","// components\r\nimport { Modal, ModalContent } from 'components/modals';\r\nimport { IngredientDetails } from 'components/common';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\n// hooks\r\nimport { useIngredientsActions } from 'hooks/ingredients';\r\n\r\n// Get required selectors\r\nconst { currentIngredientSelector } = ingredientsSelectors;\r\n\r\n// COMPONENT\r\nexport const IngredientDetailsModal = () => {\r\n  // Get current ingredient from the store\r\n  const { currentIngredient } = useAppSelector(currentIngredientSelector);\r\n\r\n  // Function to clear current ingredient in the store\r\n  const { clearCurrentIngredient } = useIngredientsActions();\r\n\r\n  if (!currentIngredient) {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <Modal\r\n      header=\"Детали ингредиента\"\r\n      position=\"center\"\r\n      hasOwnRoute\r\n      onClose={clearCurrentIngredient}\r\n    >\r\n\r\n      {/* CONTENT */}\r\n      <ModalContent>\r\n        <IngredientDetails ingredient={currentIngredient} />\r\n      </ModalContent>\r\n\r\n    </Modal>\r\n  );\r\n};\r\n","// components\r\nimport { OrderInfo, OrderInfoTotal } from 'components/common';\r\nimport { ModalContent, ModalFooter } from 'components/modals/modal';\r\n// types\r\nimport { OrderModel } from 'models';\r\n// css\r\nimport styles from './order-modal-mobile.module.css';\r\n\r\n// PROPS\r\ninterface OrderModalMobileProps {\r\n  order: OrderModel;\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderModalMobile = (props: OrderModalMobileProps) => {\r\n  const { order } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      <ModalContent>\r\n        <OrderInfo order={order} />\r\n      </ModalContent>\r\n\r\n      <ModalFooter className={styles['modal__order-total']}>\r\n        <OrderInfoTotal\r\n          date={order.creationDate}\r\n          price={order.price}\r\n        />\r\n      </ModalFooter>\r\n    </>\r\n  );\r\n};\r\n","// components\r\nimport { OrderInfo } from 'components/common';\r\nimport { ModalContent } from 'components/modals/modal';\r\n// types\r\nimport { OrderModel } from 'models';\r\n\r\n// PROPS\r\ninterface OrderModalDesktopProps {\r\n  order: OrderModel;\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderModalDesktop = (props: OrderModalDesktopProps) => {\r\n  const { order } = props;\r\n\r\n  // No current order\r\n  if (!order) {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      <ModalContent>\r\n        <OrderInfo\r\n          order={order}\r\n        />\r\n      </ModalContent>\r\n    </>\r\n  );\r\n};\r\n","// store\r\nimport { useAppSelector } from 'store';\r\nimport { feedSelectors } from 'store/feed';\r\nimport { ordersSelectors } from 'store/orders';\r\nimport { commonSelectors } from 'store/common';\r\n// hooks\r\nimport { useFeedActions } from 'hooks/feed';\r\nimport { useProfileActions } from 'hooks/profile';\r\n// aux.\r\nimport { OrderModalMobile } from './order-modal-mobile';\r\nimport { OrderModalDesktop } from './order-modal-desktop';\r\nimport { Modal } from '../modal';\r\n\r\n// Get selectors\r\nconst { currentOrderSelector: currentFeedSelector } = feedSelectors;\r\nconst { currentOrderSelector: currentProfileSelector } = ordersSelectors;\r\nconst { modeSelector } = commonSelectors;\r\n\r\n// PROPS\r\ninterface OrderModalProps {\r\n  mode: 'feed' | 'profile';\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderModal = (props: OrderModalProps) => {\r\n  const { mode } = props;\r\n\r\n  // Get current order in feed and profile states\r\n  const { currentOrder: currentFeed } = useAppSelector(currentFeedSelector);\r\n  const { order: currentProfile } = useAppSelector(currentProfileSelector);\r\n\r\n  // Get functions to clear order in fedd and profile states\r\n  const { clearCurrentOrder: clearFeed } = useFeedActions();\r\n  const { clearCurrentOrder: clearProfile } = useProfileActions();\r\n\r\n  const { mode: appMode } = useAppSelector(modeSelector);\r\n\r\n  // Select the current order depending on mode\r\n  const currentOrder = mode === 'profile'\r\n    ? currentProfile\r\n    : currentFeed;\r\n\r\n  // Select action depending on mode\r\n  const clearCurrentOrder = mode === 'profile'\r\n    ? clearProfile\r\n    : clearFeed;\r\n\r\n  // No current feed-order\r\n  if (!currentOrder) {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <Modal\r\n      hasOwnRoute\r\n      header=\"Детали заказа\"\r\n      onClose={clearCurrentOrder}\r\n    >\r\n\r\n      {/* FOR MOBILE */}\r\n      { appMode === 'mobile' && <OrderModalMobile order={currentOrder} /> }\r\n\r\n      {/* FOR DESKTOP */}\r\n      { appMode === 'desktop' && <OrderModalDesktop order={currentOrder} /> }\r\n\r\n    </Modal>\r\n  );\r\n};\r\n","import { useCallback } from 'react';\r\n// hooks\r\nimport { useProfileActions } from 'hooks/profile';\r\n// hoc-s\r\nimport { withShow, WithShowProps } from 'hocs';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ordersSelectors } from 'store/orders';\r\nimport { commonSelectors } from 'store/common';\r\n// components\r\nimport { OrderDetails } from 'components/common';\r\nimport { Modal, ModalContent } from 'components/modals';\r\n// css\r\nimport styles from './order-details-modal.module.css';\r\n\r\n// Get selectors\r\nconst { currentOrderSelector } = ordersSelectors;\r\nconst { modeSelector } = commonSelectors;\r\n\r\n// PROPS\r\ninterface OrderDetailsModalProps extends WithShowProps {\r\n  onClose?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const OrderDetailsModal = withShow((props: OrderDetailsModalProps) => {\r\n  const { onClose } = props;\r\n\r\n  const { order: currentOrder } = useAppSelector(currentOrderSelector);\r\n\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  // Get the current order in the store\r\n  const { clearCurrentOrder } = useProfileActions();\r\n\r\n  // Handler to close the modal window\r\n  const handleClose = useCallback(() => {\r\n    clearCurrentOrder();\r\n    onClose && onClose();\r\n  }, [clearCurrentOrder, onClose]);\r\n\r\n  // NO ORDER\r\n  if (!currentOrder) {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <Modal\r\n      onClose={handleClose}\r\n      header={mode === 'mobile' ? 'Заказ оформлен' : ''}\r\n    >\r\n      <ModalContent>\r\n        <OrderDetails\r\n          className={styles['modal__order-details']}\r\n          order={currentOrder}\r\n        />\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n});\r\n","// components\r\nimport { ConstructorMobile, ConstructorFooterMobile } from 'components/home';\r\nimport { Modal, ModalContent1, ModalFooter } from 'components/modals';\r\n// css\r\nimport styles from './constructor-modal.module.css';\r\n\r\n// PROPS\r\ninterface ConstructorModalProps {\r\n  onClose?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const ConstructorModal = (props: ConstructorModalProps) => {\r\n  const { onClose } = props;\r\n\r\n  // RENDER\r\n  return (\r\n    <Modal\r\n      header=\"Заказ\"\r\n      onClose={onClose}\r\n    >\r\n\r\n      {/* CONTENT */}\r\n      <ModalContent1>\r\n        <ConstructorMobile\r\n          className={styles['modal__constructor']}\r\n        />\r\n      </ModalContent1>\r\n\r\n      {/* FOOTER */}\r\n      <ModalFooter className={styles['modal__footer']}>\r\n        <ConstructorFooterMobile onClose={onClose} />\r\n      </ModalFooter>\r\n\r\n    </Modal>\r\n  );\r\n};\r\n","import { useCallback } from 'react';\r\n// store\r\nimport { useAppDispatch, useAppSelector } from 'store';\r\nimport { createOrderAction } from 'store/orders';\r\nimport { burgerConstructorSelectors } from 'store/burger-constructor';\r\nimport { authSelectors } from 'store/auth';\r\n// hooks\r\nimport { useToasts } from 'hooks/toasts';\r\n// types\r\nimport { OrderModel } from 'models';\r\n// utils\r\nimport { isConstructorComplete } from 'utils';\r\n\r\n// Get selectors\r\nconst {\r\n  dataSelector\r\n} = burgerConstructorSelectors;\r\nconst {\r\n  userSelector\r\n} = authSelectors;\r\n\r\n// HOOK\r\nexport const useCreateOrder = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const { burgerConstructor } = useAppSelector(dataSelector);\r\n\r\n  const { user } = useAppSelector(userSelector);\r\n\r\n  const { toastError } = useToasts();\r\n\r\n  // Function to create an order\r\n  const createOrder = useCallback(async (): Promise<{ order: OrderModel } | null> => {\r\n    // Only an authorized user can create an order\r\n    if (!user) {\r\n      toastError('Пользователь не авторизован');\r\n      return null;\r\n    }\r\n\r\n    if (!isConstructorComplete(burgerConstructor)) {\r\n      toastError(`В бургере не хватает ингредиентов!\r\n        Чтобы сделать заказ, выберите булочку и нужную начинку.`);\r\n      return null;\r\n    }\r\n\r\n    const result = await dispatch(createOrderAction()).unwrap();\r\n    return result;\r\n  }, [dispatch, toastError, burgerConstructor, user]);\r\n\r\n  // RETURN\r\n  return {\r\n    createOrder\r\n  };\r\n};\r\n","// types\r\nimport { BurgerConstructorModel } from 'models';\r\n\r\n// FUNCTION\r\nexport const isConstructorComplete = (constructor: BurgerConstructorModel) => {\r\n  return constructor.bun && constructor.middle.length > 0;\r\n};\r\n","// components\r\nimport { Price, Button } from 'components/base';\r\nimport { OrderDetailsModal } from 'components/modals';\r\n// hooks\r\nimport { useToggle } from 'hooks/common';\r\nimport { useCreateOrder } from 'hooks/orders';\r\nimport { useConstructorActions } from 'hooks/constructor';\r\nimport { useToasts } from 'hooks/toasts';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { burgerConstructorSelectors } from 'store/burger-constructor';\r\nimport { ordersSelectors } from 'store/orders';\r\n// types\r\nimport { IRejectedValue } from 'store/types';\r\n// css\r\nimport styles from './constructor-footer.module.css';\r\n\r\n// get required selectors\r\nconst { totalSumSelector } = burgerConstructorSelectors;\r\nconst { loadingSelector } = ordersSelectors;\r\n\r\n// COMPONENT\r\nexport const ConstructorFooter = () => {\r\n  // Get total sum of the order\r\n  const { totalSum } = useAppSelector(totalSumSelector);\r\n\r\n  // Empty the burger constructor\r\n  const { clearBurger } = useConstructorActions();\r\n\r\n  // Get the function to create an order\r\n  const { createOrder } = useCreateOrder();\r\n\r\n  // Get the create order status\r\n  const { loading } = useAppSelector(loadingSelector);\r\n\r\n  // Get functions for notifications\r\n  const { toastError } = useToasts();\r\n\r\n  // Get the state and functions to handle with modal windows\r\n  const {\r\n    state: isModalOpen,\r\n    on: showModal,\r\n    off: hideModal\r\n  } = useToggle(false);\r\n\r\n  const createOrderExt = async () => {\r\n    try {\r\n      // create order\r\n      const result = await createOrder();\r\n      if (!result) {\r\n        return;\r\n      }\r\n\r\n      // remove all ingredients from the constructor\r\n      clearBurger();\r\n      // show modal window \"OrderDetails\"\r\n      showModal();\r\n    } catch (err: unknown) {\r\n      const message = (err as IRejectedValue).error;\r\n      toastError(message);\r\n    }\r\n  };\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      <div className={styles['constructor__footer']}>\r\n\r\n        {/* Price */}\r\n        <Price\r\n          className={styles['constructor__footer-price']}\r\n          size=\"medium\"\r\n          price={totalSum}\r\n        />\r\n\r\n        {/* Create Order */}\r\n        <Button\r\n          className={styles['constructor__footer-action']}\r\n          text=\"Оформить заказ\"\r\n          size=\"large\"\r\n          loading={loading}\r\n          onClick={createOrderExt}\r\n        />\r\n\r\n      </div>\r\n\r\n      {/* Modal window \"OrderDetailsModal\" */}\r\n      <OrderDetailsModal\r\n        show={isModalOpen}\r\n        onClose={hideModal}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { memo } from 'react';\n// aux.\nimport { ConstructorTop } from './constructor-top';\nimport { ConstructorMiddle } from './constructor-middle';\nimport { ConstructorBottom } from './constructor-bottom';\nimport { ConstructorFooter } from './constructor-footer';\n// css\nimport styles from './constructor.module.css';\n\n// COMPONENT\nexport const Constructor = memo(() => {\n  // RENDER\n  return (\n    <div className={styles['constructor']}>\n\n      {/* CONTENT */}\n      <div className={styles['constructor__content']}>\n\n        {/* -> TOP */}\n        <ConstructorTop />\n        {/* -> MIDDLE */}\n        <ConstructorMiddle />\n        {/* -> BOTTOM */}\n        <ConstructorBottom />\n\n      </div>\n\n      {/* FOOTER */}\n      <ConstructorFooter />\n\n    </div>\n  );\n});\n","import { useRef } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph, Price } from 'components/base';\r\nimport { Icon } from 'components/icons';\r\nimport { Swiper } from 'components/common';\r\n// hooks\r\nimport { useConstructorActions } from 'hooks/constructor';\r\n// types\r\nimport { IngredientModel, IngredientWithPositionModel } from 'models';\r\n// css\r\nimport styles from './constructor-component-mobile.module.css';\r\n\r\n// PROPS\r\ninterface ConstructorComponentMobileProps {\r\n  ingredient: IngredientModel | IngredientWithPositionModel;\r\n  position?: 'top' | 'bottom' | 'default';\r\n}\r\n\r\nconst isIngredientWithPositionModel = (\r\n  ingredient: IngredientModel | IngredientWithPositionModel\r\n): ingredient is IngredientWithPositionModel => {\r\n  return (ingredient as IngredientWithPositionModel).positionId !== undefined;\r\n};\r\n\r\n// COMPONENT\r\nexport const ConstructorComponentMobile = (props: ConstructorComponentMobileProps) => {\r\n  const {\r\n    ingredient,\r\n    position = 'default'\r\n  } = props;\r\n\r\n  const {\r\n    imageMobile,\r\n    name,\r\n    price\r\n  } = ingredient;\r\n\r\n  const positionId = isIngredientWithPositionModel(ingredient)\r\n    ? ingredient.positionId\r\n    : '';\r\n\r\n  // ref to the element\r\n  const componentRef = useRef<HTMLDivElement>(null);\r\n\r\n  // hooks for store\r\n  const { deleteIngredient } = useConstructorActions();\r\n\r\n  // construct the name\r\n  let displayName = name;\r\n  if (position === 'top') {\r\n    displayName = `${displayName} (верх)`;\r\n  } else if (position === 'bottom') {\r\n    displayName = `${displayName} (низ)`;\r\n  }\r\n\r\n  // css\r\n  const classesIngredient = classNames(\r\n    styles['constructor__ingredient'],\r\n    {\r\n      [styles['constructor__ingredient--border_top']]: position === 'top' || position === 'default',\r\n      [styles['constructor__ingredient--border_bottom']]: position === 'bottom' || position === 'default'\r\n    }\r\n  );\r\n\r\n  // SWIPER -> ON DELETE\r\n  const handleSwiperOnDelete = () => {\r\n    deleteIngredient(positionId);\r\n  };\r\n\r\n  // RENDER\r\n  return (\r\n    <Swiper\r\n      elementRef={componentRef}\r\n      onDelete={handleSwiperOnDelete}\r\n      active={position === 'default'}\r\n    >\r\n\r\n      {/* COMPONENT */}\r\n      <div\r\n        className={styles['constructor__component']}\r\n        ref={componentRef}\r\n      >\r\n\r\n        {/* DRAG ICON */}\r\n        <Icon\r\n          className={styles['constructor__component-drag']}\r\n          name=\"DragIcon\"\r\n          type=\"primary\"\r\n        />\r\n\r\n        <div className={classesIngredient}>\r\n\r\n          {/* LOGO */}\r\n          <div className={styles['constructor__ingredient-image-wrapper']}>\r\n            <img\r\n              className={styles['constructor__ingredient-image']}\r\n              src={imageMobile}\r\n              alt=\"logo\"\r\n            />\r\n          </div>\r\n\r\n          {/* NAME */}\r\n          <Paragraph\r\n            className={styles['constructor__ingredient-name']}\r\n            text={displayName}\r\n          />\r\n\r\n          {/* PRICE */}\r\n          <Price\r\n            className={styles['constructor__ingredient-price']}\r\n            price={price}\r\n          />\r\n\r\n        </div>\r\n      </div>\r\n\r\n    </Swiper>\r\n  );\r\n};\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { burgerConstructorSelectors } from 'store/burger-constructor';\r\n// aux.\r\nimport { ConstructorComponentMobile } from './constructor-component-mobile';\r\n// css\r\nimport styles from './constructor-mobile.module.css';\r\n\r\n// Get selectors\r\nconst {\r\n  bunSelector,\r\n  middleSelector\r\n} = burgerConstructorSelectors;\r\n\r\n// PROPS\r\ninterface ConstructorMobileProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const ConstructorMobile = (props: ConstructorMobileProps) => {\r\n  const { className } = props;\r\n\r\n  // Get data about burger-constructor\r\n  const { bun } = useAppSelector(bunSelector);\r\n  const { middle } = useAppSelector(middleSelector);\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['constructor'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      <div className={styles['constructor__content']}>\r\n        <div className={styles['constructor__list']}>\r\n\r\n          {/* TOP */}\r\n          {\r\n            bun && (\r\n              <ConstructorComponentMobile\r\n                key=\"top\"\r\n                ingredient={bun}\r\n                position=\"top\"\r\n              />\r\n            )\r\n          }\r\n\r\n          {/* MIDDLE */}\r\n          {\r\n            middle.map((item) => (\r\n              <ConstructorComponentMobile\r\n                key={item.positionId}\r\n                ingredient={item}\r\n              />\r\n            ))\r\n          }\r\n\r\n          {/* BOTTOM */}\r\n          {\r\n            bun && (\r\n              <ConstructorComponentMobile\r\n                key=\"bottom\"\r\n                ingredient={bun}\r\n                position=\"bottom\"\r\n              />\r\n            )\r\n          }\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// components\r\nimport { Price, Button } from 'components/base';\r\nimport { OrderDetailsModal } from 'components/modals';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { burgerConstructorSelectors } from 'store/burger-constructor';\r\nimport { ordersSelectors } from 'store/orders';\r\n// types\r\nimport { IRejectedValue } from 'store/types';\r\n// hooks\r\nimport { useToggle } from 'hooks/common';\r\nimport { useCreateOrder } from 'hooks/orders';\r\nimport { useConstructorActions } from 'hooks/constructor';\r\nimport { useToasts } from 'hooks/toasts';\r\n// css\r\nimport styles from './constructor-footer-mobile.module.css';\r\n\r\n// Get required selectors\r\nconst {\r\n  totalSumSelector\r\n} = burgerConstructorSelectors;\r\nconst { loadingSelector } = ordersSelectors;\r\n\r\ninterface ConstructorFooterMobileProps{\r\n  onClose?: () => void;\r\n}\r\n\r\n// COMPONENT\r\nexport const ConstructorFooterMobile = (props: ConstructorFooterMobileProps) => {\r\n  const { onClose } = props;\r\n\r\n  const { totalSum } = useAppSelector(totalSumSelector);\r\n\r\n  // Empty the burger constructor\r\n  const { clearBurger } = useConstructorActions();\r\n\r\n  // Get the function to create an order\r\n  const { createOrder } = useCreateOrder();\r\n\r\n  // Get the create order status\r\n  const { loading } = useAppSelector(loadingSelector);\r\n\r\n  // Get functions for notifications\r\n  const { toastError } = useToasts();\r\n\r\n  // Get the state and functions to handle with modal windows\r\n  const {\r\n    state: isModalOpen,\r\n    on: showModal,\r\n    off: hideModal\r\n  } = useToggle(false);\r\n\r\n  const createOrderExt = async () => {\r\n    try {\r\n      // create order\r\n      const result = await createOrder();\r\n      if (!result) {\r\n        return;\r\n      }\r\n\r\n      // remove all ingredients from the constructor\r\n      clearBurger();\r\n      // show modal window \"OrderDetails\"\r\n      showModal();\r\n    } catch (err: unknown) {\r\n      const message = (err as IRejectedValue).error;\r\n      toastError(message);\r\n    }\r\n  };\r\n\r\n  const closeModalExt = () => {\r\n    // hide modal \"OrderDetails\"\r\n    hideModal();\r\n    // close this window\r\n    onClose && onClose();\r\n  };\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      <div className={styles['constructor-footer']}>\r\n\r\n        {/* PRICE */}\r\n        <Price\r\n          price={totalSum}\r\n        />\r\n\r\n        {/* SHOW ORDER */}\r\n        <Button\r\n          className={styles['constructor-footer__create-order']}\r\n          text=\"Заказать\"\r\n          size=\"small\"\r\n          loading={loading}\r\n          onClick={createOrderExt}\r\n        />\r\n\r\n      </div>\r\n\r\n      {/* Modal window \"OrderDetailsModal\" */}\r\n      <OrderDetailsModal\r\n        show={isModalOpen}\r\n        onClose={closeModalExt}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import { useState, useRef, RefObject } from 'react';\r\n// types\r\nimport { TIngredientType } from 'models';\r\n\r\n// HOOK\r\nexport const useScroll = () => {\r\n  const [currentTab, setCurrentTab] = useState<TIngredientType>('bun');\r\n\r\n  // A reference to the group with \"Buns\"\r\n  const refBun = useRef<HTMLDivElement>(null);\r\n  // A reference to the group with \"Sauces\"\r\n  const refSauce = useRef<HTMLDivElement>(null);\r\n  // A reference to the group with \"Main\"\r\n  const refMain = useRef<HTMLDivElement>(null);\r\n  // A reference to the block containing all groups.\r\n  // It's necessary for an animation\r\n  const refContainer = useRef<HTMLDivElement>(null);\r\n  // Save the references to groups in the special variable\r\n  // eslint-disable-next-line no-unused-vars\r\n  const refs = useRef<{ [K in TIngredientType]: RefObject<HTMLDivElement> }>({\r\n    bun: refBun,\r\n    sauce: refSauce,\r\n    main: refMain\r\n  });\r\n\r\n  // Function to get element ref by the ingredient type\r\n  const getRefByType = (\r\n    data: TIngredientType\r\n  ): RefObject<HTMLDivElement> => refs.current[data];\r\n\r\n  // Function to scroll to the group with the required ingredient type\r\n  const scrollToGroup = (data: TIngredientType): void => {\r\n    const elementRef = getRefByType(data);\r\n    elementRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  };\r\n\r\n  // Function to get the nearest group to the container top (in fact the active group)\r\n  const getActiveGroup = (): TIngredientType => {\r\n    // The active group by default\r\n    let activeGroup: TIngredientType = 'bun';\r\n    // Get the container top\r\n    const containerTop = refContainer.current?.getBoundingClientRect().top || 0;\r\n\r\n    const data = Object.keys(refs.current)\r\n      // get the array, in which each element has an ingredient type\r\n      // and its top position\r\n      .map((key) => {\r\n        const typedKey = key as TIngredientType;\r\n        const top = refs.current[typedKey].current?.getBoundingClientRect().top || 0;\r\n\r\n        return { key: typedKey, top };\r\n      })\r\n      // sort the received elements with its top position\r\n      // starting from the last\r\n      .sort((first, second) => (second.top - first.top));\r\n\r\n    // Define the nearest group to the container top\r\n    for (let i = 0; i < data.length; i += 1) {\r\n      if ((data[i].top - 10) <= containerTop) {\r\n        activeGroup = data[i].key;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return activeGroup;\r\n  };\r\n\r\n  // Handler to \"Containers div\" scroll event\r\n  const onScrollIngredientsHandler = (): void => {\r\n    setCurrentTab(getActiveGroup());\r\n  };\r\n\r\n  // RETURN\r\n  return {\r\n    refContainer,\r\n    refBun,\r\n    refSauce,\r\n    refMain,\r\n    currentTab,\r\n    scrollToGroup,\r\n    onScrollIngredientsHandler\r\n  };\r\n};\r\n","// third-party libraries\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport {\r\n  IngredientsMenu,\r\n  IngredientGroup,\r\n  Constructor\r\n} from 'components/home';\r\n// types\r\nimport { TIngredientType } from 'models';\r\n// aux.\r\nimport { useScroll } from '../hooks';\r\n// css\r\nimport styles from './home-page-desktop.module.css';\r\n\r\n// COMPONENT\r\nexport const HomePageDesktop = () => {\r\n  const {\r\n    refContainer,\r\n    refBun,\r\n    refSauce,\r\n    refMain,\r\n    currentTab,\r\n\r\n    scrollToGroup,\r\n    onScrollIngredientsHandler\r\n  } = useScroll();\r\n\r\n  // EVENT HANDLERS\r\n  const onClickMenuItemHandler = (data: TIngredientType) => {\r\n    scrollToGroup(data);\r\n  };\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['home-page']}>\r\n\r\n      {/* HEADER */}\r\n      <div className={styles['home-page__header']}>\r\n        <Paragraph\r\n          size=\"large\"\r\n          text=\"Соберите бургер\"\r\n        />\r\n      </div>\r\n\r\n      {/* CONTENT */}\r\n      <div className={styles['home-page__content']}>\r\n\r\n        <DndProvider backend={HTML5Backend}>\r\n\r\n          {/* SECTION -> INGREDIENTS */}\r\n          <section\r\n            className={styles['home-page__section-ingredients']}\r\n          >\r\n\r\n            {/* MENU */}\r\n            <IngredientsMenu\r\n              activeTab={currentTab}\r\n              onClick={onClickMenuItemHandler}\r\n            />\r\n\r\n            {/* INGREDIENTS */}\r\n            <div\r\n              className={styles['home-page__ingredients']}\r\n              ref={refContainer}\r\n              onScroll={onScrollIngredientsHandler}\r\n            >\r\n\r\n              {/* BUNS */}\r\n              <IngredientGroup\r\n                name=\"Булочки\"\r\n                ingredientsType=\"bun\"\r\n                refDiv={refBun}\r\n              />\r\n\r\n              {/* SAUCES */}\r\n              <IngredientGroup\r\n                name=\"Соусы\"\r\n                ingredientsType=\"sauce\"\r\n                refDiv={refSauce}\r\n              />\r\n\r\n              {/* MAIN */}\r\n              <IngredientGroup\r\n                name=\"Начинки\"\r\n                ingredientsType=\"main\"\r\n                refDiv={refMain}\r\n              />\r\n\r\n            </div>\r\n\r\n          </section>\r\n\r\n          {/* SECTION -> CONSTRUCTOR */}\r\n          <section\r\n            className={styles['home-page__section-constructor']}\r\n          >\r\n            <Constructor />\r\n          </section>\r\n\r\n        </DndProvider>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n","import classNames from 'classnames';\r\n// components\r\nimport { Price, Button } from 'components/base';\r\nimport { ConstructorModal } from 'components/modals';\r\n// hooks\r\nimport { useToggle } from 'hooks/common';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { burgerConstructorSelectors } from 'store/burger-constructor';\r\n// css\r\nimport styles from './home-page-footer-mobile.module.css';\r\n\r\n// Get required selectors\r\nconst {\r\n  totalSumSelector\r\n} = burgerConstructorSelectors;\r\n\r\n// PROPS\r\ninterface HomePageFooterMobileProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const HomePageFooterMobile = (props: HomePageFooterMobileProps) => {\r\n  const { className } = props;\r\n\r\n  const {\r\n    state: isModalOpen,\r\n    on: showConstructor,\r\n    off: hideConstructor\r\n  } = useToggle(false);\r\n\r\n  // Get the total sum of the constructor\r\n  const { totalSum } = useAppSelector(totalSumSelector);\r\n\r\n  const classes = classNames(\r\n    styles['home-page__footer'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n\r\n      {/* PRICE */}\r\n      <Price\r\n        price={totalSum}\r\n      />\r\n\r\n      {/* SHOW ORDER */}\r\n      <Button\r\n        className={styles['home-page__show-order']}\r\n        text=\"Смотреть заказ\"\r\n        size=\"small\"\r\n        onClick={showConstructor}\r\n      />\r\n\r\n      {/* MODAL WINDOW -> CONSTRUCTOR */}\r\n      {\r\n        isModalOpen && (\r\n          <ConstructorModal onClose={hideConstructor} />\r\n        )\r\n      }\r\n\r\n    </div>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\n// router\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n// components\r\nimport { Paragraph, FooterPortal } from 'components/base';\r\nimport {\r\n  IngredientsMenu,\r\n  IngredientGroup\r\n} from 'components/home';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\n// hooks\r\nimport { useIngredientsActions } from 'hooks/ingredients';\r\n// types\r\nimport { TIngredientType } from 'models';\r\n// aux.\r\nimport { useScroll } from '../hooks';\r\nimport { HomePageFooterMobile } from '../home-page-footer-mobile';\r\n// css\r\nimport styles from './home-page-mobile.module.css';\r\n\r\ninterface LocationStateInterface {\r\n  command?: string;\r\n  ingredientId?: string;\r\n}\r\n\r\n// get selectors\r\nconst {\r\n  ingredientByIdSelector\r\n} = ingredientsSelectors;\r\n\r\n// COMPONENT\r\nexport const HomePageMobile = () => {\r\n  const {\r\n    refContainer,\r\n    refBun,\r\n    refSauce,\r\n    refMain,\r\n    currentTab,\r\n\r\n    scrollToGroup,\r\n    onScrollIngredientsHandler\r\n  } = useScroll();\r\n\r\n  // Get location data\r\n  const location = useLocation<LocationStateInterface>();\r\n  const command = location.state && location.state.command;\r\n  const ingredientId = (location.state && location.state.ingredientId) || '';\r\n  // Get history data\r\n  const history = useHistory();\r\n  const { action, push } = history;\r\n\r\n  // Get action to set current ingredient\r\n  const { setCurrentIngredient } = useIngredientsActions();\r\n\r\n  // Get ingredient by id\r\n  const { ingredient } = useAppSelector(ingredientByIdSelector(ingredientId));\r\n\r\n  useEffect(() => {\r\n    // Handle just \"REPLACE\" actions\r\n    if (action !== 'REPLACE') {\r\n      return;\r\n    }\r\n    //\r\n    if (!ingredient) {\r\n      return;\r\n    }\r\n    // Handle \"openIngredientModal\" command\r\n    if (command === 'openIngredientModal') {\r\n      // set current ingredient\r\n      ingredient && setCurrentIngredient(ingredient);\r\n      // push to new url\r\n      push(`/ingredients/${ingredient.id}`, { background: location });\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [action, command, ingredient, setCurrentIngredient]);\r\n\r\n  // EVENT HANDLERS\r\n  const onClickMenuItemHandler = (data: TIngredientType) => {\r\n    scrollToGroup(data);\r\n  };\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      <div className={styles['home-page']}>\r\n        <section className={styles['home-page__section-ingredients']}>\r\n\r\n          {/* HEADER */}\r\n          <Paragraph\r\n            className={styles['home-page__header']}\r\n            size=\"large\"\r\n            text=\"Соберите бургер\"\r\n          />\r\n\r\n          {/* MENU */}\r\n          <IngredientsMenu\r\n            className={styles['home-page__menu']}\r\n            activeTab={currentTab}\r\n            onClick={onClickMenuItemHandler}\r\n          />\r\n\r\n          {/* CONTENT */}\r\n          <div\r\n            className={styles['home-page__ingredients']}\r\n            ref={refContainer}\r\n            onScroll={onScrollIngredientsHandler}\r\n          >\r\n\r\n            {/* BUNS */}\r\n            <IngredientGroup\r\n              name=\"Булочки\"\r\n              ingredientsType=\"bun\"\r\n              mode=\"mobile\"\r\n              refDiv={refBun}\r\n            />\r\n\r\n            {/* SAUCES */}\r\n            <IngredientGroup\r\n              name=\"Соусы\"\r\n              ingredientsType=\"sauce\"\r\n              mode=\"mobile\"\r\n              refDiv={refSauce}\r\n            />\r\n\r\n            {/* MAIN */}\r\n            <IngredientGroup\r\n              name=\"Начинки\"\r\n              ingredientsType=\"main\"\r\n              mode=\"mobile\"\r\n              refDiv={refMain}\r\n            />\r\n\r\n          </div>\r\n\r\n        </section>\r\n\r\n      </div>\r\n\r\n      {/* FOOTER */}\r\n      <FooterPortal>\r\n        <HomePageFooterMobile\r\n          className={styles['home-page__footer']}\r\n        />\r\n      </FooterPortal>\r\n\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, memo } from 'react';\r\n// hooks\r\nimport { useIngredientsActions } from 'hooks/ingredients';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\nimport { commonSelectors } from 'store/common';\r\n// components\r\nimport { AppLoader, AppMessage } from 'components/common';\r\n// aux.\r\nimport { HomePageDesktop } from './home-page-desktop';\r\nimport { HomePageMobile } from './home-page-mobile';\r\n\r\n// Get selectors\r\nconst {\r\n  dataLengthSelector,\r\n  loadingSelector,\r\n  errorTextSelector\r\n} = ingredientsSelectors;\r\nconst {\r\n  modeSelector\r\n} = commonSelectors;\r\n\r\n// COMPONENT\r\nexport const HomePage = memo(() => {\r\n  // Get method to fetch ingredients\r\n  const { fetchIngredients } = useIngredientsActions();\r\n\r\n  // Get status about ingredients loading\r\n  const { loading: ingredientsLoading } = useAppSelector(loadingSelector);\r\n  const { errorText: ingredientsErrorText } = useAppSelector(errorTextSelector);\r\n  const { dataLength: ingredientsLength } = useAppSelector(dataLengthSelector);\r\n\r\n  // Define \"mode\" of application: desktop or mobile\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  // Method to load all the required data\r\n  const preLoadData = async () => {\r\n    // load ingredients\r\n    if (ingredientsLength === 0) {\r\n      await fetchIngredients();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // LOADER\r\n  if (ingredientsLoading) {\r\n    return <AppLoader />;\r\n  }\r\n\r\n  // ERROR\r\n  if (ingredientsErrorText) {\r\n    return <AppMessage message={ingredientsErrorText} />;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      {/* FOR DESKTOP */}\r\n      { mode === 'desktop' && <HomePageDesktop /> }\r\n\r\n      {/* FOR MOBILE */}\r\n      { mode === 'mobile' && <HomePageMobile /> }\r\n    </>\r\n  );\r\n});\r\n","import { memo } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { FeedOrderCard } from 'components/common';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { feedSelectors } from 'store/feed';\r\n// css\r\nimport styles from './feed-orders.module.css';\r\n\r\n// Get required selectors\r\nconst { dataSelector } = feedSelectors;\r\n\r\n// PROPS\r\ninterface FeedOrdersProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const FeedOrders = memo((props: FeedOrdersProps) => {\r\n  const { className } = props;\r\n\r\n  // Get orders from the feed\r\n  const { orders } = useAppSelector(dataSelector);\r\n\r\n  // NO DATA\r\n  if (orders.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['feed-orders'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      {\r\n        orders.map((order) => (\r\n          <FeedOrderCard\r\n            key={order.id}\r\n            orderId={order.id}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n});\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { Paragraph, ParagraphDigits } from 'components/base';\r\n// utils\r\nimport { formatNumber } from 'utils';\r\n// css\r\nimport styles from './feed-total.module.css';\r\n\r\n// PROPS\r\ninterface FeedDashboardTotalProps {\r\n  text: string;\r\n  total: number;\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const FeedTotal = (props: FeedDashboardTotalProps) => {\r\n  const { text, total, className } = props;\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['feed-total'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      {/* Caption */}\r\n      <Paragraph\r\n        text={text}\r\n        size=\"medium\"\r\n      />\r\n      {/* Value */}\r\n      <ParagraphDigits\r\n        size=\"large\"\r\n        text={formatNumber(total)}\r\n        shadowed\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { memo } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { feedSelectors } from 'store/feed';\r\n// components\r\nimport { OrderNumbers } from 'components/base';\r\nimport { FeedTotal } from 'components/feed';\r\n// css\r\nimport styles from './feed-page-dashboard.module.css';\r\n\r\n// Get required selectors\r\nconst { totalSelector, orderNumbersSelector } = feedSelectors;\r\n\r\n// COMPONENT\r\nexport const FeedPageDashboard = memo(() => {\r\n  const { total, totalToday } = useAppSelector(totalSelector);\r\n  const { completedOrders, pendingOrders } = useAppSelector(orderNumbersSelector);\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['feed-page__section-dashboard']\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <section className={classes}>\r\n\r\n      <div className={styles['feed-page__dashboard-orders']}>\r\n        <OrderNumbers\r\n          className={styles['feed-page__dashboard-orders-group']}\r\n          header=\"Готовы:\"\r\n          orders={completedOrders}\r\n          theme=\"success\"\r\n        />\r\n        <OrderNumbers\r\n          className={styles['feed-page__dashboard-orders-group']}\r\n          header=\"В работе:\"\r\n          orders={pendingOrders}\r\n        />\r\n      </div>\r\n\r\n      {/* Total - all time */}\r\n      <FeedTotal\r\n        className={styles['feed-page__dashboard-total']}\r\n        text=\"Выполнено за все время:\"\r\n        total={total}\r\n      />\r\n\r\n      {/* Total - today */}\r\n      <FeedTotal\r\n        className={styles['feed-page__dashboard-total']}\r\n        text=\"Выполнено за сегодня:\"\r\n        total={totalToday}\r\n      />\r\n\r\n    </section>\r\n  );\r\n});\r\n","// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { FeedOrders } from 'components/feed';\r\n// css\r\nimport styles from './feed-page-orders.module.css';\r\n\r\n// COMPONENT\r\nexport const FeedPageOrders = () => {\r\n  // css\r\n  const classes = classNames(\r\n    styles['feed-page__section-orders']\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <section className={classes}>\r\n      <FeedOrders />\r\n    </section>\r\n  );\r\n};\r\n","import { useEffect, useState, memo } from 'react';\r\n// router\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport { FeedMenu, FeedMenuOptions } from 'components/feed';\r\n// aux.\r\nimport { FeedPageDashboard } from '../feed-page-dashboard';\r\nimport { FeedPageOrders } from '../feed-page-orders';\r\n// css\r\nimport styles from './feed-page-mobile.module.css';\r\n\r\ninterface LocationStateInterface {\r\n  command?: string;\r\n  orderId?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const FeedPageMobile = memo(() => {\r\n  const [\r\n    currentTab,\r\n    setCurrentTab\r\n  ] = useState<FeedMenuOptions>(FeedMenuOptions.Orders);\r\n\r\n  // Get location data\r\n  const location = useLocation<LocationStateInterface>();\r\n  const command = location.state && location.state.command;\r\n  const orderId = (location.state && location.state.orderId) || '';\r\n  // Get history data\r\n  const history = useHistory();\r\n  const { action, push } = history;\r\n\r\n  useEffect(() => {\r\n    // Handle just \"REPLACE\" actions\r\n    if (action !== 'REPLACE') {\r\n      return;\r\n    }\r\n    //\r\n    if (!orderId) {\r\n      return;\r\n    }\r\n    // Handle \"openOrderModal\" command\r\n    if (command === 'openOrderModal') {\r\n      // push to new url\r\n      push(`/feed/${orderId}`, { background: location });\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [action, command, orderId]);\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['feed-page']}>\r\n      <section className={styles['feed-page__section-feed']}>\r\n\r\n        {/* HEADER */}\r\n        <Paragraph\r\n          className={styles['feed-page__header']}\r\n          size=\"large\"\r\n          text=\"Лента заказов\"\r\n        />\r\n\r\n        {/* MENU */}\r\n        <FeedMenu\r\n          className={styles['feed-page__menu']}\r\n          activeTab={currentTab}\r\n          onClick={(data) => setCurrentTab(data)}\r\n        />\r\n\r\n        {/* CONTENT */}\r\n        <div className={styles['feed-page__content']}>\r\n\r\n          {/* ORDERS */}\r\n          { currentTab === FeedMenuOptions.Orders && <FeedPageOrders /> }\r\n\r\n          {/* DASHBOARD */}\r\n          { currentTab === FeedMenuOptions.Statistics && <FeedPageDashboard /> }\r\n\r\n        </div>\r\n\r\n      </section>\r\n    </div>\r\n  );\r\n});\r\n","import { memo } from 'react';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\n// aux.\r\nimport { FeedPageDashboard } from '../feed-page-dashboard';\r\nimport { FeedPageOrders } from '../feed-page-orders';\r\n// css\r\nimport styles from './feed-page-desktop.module.css';\r\n\r\n// COMPONENT\r\nexport const FeedPageDesktop = memo(() => {\r\n  // RENDER\r\n  return (\r\n    <div className={styles['feed-page']}>\r\n\r\n      {/* HEADER */}\r\n      <Paragraph\r\n        className={styles['feed-page__header']}\r\n        size=\"large\"\r\n        text=\"Лента заказов\"\r\n      />\r\n\r\n      <div className={styles['feed-page__content']}>\r\n\r\n        {/* Orders */}\r\n        <FeedPageOrders />\r\n\r\n        {/* Dashboard */}\r\n        <FeedPageDashboard />\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n});\r\n","import { useEffect } from 'react';\r\n// components\r\nimport { AppLoader, AppMessage } from 'components/common';\r\n// hooks\r\nimport { useIngredientsActions } from 'hooks/ingredients';\r\nimport { useFeedSocket } from 'hooks/feed';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\nimport { commonSelectors } from 'store/common';\r\n// aux.\r\nimport { FeedPageMobile } from './feed-page-mobile';\r\nimport { FeedPageDesktop } from './feed-page-desktop';\r\n\r\n// Get required selectors\r\nconst {\r\n  dataLengthSelector,\r\n  loadingSelector,\r\n  errorTextSelector\r\n} = ingredientsSelectors;\r\nconst {\r\n  modeSelector\r\n} = commonSelectors;\r\n\r\n// COMPONENT\r\nexport const FeedPage = () => {\r\n  // Functions to control socket\r\n  const {\r\n    wsLoading,\r\n    wsErrorText,\r\n    wsStart,\r\n    wsClose\r\n  } = useFeedSocket();\r\n\r\n  // Get method to fetch ingredients\r\n  const { fetchIngredients } = useIngredientsActions();\r\n\r\n  // Select data about ingredients\r\n  const { dataLength: ingredientsLength } = useAppSelector(dataLengthSelector);\r\n  const { loading: ingredientsLoading } = useAppSelector(loadingSelector);\r\n  const { errorText: ingredientsErrorText } = useAppSelector(errorTextSelector);\r\n\r\n  // Define \"mode\" of application: desktop or mobile\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  const preLoadData = async () => {\r\n    // load ingredients\r\n    if (ingredientsLength === 0) {\r\n      await fetchIngredients();\r\n    }\r\n    // start web-socket\r\n    wsStart();\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Close the socket connection, when the page is unmounted\r\n  useEffect(() => {\r\n    return () => wsClose();\r\n  }, [wsClose]);\r\n\r\n  // LOADER\r\n  if (ingredientsLoading || wsLoading) {\r\n    return <AppLoader />;\r\n  }\r\n\r\n  // ERROR\r\n  if (ingredientsErrorText || wsErrorText) {\r\n    return <AppMessage message={ingredientsErrorText || wsErrorText} />;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      {/* FOR DESKTOP */}\r\n      { mode === 'desktop' && <FeedPageDesktop /> }\r\n\r\n      {/* FOR MOBILE */}\r\n      { mode === 'mobile' && <FeedPageMobile /> }\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n// router\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n// components\r\nimport { ParagraphDigits } from 'components/base';\r\nimport {\r\n  OrderInfo,\r\n  AppLoader,\r\n  AppMessage\r\n} from 'components/common';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\nimport { feedSelectors } from 'store/feed';\r\nimport { commonSelectors } from 'store/common';\r\n// hooks\r\nimport { useFeedActions } from 'hooks/feed';\r\nimport { useIngredientsActions } from 'hooks/ingredients';\r\n// css\r\nimport styles from './order-page.module.css';\r\n\r\n// Get required selectors\r\nconst {\r\n  dataLengthSelector,\r\n  loadingSelector,\r\n  errorTextSelector\r\n} = ingredientsSelectors;\r\nconst {\r\n  currentOrderSelector,\r\n  loadingSelector: feedLoadingSelector,\r\n  errorTextSelector: feedErrorTextSelector\r\n} = feedSelectors;\r\nconst {\r\n  modeSelector\r\n} = commonSelectors;\r\n\r\n// COMPONENT\r\nexport const OrderPage = () => {\r\n  const [preloadCompleted, setPreloadCompleted] = useState<boolean>(false);\r\n\r\n  // Get the current order number from params\r\n  const { orderId } = useParams<{ orderId: string }>();\r\n\r\n  // Get method to fetch ingredients\r\n  const { fetchIngredients } = useIngredientsActions();\r\n\r\n  // Get the function to fetch an order\r\n  const { fetchOrder } = useFeedActions();\r\n\r\n  const {\r\n    mode\r\n  } = useAppSelector(modeSelector);\r\n\r\n  const { replace } = useHistory();\r\n\r\n  // Get the status of fetching ingredients\r\n  const { dataLength: ingredientsLength } = useAppSelector(dataLengthSelector);\r\n  const { loading: ingredientsLoading } = useAppSelector(loadingSelector);\r\n  const { errorText: ingredientsErrorText } = useAppSelector(errorTextSelector);\r\n\r\n  // Get the status of fetching order\r\n  const { currentOrder } = useAppSelector(currentOrderSelector);\r\n  const { loading: feedLoading } = useAppSelector(feedLoadingSelector);\r\n  const { errorText: feedErrorText } = useAppSelector(feedErrorTextSelector);\r\n\r\n  const preLoadData = async () => {\r\n    if (!orderId) {\r\n      return;\r\n    }\r\n    // load ingredients\r\n    if (ingredientsLength === 0) {\r\n      await fetchIngredients();\r\n    }\r\n    // load order\r\n    await fetchOrder(orderId);\r\n\r\n    setPreloadCompleted(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // In mobile mode\r\n  // open modal window instead page\r\n  useEffect(() => {\r\n    if (!preloadCompleted) {\r\n      return;\r\n    }\r\n    // in mode = 'mobile' we don't show this page.\r\n    if (mode !== 'mobile') {\r\n      return;\r\n    }\r\n    // instead we must open modal window with order\r\n    replace('/feed', { command: 'openOrderModal', orderId });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [preloadCompleted, mode, orderId]);\r\n\r\n  // LOADER\r\n  if (ingredientsLoading || feedLoading) {\r\n    return <AppLoader />;\r\n  }\r\n\r\n  // ERROR\r\n  if (ingredientsErrorText || feedErrorText) {\r\n    return <AppMessage message={ingredientsErrorText || feedErrorText} />;\r\n  }\r\n\r\n  // NO DATA\r\n  if (!currentOrder) {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['order-page']}>\r\n      <div className={styles['order-page__section-order']}>\r\n\r\n        {/* HEADER */}\r\n        <div className={styles['order-page__header']}>\r\n          <ParagraphDigits\r\n            text={`#${currentOrder.orderNumber}`}\r\n          />\r\n        </div>\r\n\r\n        {/* CONTENT */}\r\n        <OrderInfo\r\n          className={styles['order-page__order']}\r\n          order={currentOrder}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\n\r\nimport { useEffect, useState } from 'react';\r\n// router\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { authSelectors } from 'store/auth';\r\n// hooks\r\nimport { useAuth } from 'hooks/auth';\r\n\r\n// Get required selectors\r\nconst { userSelector } = authSelectors;\r\n\r\n// COMPONENT\r\nexport const ProtectedRoute = ({ children, ...rest }: RouteProps) => {\r\n  // Here we store the flag that all prep actions completed\r\n  const [preCompleted, setPreCompleted] = useState<boolean>(false);\r\n\r\n  // Get the current user\r\n  const { user: currentUser } = useAppSelector(userSelector);\r\n\r\n  // Function to get user by token\r\n  const { getUser } = useAuth();\r\n\r\n  // Method to load all the data before rendering the component\r\n  const preLoadData = async () => {\r\n    try {\r\n      // Fetch user\r\n      await getUser();\r\n    } catch {\r\n      //\r\n    } finally {\r\n      // complete prep\r\n      setPreCompleted(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // LOADER\r\n  if (!preCompleted) {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        return currentUser\r\n          ? children\r\n          : <Redirect to={{ pathname: '/login', state: { from: location } }} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\n\r\n// router\r\nimport { Route, Redirect, RouteProps } from 'react-router-dom';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { authSelectors } from 'store/auth';\r\n\r\n// Get required selectors\r\nconst { userSelector } = authSelectors;\r\n\r\n// COMPONENT\r\nexport const NotForLoggedInRoute = ({ children, ...rest }: RouteProps) => {\r\n  // Get the current user\r\n  const { user: currentUser } = useAppSelector(userSelector);\r\n\r\n  // RENDER\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => {\r\n        return currentUser\r\n          ? <Redirect to={{ pathname: '/profile' }} />\r\n          : children;\r\n      }}\r\n    />\r\n  );\r\n};\r\n","// types\nimport { ValidationResultType } from './validation-result-type';\nimport { RuleType } from './rule-type';\n\n// FUNCTION\nexport const validateInput = (\n  value: string, validationRules: RuleType[]\n): ValidationResultType => {\n  //\n  let valid = true;\n  let message = '';\n\n  for (let i = 0; i < validationRules.length; i += 1) {\n    // Execute a rule\n    const result = validationRules[i](value);\n    // Get the property \"valid\"\n    valid = result.valid;\n    // Break the cycle, if it isn't valid\n    if (!valid) {\n      message = result.message;\n      break;\n    }\n  }\n\n  // RETURN\n  return {\n    valid,\n    message\n  };\n};\n","// types\nimport { RuleFunctionType } from '../rule-function-type';\nimport { ValidationResultType } from '../validation-result-type';\n\n// FUNCTION\nexport const areValidChacters: RuleFunctionType = (\n  fieldName: string,\n  message?: string\n) => (value: string): ValidationResultType => {\n  // Valid\n  const valid = /^[A-Za-z0-9!.]+$/.test(value);\n\n  // Message\n  let resultMessage = '';\n  if (!valid) {\n    if (message) {\n      resultMessage = message;\n    } else {\n      resultMessage = `В поле '${fieldName}' можно использовать только буквы, цифры и смиволы: '.', '_' и '!'`;\n    }\n  }\n\n  // RETURN\n  return {\n    valid,\n    message: resultMessage\n  };\n};\n","// types\nimport { MinMaxRuleFunctionType } from '../rule-function-type';\nimport { ValidationResultType } from '../validation-result-type';\n\n// FUNCTION\nexport const isPasswordCorrectLength: MinMaxRuleFunctionType = (\n  fieldName: string,\n  minLength: number,\n  maxLength: number,\n  message?: string\n) => (value: string): ValidationResultType => {\n  // Valid\n  const valid = (value.length >= minLength\n    && value.length <= maxLength);\n\n  // Message\n  let resultMessage = '';\n  if (!valid) {\n    if (message) {\n      resultMessage = message;\n    } else {\n      resultMessage = `Поле '${fieldName}' должно содержать больше ${minLength} и меньше ${maxLength} символов.`;\n    }\n  }\n\n  // RETURN\n  return {\n    valid,\n    message: resultMessage\n  };\n};\n","// Custom types\nimport { RuleFunctionType } from '../rule-function-type';\nimport { ValidationResultType } from '../validation-result-type';\n\n// FUNCTION\nexport const required: RuleFunctionType = (\n  fieldName: string,\n  message?: string\n) => (value: string): ValidationResultType => {\n  // Valid\n  const valid = value.trim().length > 0;\n\n  // Message\n  let resultMessage = '';\n  if (!valid) {\n    if (message) {\n      resultMessage = message;\n    } else {\n      resultMessage = `Поле '${fieldName}' не должно быть пустым.`;\n    }\n  }\n\n  // RETURN\n  return {\n    valid,\n    message: resultMessage\n  };\n};\n","// types\nimport { RuleFunctionType } from '../rule-function-type';\nimport { ValidationResultType } from '../validation-result-type';\n\n// FUNCTION\nexport const isEmail: RuleFunctionType = (\n  fieldName: string,\n  message?: string\n) => (value: string): ValidationResultType => {\n  // Valid\n  const emailRegex = /(^$|^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$)/;\n  const valid = emailRegex.test(value);\n\n  // Message\n  let resultMessage = '';\n  if (!valid) {\n    if (message) {\n      resultMessage = message;\n    } else {\n      resultMessage = `Поле '${fieldName}' должно содержать корректный email.`;\n    }\n  }\n\n  // RETURN\n  return {\n    valid,\n    message: resultMessage\n  };\n};\n","import {\r\n  useState,\r\n  memo,\r\n  CSSProperties,\r\n  FormEvent,\r\n  ChangeEvent,\r\n  useCallback\r\n} from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// hooks\r\nimport { useAuth } from 'hooks/auth';\r\nimport { useToasts } from 'hooks/toasts';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { authSelectors } from 'store/auth';\r\n// components\r\nimport { Button, Paragraph, PasswordInput } from 'components/base';\r\nimport { Input } from 'components/yandex';\r\n// types\r\nimport { IRejectedValue } from 'store/types';\r\n// utils\r\nimport {\r\n  validateInput,\r\n  RuleType,\r\n  ValidationResultType\r\n} from 'utils/validation';\r\nimport {\r\n  required,\r\n  isEmail,\r\n  areValidChacters,\r\n  isPasswordCorrectLength\r\n} from 'utils/validation/rules';\r\n// css\r\nimport styles from './profile-form.module.css';\r\n\r\n// Get required selectors\r\nconst { userSelector, loadingSelector } = authSelectors;\r\n\r\n// PROPS\r\ninterface ProfileFormProps {\r\n  className?: string;\r\n}\r\n\r\n// VALIDATION RULES\r\nconst nameValidations: RuleType[] = [\r\n  required('Имя пользователя'),\r\n];\r\nconst emailValidations: RuleType[] = [\r\n  required('Email'),\r\n  isEmail('Email')\r\n];\r\nconst passwordValidations: RuleType[] = [\r\n  areValidChacters('Пароль'),\r\n  isPasswordCorrectLength('Пароль', 6, 15)\r\n];\r\n\r\n// COMPONENT\r\nexport const ProfileForm = memo((props: ProfileFormProps) => {\r\n  const { className } = props;\r\n\r\n  // Get auth data\r\n  const { user: currentUser } = useAppSelector(userSelector);\r\n  const { loading } = useAppSelector(loadingSelector);\r\n  // Get auth functions\r\n  const { updateUser } = useAuth();\r\n\r\n  // ProfileForm is in ProtectedRoute, so currentUser is never equal to null.\r\n  // So we use exclamation mark operator\r\n  // Name - state\r\n  const [name, setName] = useState<string>(currentUser?.name || '');\r\n  // Email - setEmail\r\n  const [email, setEmail] = useState<string>(currentUser?.email || '');\r\n  // Password - state\r\n  // We can just change a password, not view it\r\n  const [password, setPassword] = useState<string>('');\r\n\r\n  // Save initial values of user data\r\n  const [initialName, setInitialName] = useState<string>(currentUser?.name || '');\r\n  const [initialEmail, setInitialEmail] = useState<string>(currentUser?.email || '');\r\n\r\n  // In this state we store the flag, that update user operation completed\r\n  // const [updateUserCompleted, setUpdateUserCompleted] = useState<boolean>(false);\r\n\r\n  // This states store data:\r\n  // - if the fields are correct\r\n  // - the error text\r\n  const [\r\n    nameValidationState,\r\n    setNameValidationState\r\n  ] = useState<ValidationResultType>(validateInput(name, nameValidations));\r\n  const [\r\n    emailValidationState,\r\n    setEmailValidationState\r\n  ] = useState<ValidationResultType>(validateInput(email, emailValidations));\r\n  const [\r\n    passwordValidationState,\r\n    setPasswordValidationState\r\n  ] = useState<ValidationResultType>(validateInput(password, passwordValidations));\r\n\r\n  // This states store the flags whether errors should be displayed or not\r\n  const [showNameError, setShowNameError] = useState<boolean>(false);\r\n  const [showEmailError, setShowEmailError] = useState<boolean>(false);\r\n  const [showPasswordError, setShowPasswordError] = useState<boolean>(false);\r\n\r\n  // Get functions for notifications\r\n  const { toastSuccess, toastError } = useToasts();\r\n\r\n  // Function cancels changes to user data.\r\n  const cancelChanges = (): void => {\r\n    setName(initialName);\r\n    setEmail(initialEmail);\r\n    setPassword('');\r\n  };\r\n\r\n  // Function updates initial values\r\n  const updateInitialValues = useCallback((): void => {\r\n    setInitialName(name);\r\n    setInitialEmail(email);\r\n    setPassword('');\r\n  }, [name, email]);\r\n\r\n  // NO CURRENT USER\r\n  if (!currentUser) {\r\n    return null;\r\n  }\r\n\r\n  // Define, whether the form changed\r\n  const isChanged = (): boolean => {\r\n    return name !== initialName\r\n      || email !== initialEmail\r\n      || password !== '';\r\n  };\r\n\r\n  // If there are no changes,\r\n  // hide the block with actions\r\n  const styleActions: CSSProperties = isChanged()\r\n    ? {}\r\n    : { display: 'none' };\r\n\r\n  //\r\n  const isValid = (): boolean => {\r\n    return nameValidationState.valid\r\n      && emailValidationState.valid\r\n        && (password ? passwordValidationState.valid : true);\r\n  };\r\n\r\n  // FORM -> onSubmit\r\n  const onSubmitHandler = async (e: FormEvent) => {\r\n    e.preventDefault();\r\n\r\n    // Ignore submits while requesting\r\n    if (loading) {\r\n      return;\r\n    }\r\n\r\n    // Set the flag to show errors\r\n    setShowNameError(true);\r\n    setShowEmailError(true);\r\n    setShowPasswordError(true && !!password);\r\n\r\n    // Return if the data is incorrect\r\n    if (!isValid()) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Do a request to update user\r\n      const result = await updateUser({ name, email, password });\r\n\r\n      if (!result) {\r\n        return;\r\n      }\r\n\r\n      // Notify users about success\r\n      toastSuccess('Данные пользователя успешно обновлены!');\r\n\r\n      // Update initial values\r\n      updateInitialValues();\r\n    } catch (err: unknown) {\r\n      const message = (err as IRejectedValue).error;\r\n      toastError(message);\r\n    }\r\n  };\r\n\r\n  // USERNAME -> onChange\r\n  const onChangeNameHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setName(value);\r\n    // Check the current value of the field\r\n    setNameValidationState(validateInput(value, nameValidations));\r\n    // Hide the text error when users edit the field\r\n    setShowNameError(false);\r\n  };\r\n\r\n  // EMAIL -> onChange\r\n  const onChangeEmailHadnler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setEmail(value);\r\n    // Check the current value of the field\r\n    setEmailValidationState(validateInput(value, emailValidations));\r\n    // Hide the text error when users edit the field\r\n    setShowEmailError(false);\r\n  };\r\n\r\n  // PASSWORD -> onChange\r\n  const onChangePasswordHadnler = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { value } = e.target;\r\n    setPassword(value);\r\n    // Check the current value of the field\r\n    setPasswordValidationState(validateInput(value, passwordValidations));\r\n    // Hide the text error when users edit the field\r\n    setShowPasswordError(false);\r\n  };\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['profile-form'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <form\r\n      className={classes}\r\n      onSubmit={onSubmitHandler}\r\n    >\r\n      {/* User Name */}\r\n      <Input\r\n        name=\"name\"\r\n        value={name}\r\n        placeholder=\"Имя пользователя\"\r\n        error={showNameError && !nameValidationState.valid}\r\n        errorText={nameValidationState.message}\r\n        onChange={onChangeNameHandler}\r\n      />\r\n\r\n      {/* Email */}\r\n      <Input\r\n        name=\"email\"\r\n        value={email}\r\n        placeholder=\"Email\"\r\n        error={showEmailError && !emailValidationState.valid}\r\n        errorText={emailValidationState.message}\r\n        onChange={onChangeEmailHadnler}\r\n      />\r\n\r\n      {/* Password */}\r\n      <PasswordInput\r\n        name=\"password\"\r\n        value={password}\r\n        placeholder=\"Пароль\"\r\n        error={showPasswordError && !passwordValidationState.valid}\r\n        errorText={passwordValidationState.message}\r\n        onChange={onChangePasswordHadnler}\r\n      />\r\n\r\n      {/* Actions */}\r\n      <div\r\n        className={styles['profile-form__actions']}\r\n        style={styleActions}\r\n      >\r\n        {/* Link \"Cancel\" */}\r\n        <Paragraph\r\n          className={styles['profile-form__link']}\r\n          onClick={cancelChanges}\r\n          text=\"Отмена\"\r\n        />\r\n        {/* Button \"Save\" */}\r\n        <Button\r\n          className={styles['profile-form__save']}\r\n          text=\"Сохранить\"\r\n          type=\"submit\"\r\n          loading={loading}\r\n        />\r\n      </div>\r\n\r\n    </form>\r\n  );\r\n});\r\n","import { memo } from 'react';\r\n// third-party libraries\r\nimport classNames from 'classnames';\r\n// components\r\nimport { ProfileOrderCard } from 'components/common';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ordersSelectors } from 'store/orders';\r\n// css\r\nimport styles from './profile-orders.module.css';\r\n\r\n// Get required selectors\r\nconst { dataSelector } = ordersSelectors;\r\n\r\n// PROPS\r\ninterface ProfileOrdersProps {\r\n  className?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const ProfileOrders = memo((props: ProfileOrdersProps) => {\r\n  const { className } = props;\r\n\r\n  // Select data about orders\r\n  const { orders } = useAppSelector(dataSelector);\r\n\r\n  // NO DATA\r\n  if (orders.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  // css\r\n  const classes = classNames(\r\n    styles['profile-orders'],\r\n    className\r\n  );\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={classes}>\r\n      {\r\n        orders.map((order) => (\r\n          <ProfileOrderCard\r\n            key={order.id}\r\n            orderId={order.id}\r\n          />\r\n        ))\r\n      }\r\n    </div>\r\n  );\r\n});\r\n","import { memo } from 'react';\r\n// components\r\nimport { ProfileOrders } from 'components/profile';\r\n// css\r\nimport styles from './profile-page-orders-desktop.module.css';\r\n\r\n// COMPONENT\r\nexport const ProfilePageOrdersDesktop = memo(() => {\r\n  // RENDER\r\n  return (\r\n    <section className={styles['profile-page__section-orders']}>\r\n\r\n      {/* ORDERS */}\r\n      <div className={styles['profile-page__orders-content']}>\r\n        <ProfileOrders />\r\n      </div>\r\n\r\n    </section>\r\n  );\r\n});\r\n","import { useEffect, memo } from 'react';\r\n// router\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport { ProfileOrders } from 'components/profile';\r\n// css\r\nimport styles from './profile-page-orders-mobile.module.css';\r\n\r\ninterface LocationStateInterface {\r\n  command?: string;\r\n  orderId?: string;\r\n}\r\n\r\n// COMPONENT\r\nexport const ProfilePageOrdersMobile = memo(() => {\r\n  // Get location data\r\n  const location = useLocation<LocationStateInterface>();\r\n  const command = location.state && location.state.command;\r\n  const orderId = (location.state && location.state.orderId) || '';\r\n  // Get history data\r\n  const history = useHistory();\r\n  const { action, push } = history;\r\n\r\n  useEffect(() => {\r\n    // Handle just \"REPLACE\" actions\r\n    if (action !== 'REPLACE') {\r\n      return;\r\n    }\r\n    //\r\n    if (!orderId) {\r\n      return;\r\n    }\r\n    // Handle \"openOrderModal\" command\r\n    if (command === 'openOrderModal') {\r\n      // push to new url\r\n      push(`/profile/orders/${orderId}`, { backgroundProfile: location });\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [action, command, orderId]);\r\n\r\n  // RENDER\r\n  return (\r\n    <section className={styles['profile-page__section-orders']}>\r\n\r\n      {/* HEADER */}\r\n      <Paragraph\r\n        className={styles['profile-page__orders-header']}\r\n        text=\"История заказов\"\r\n        size=\"large\"\r\n      />\r\n\r\n      {/* ORDERS */}\r\n      <div className={styles['profile-page__orders-content']}>\r\n        <ProfileOrders />\r\n      </div>\r\n\r\n    </section>\r\n  );\r\n});\r\n","import { useEffect } from 'react';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport { AppLoader } from 'components/common';\r\n// hooks\r\nimport { useProfileSocket } from 'hooks/profile';\r\nimport { useIngredientsActions } from 'hooks/ingredients';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\nimport { commonSelectors } from 'store/common';\r\n// aux.\r\nimport { ProfilePageOrdersDesktop } from '../profile-page-orders-desktop';\r\nimport { ProfilePageOrdersMobile } from '../profile-page-orders-mobile';\r\n// css\r\nimport styles from './profile-page-orders.module.css';\r\n\r\n// Get required selectors\r\nconst {\r\n  dataLengthSelector,\r\n  loadingSelector,\r\n  errorTextSelector\r\n} = ingredientsSelectors;\r\nconst {\r\n  modeSelector\r\n} = commonSelectors;\r\n\r\n// COMPONENT\r\nexport const ProfilePageOrders = () => {\r\n  // Select data about ingredients\r\n  const { dataLength: ingredientsLength } = useAppSelector(dataLengthSelector);\r\n  const { loading: ingredientsLoading } = useAppSelector(loadingSelector);\r\n  const { errorText: ingredientsErrorText } = useAppSelector(errorTextSelector);\r\n\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  // Get method to fetch ingredients\r\n  const { fetchIngredients } = useIngredientsActions();\r\n\r\n  // Functions to control socket\r\n  const {\r\n    wsLoading,\r\n    wsErrorText,\r\n    wsStart,\r\n    wsClose\r\n  } = useProfileSocket();\r\n\r\n  const preLoadData = async () => {\r\n    // load ingredients\r\n    if (ingredientsLength === 0) {\r\n      await fetchIngredients();\r\n    }\r\n    // await fetchOrder(orderId);\r\n    wsStart();\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // Close the socket connection, when the page is unmounted\r\n  useEffect(() => {\r\n    return () => wsClose();\r\n  }, [wsClose]);\r\n\r\n  // LOADER\r\n  if (ingredientsLoading || wsLoading) {\r\n    return <AppLoader />;\r\n  }\r\n\r\n  // ERROR\r\n  if (ingredientsErrorText || wsErrorText) {\r\n    return (\r\n      <Paragraph\r\n        className={styles['profile-page__error']}\r\n        text={ingredientsErrorText || wsErrorText}\r\n        size=\"medium\"\r\n      />\r\n    );\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      {/* FOR DESKTOP */}\r\n      { mode === 'desktop' && <ProfilePageOrdersDesktop /> }\r\n      {/* FOR MOBILE */}\r\n      { mode === 'mobile' && <ProfilePageOrdersMobile /> }\r\n    </>\r\n  );\r\n};\r\n","// components\r\nimport { Paragraph } from 'components/base';\r\nimport { ProfileForm } from 'components/profile';\r\n// css\r\nimport styles from './profile-page-profile-form.module.css';\r\n\r\n// COMPONENT\r\nexport const ProfilePageProfileForm = () => {\r\n  // RENDER\r\n  return (\r\n    <div className={styles['profile-page__form']}>\r\n\r\n      {/* HEADER */}\r\n      <Paragraph\r\n        className={styles['profile-page__form-header']}\r\n        text=\"Профиль\"\r\n        size=\"large\"\r\n      />\r\n\r\n      {/* FORM */}\r\n      <ProfileForm />\r\n\r\n    </div>\r\n  );\r\n};\r\n","// components\r\nimport { NotFound } from 'components/base';\r\n// css\r\nimport styles from './profile-page-not-found.module.css';\r\n\r\n// COMPONENT\r\nexport const ProfilePageNotFound = () => {\r\n  // RENDER\r\n  return (\r\n    <NotFound className={styles['profile-page__not-found']} />\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n// router\r\nimport {\r\n  Switch,\r\n  Route,\r\n  useRouteMatch,\r\n  useLocation,\r\n  useHistory\r\n} from 'react-router-dom';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { Location } from 'history';\r\n// third-party libraries\r\nimport { v4 as uuid } from 'uuid';\r\n// components\r\nimport { ProtectedRoute } from 'components/common/routes';\r\nimport { OrderModal } from 'components/modals';\r\nimport { ProfileOrderPage } from 'pages';\r\n// aux.\r\nimport { ProfilePageOrders } from './profile-page-orders';\r\nimport { ProfilePageProfileForm } from './profile-page-form';\r\nimport { ProfilePageNotFound } from './profile-page-not-found';\r\n\r\n// Type for location\r\ninterface LocationStateInterface {\r\n  backgroundProfile: Location<LocationStateInterface>\r\n}\r\n\r\n// COMPONENT\r\nexport const ProfileRoutes = () => {\r\n  const [idProfileForm] = useState<string>(uuid());\r\n  const [idProfileOrders] = useState<string>(uuid());\r\n  const [idProfileOrder] = useState<string>(uuid());\r\n\r\n  const { path } = useRouteMatch();\r\n\r\n  // Get the current location\r\n  const location = useLocation<LocationStateInterface>();\r\n\r\n  // Determine the action type\r\n  const history = useHistory();\r\n  let background;\r\n  if (history.action !== 'POP') {\r\n    // Try to get the previous location\r\n    background = location.state && location.state.backgroundProfile;\r\n  }\r\n\r\n  // Routes\r\n  return (\r\n    <>\r\n      <Switch location={background || location}>\r\n\r\n        {/* PROFILE ROOT */}\r\n        {/* -> /profile */}\r\n        <ProtectedRoute\r\n          key={idProfileForm}\r\n          path={path}\r\n          exact\r\n        >\r\n          <ProfilePageProfileForm />\r\n        </ProtectedRoute>\r\n\r\n        {/* PROFILE ALL ORDERS */}\r\n        {/* -> /profile/orders */}\r\n        <ProtectedRoute\r\n          key={idProfileOrders}\r\n          path={`${path}/orders`}\r\n          exact\r\n        >\r\n          <ProfilePageOrders />\r\n        </ProtectedRoute>\r\n\r\n        {/* PROFILE ORDER */}\r\n        {/* -> /profile/orders/:orderId */}\r\n        <ProtectedRoute\r\n          key={idProfileOrder}\r\n          path={`${path}/orders/:orderId`}\r\n          exact\r\n        >\r\n          <ProfileOrderPage />\r\n        </ProtectedRoute>\r\n\r\n        {/* NOT FOUND */}\r\n        <Route>\r\n          <ProfilePageNotFound />\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n      {/* Modal window for \"ProfileOrder\" */}\r\n      { background && (\r\n        <Route\r\n          path={`${path}/orders/:orderId`}\r\n          exact\r\n        >\r\n          <OrderModal mode=\"profile\" />\r\n        </Route>\r\n      ) }\r\n    </>\r\n  );\r\n};\r\n","// router\r\nimport { useRouteMatch, useHistory } from 'react-router-dom';\r\n// components\r\nimport {\r\n  SideMenu,\r\n  SideMenuElement,\r\n  SideMenuElementAction\r\n} from 'components/base';\r\n// hooks\r\nimport { useAuth } from 'hooks/auth';\r\nimport { useToasts } from 'hooks/toasts';\r\n// types\r\nimport { IRejectedValue } from 'store/types';\r\n// css\r\nimport styles from './profile-page-menu.module.css';\r\n\r\n// COMPONENT\r\nexport const ProfilePageMenu = () => {\r\n  const { logoutUser } = useAuth();\r\n\r\n  const match1 = useRouteMatch('/profile');\r\n  const match2 = useRouteMatch('/profile/orders');\r\n  const match3 = useRouteMatch('/profile/orders/:orderId');\r\n\r\n  const history = useHistory();\r\n\r\n  // Get functions for notifications\r\n  const { toastError } = useToasts();\r\n\r\n  // Define when to show menu\r\n  const showMenu = match1?.isExact\r\n    || match2?.isExact\r\n    || (match3 && history.action === 'PUSH');\r\n\r\n  // console.log(history);\r\n\r\n  // NO RENDER\r\n  if (!showMenu) {\r\n    return null;\r\n  }\r\n\r\n  // Function to logout from the system and notify user of a failure\r\n  const logout = async () => {\r\n    try {\r\n      await logoutUser();\r\n    } catch (err: unknown) {\r\n      const message = (err as IRejectedValue).error;\r\n      toastError(message);\r\n    }\r\n  };\r\n\r\n  // RENDER\r\n  return (\r\n    <SideMenu className={styles['profile-page__side-menu']}>\r\n      <SideMenuElement\r\n        text=\"Профиль\"\r\n        to=\"/profile\"\r\n      />\r\n      <SideMenuElement\r\n        text=\"История заказов\"\r\n        to=\"/profile/orders\"\r\n      />\r\n      <SideMenuElementAction\r\n        text=\"Выход\"\r\n        onClick={logout}\r\n      />\r\n    </SideMenu>\r\n  );\r\n};\r\n","// aux.\r\nimport { ProfileRoutes } from '../profile-routes';\r\nimport { ProfilePageMenu } from '../profile-page-menu';\r\n// css\r\nimport styles from './profile-page-desktop.module.css';\r\n\r\n// COMPONENT\r\nexport const ProfilePageDesktop = () => {\r\n  // RENDER\r\n  return (\r\n    <div className={styles['profile-page']}>\r\n      <div className={styles['profile-page__content']}>\r\n\r\n        {/* Profile Side Menu */}\r\n        <ProfilePageMenu />\r\n        {/* Routes */}\r\n        <ProfileRoutes />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// aux.\r\nimport { ProfileRoutes } from '../profile-routes';\r\n// css\r\nimport styles from './profile-page-mobile.module.css';\r\n\r\nexport const ProfilePageMobile = () => {\r\n  // RENDER\r\n  return (\r\n    <div className={styles['profile-page']}>\r\n      <div className={styles['profile-page__content']}>\r\n        <ProfileRoutes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","// store\r\nimport { useAppSelector } from 'store';\r\nimport { commonSelectors } from 'store/common';\r\n// aux.\r\nimport { ProfilePageDesktop } from './profile-page-desktop';\r\nimport { ProfilePageMobile } from './profile-page-mobile';\r\n\r\nconst {\r\n  modeSelector\r\n} = commonSelectors;\r\n\r\nexport const ProfilePage = () => {\r\n  const { mode } = useAppSelector(modeSelector);\r\n\r\n  // RENDER\r\n  return (\r\n    <>\r\n      {/* FOR DESKTOP */}\r\n      { mode === 'desktop' && <ProfilePageDesktop /> }\r\n      {/* FOR MOBILE */}\r\n      { mode === 'mobile' && <ProfilePageMobile /> }\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\n// router\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n// сomponents\r\nimport { ParagraphDigits } from 'components/base';\r\nimport { OrderInfo, AppLoader, AppMessage } from 'components/common';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\nimport { ordersSelectors } from 'store/orders';\r\nimport { commonSelectors } from 'store/common';\r\n// hooks\r\nimport { useIngredientsActions } from 'hooks/ingredients';\r\nimport { useProfileActions } from 'hooks/profile';\r\n// css\r\nimport styles from './profile-order-page.module.css';\r\n\r\n// Get selectors\r\nconst {\r\n  loadingSelector,\r\n  errorTextSelector,\r\n  dataLengthSelector\r\n} = ingredientsSelectors;\r\nconst {\r\n  currentOrderSelector,\r\n  loadingSelector: ordersLoadingSelector,\r\n  errorTextSelector: ordersErrorTextSelector\r\n} = ordersSelectors;\r\nconst {\r\n  modeSelector\r\n} = commonSelectors;\r\n\r\n// COMPONENT\r\nexport const ProfileOrderPage = () => {\r\n  const [preloadCompleted, setPreloadCompleted] = useState<boolean>(false);\r\n\r\n  // Get the current order number from params\r\n  const { orderId } = useParams<{ orderId: string }>();\r\n\r\n  const { fetchIngredients } = useIngredientsActions();\r\n\r\n  // Get the function to fetch an order\r\n  const { fetchOrder } = useProfileActions();\r\n\r\n  const {\r\n    mode\r\n  } = useAppSelector(modeSelector);\r\n\r\n  const { replace } = useHistory();\r\n\r\n  // Get the status of fetching ingredients\r\n  const { dataLength: ingredientsLength } = useAppSelector(dataLengthSelector);\r\n  const { loading: ingredientsLoading } = useAppSelector(loadingSelector);\r\n  const { errorText: ingredientsErrorText } = useAppSelector(errorTextSelector);\r\n\r\n  // Get the status of fetching order\r\n  const { order: currentOrder } = useAppSelector(currentOrderSelector);\r\n  const { loading: ordersLoading } = useAppSelector(ordersLoadingSelector);\r\n  const { errorText: ordersErrorText } = useAppSelector(ordersErrorTextSelector);\r\n\r\n  const preLoadData = async () => {\r\n    if (!orderId) {\r\n      return;\r\n    }\r\n    // load ingredients\r\n    if (ingredientsLength === 0) {\r\n      await fetchIngredients();\r\n    }\r\n    // load order\r\n    await fetchOrder(orderId);\r\n\r\n    setPreloadCompleted(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // In mobile mode\r\n  // open modal window instead page\r\n  useEffect(() => {\r\n    if (!preloadCompleted) {\r\n      return;\r\n    }\r\n    // in mode = 'mobile' we don't show this page.\r\n    if (mode !== 'mobile') {\r\n      return;\r\n    }\r\n    // instead we must open modal window with order\r\n    replace('/profile/orders', { command: 'openOrderModal', orderId });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [preloadCompleted, mode, orderId]);\r\n\r\n  // LOADER\r\n  if (ingredientsLoading || ordersLoading) {\r\n    return <AppLoader />;\r\n  }\r\n\r\n  // RENDER\r\n  if (ingredientsErrorText || ordersErrorText) {\r\n    return <AppMessage message={ingredientsErrorText || ordersErrorText} />;\r\n  }\r\n\r\n  // NO ORDER\r\n  if (!currentOrder) {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['order-page']}>\r\n      <div className={styles['order-page__section-order']}>\r\n\r\n        {/* HEADER */}\r\n        <div className={styles['order-page__header']}>\r\n          <ParagraphDigits\r\n            text={`#${currentOrder.orderNumber}`}\r\n          />\r\n        </div>\r\n\r\n        {/* CONTENT */}\r\n        <OrderInfo\r\n          className={styles['order-page__order']}\r\n          order={currentOrder}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { ReactNode, FormEvent } from 'react';\n// third-party libraries\nimport classNames from 'classnames';\n// components\nimport { Button } from 'components/base';\n// css\nimport styles from './auth-form.module.css';\n\n// PROPS\ninterface AuthFormProps {\n  children: ReactNode;\n  actionText: string;\n  loading?: boolean;\n  valid?: boolean;\n  onSubmit?: () => void;\n  className?: string;\n}\n\n// COMPONENT\nexport const AuthForm = (props: AuthFormProps) => {\n  const {\n    children,\n    actionText,\n    loading = false,\n    valid = true,\n    onSubmit,\n    className\n  } = props;\n\n  // Handles to form submit\n  const onSubmitHandler = (e: FormEvent) => {\n    e.preventDefault();\n    // Ignore submits while loading\n    if (loading) {\n      return;\n    }\n    // Run the submit handler\n    onSubmit && onSubmit();\n  };\n\n  // css\n  const classes = classNames(\n    styles['auth-form'],\n    className\n  );\n\n  // RENDER\n  return (\n    <form\n      className={classes}\n      onSubmit={onSubmitHandler}\n    >\n\n      {/* Content */}\n      {children}\n\n      {/* Button - Submit */}\n      <Button\n        type=\"submit\"\n        text={actionText}\n        loading={loading}\n        disabled={!valid}\n      />\n\n    </form>\n  );\n};\n","import {\n  useState,\n  memo,\n  ChangeEvent\n} from 'react';\n// router\nimport { Redirect, useLocation } from 'react-router-dom';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport { Location } from 'history';\n// hooks\nimport { useAuth } from 'hooks/auth';\nimport { useToasts } from 'hooks/toasts';\n// store\nimport { useAppSelector } from 'store';\nimport { authSelectors } from 'store/auth';\n// components\nimport { Input } from 'components/yandex';\nimport { PasswordInput } from 'components/base';\n// types\nimport { IRejectedValue } from 'store/types';\n// utils\nimport {\n  validateInput,\n  RuleType,\n  ValidationResultType\n} from 'utils/validation';\nimport {\n  required,\n  isEmail,\n  areValidChacters,\n  isPasswordCorrectLength\n} from 'utils/validation/rules';\n// aux.\nimport { AuthForm } from './auth-form';\n\n// Get selectors\nconst { loadingSelector, userSelector } = authSelectors;\n\n// PROPS\ninterface LocationStateInterface {\n  from: Location<LocationStateInterface>\n}\n\n// VALIDATION RULES\nconst emailValidations: RuleType[] = [\n  required('Email'),\n  isEmail('Email')\n];\nconst passwordValidations: RuleType[] = [\n  required('Пароль'),\n  areValidChacters('Пароль'),\n  isPasswordCorrectLength('Пароль', 6, 15)\n];\n\n// PROPS\ninterface LoginFormProps {\n  className?: string;\n}\n\n// COMPONENT\nexport const LoginForm = memo((props: LoginFormProps) => {\n  const { className } = props;\n\n  // Determine where the request came from\n  const location = useLocation<LocationStateInterface>();\n  const from = (location.state && location.state.from.pathname) || '/profile';\n\n  // Email\n  const [email, setEmail] = useState<string>('');\n  // Password\n  const [password, setPassword] = useState<string>('');\n\n  // This states store data:\n  // - if the fields are correct\n  // - the error text\n  const [\n    emailValidationState,\n    setEmailValidationState\n  ] = useState<ValidationResultType>(validateInput(email, emailValidations));\n  const [\n    passwordValidationState,\n    setPasswordValidationState\n  ] = useState<ValidationResultType>(validateInput(password, passwordValidations));\n\n  // This states store the flags whether errors should be displayed or not\n  const [showEmailError, setShowEmailError] = useState<boolean>(false);\n  const [showPasswordError, setShowPasswordError] = useState<boolean>(false);\n\n  // Get auth data and methods\n  const { loginUser } = useAuth();\n  const { loading } = useAppSelector(loadingSelector);\n  const { user: currentUser } = useAppSelector(userSelector);\n\n  // Get functions for notifications\n  const { toastError } = useToasts();\n\n  // EMAIL -> onChange\n  const onChangeEmailHadnler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setEmail(value);\n    // Check the current value of the email\n    setEmailValidationState(validateInput(value, emailValidations));\n    // Hide the text error when users edit the 'Email' field\n    setShowEmailError(false);\n  };\n\n  // PASSWORD -> onChange\n  const onChangePasswordHadnler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setPassword(value);\n    // Check the current value of the email\n    setPasswordValidationState(validateInput(value, passwordValidations));\n    // Hide the text error when users edit the 'Password' field\n    setShowPasswordError(false);\n  };\n\n  // FORM -> onSubmit\n  const onSubmitFormHandler = async () => {\n    // Set the flag to show errors\n    setShowEmailError(true);\n    setShowPasswordError(true);\n\n    // Return if the email isn't correct\n    if (!emailValidationState.valid) {\n      return;\n    }\n    // Return if the email isn't correct\n    if (!passwordValidationState.valid) {\n      return;\n    }\n\n    try {\n      await loginUser({ email, password, name: '' });\n    } catch (err: unknown) {\n      const message = (err as IRejectedValue).error;\n      toastError(message);\n    }\n  };\n\n  // If the current user is authorized in the system,\n  // redirect to the home page\n  if (currentUser) {\n    return <Redirect to={from} />;\n  }\n\n  // RENDER\n  return (\n    <AuthForm\n      className={className}\n      actionText=\"Войти\"\n      loading={loading}\n      onSubmit={onSubmitFormHandler}\n    >\n\n      {/* Email */}\n      <Input\n        name=\"email\"\n        value={email}\n        placeholder=\"Email\"\n        error={showEmailError && !emailValidationState.valid}\n        errorText={emailValidationState.message}\n        onChange={onChangeEmailHadnler}\n      />\n\n      {/* Password */}\n      <PasswordInput\n        name=\"password\"\n        value={password}\n        placeholder=\"Пароль\"\n        error={showPasswordError && !passwordValidationState.valid}\n        errorText={passwordValidationState.message}\n        onChange={onChangePasswordHadnler}\n      />\n\n    </AuthForm>\n  );\n});\n","import {\n  memo,\n  useState,\n  ChangeEvent\n} from 'react';\n// router\nimport { Redirect } from 'react-router-dom';\n// hooks\nimport { useAuth } from 'hooks/auth';\nimport { useToasts } from 'hooks/toasts';\n// store\nimport { useAppSelector } from 'store';\nimport { authSelectors } from 'store/auth';\n// components\nimport { Input } from 'components/yandex';\nimport { PasswordInput } from 'components/base';\n// types\nimport { IRejectedValue } from 'store/types';\n// utils\nimport {\n  validateInput,\n  RuleType,\n  ValidationResultType\n} from 'utils/validation';\nimport {\n  required,\n  isEmail,\n  areValidChacters,\n  isPasswordCorrectLength\n} from 'utils/validation/rules';\n// aux.\nimport { AuthForm } from './auth-form';\n\n// Get selectors\nconst { loadingSelector, userSelector } = authSelectors;\n\n// VALIDATION RULES\nconst nameValidations: RuleType[] = [\n  required('Имя пользователя'),\n];\nconst emailValidations: RuleType[] = [\n  required('Email'),\n  isEmail('Email')\n];\nconst passwordValidations: RuleType[] = [\n  required('Пароль'),\n  areValidChacters('Пароль'),\n  isPasswordCorrectLength('Пароль', 6, 15)\n];\n\n// PROPS\ninterface RegistrationFormProps {\n  className?: string;\n}\n\n// COMPONENT\nexport const RegistrationForm = memo((props: RegistrationFormProps) => {\n  const { className } = props;\n\n  // Name\n  const [username, setUsername] = useState<string>('');\n  // Email\n  const [email, setEmail] = useState<string>('');\n  // Password\n  const [password, setPassword] = useState<string>('');\n\n  // This states store data:\n  // - if the fields are correct\n  // - the error text\n  const [\n    usernameValidationState,\n    setUsernameValidationState\n  ] = useState<ValidationResultType>(validateInput(username, nameValidations));\n  const [\n    emailValidationState,\n    setEmailValidationState\n  ] = useState<ValidationResultType>(validateInput(email, emailValidations));\n  const [\n    passwordValidationState,\n    setPasswordValidationState\n  ] = useState<ValidationResultType>(validateInput(password, passwordValidations));\n\n  // This states store the flags whether errors should be displayed or not\n  const [showUsernameError, setShowUsernameError] = useState<boolean>(false);\n  const [showEmailError, setShowEmailError] = useState<boolean>(false);\n  const [showPasswordError, setShowPasswordError] = useState<boolean>(false);\n\n  // Get the function to register user\n  const { registerUser } = useAuth();\n  const { loading } = useAppSelector(loadingSelector);\n  const { user: currentUser } = useAppSelector(userSelector);\n\n  // Get functions for notifications\n  const { toastError } = useToasts();\n\n  // Checks if data is correct\n  const isValid = (): boolean => {\n    return usernameValidationState.valid\n      && emailValidationState.valid\n      && passwordValidationState.valid;\n  };\n\n  // USERNAME -> onChange\n  const onChangeUsernameHadnler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setUsername(value);\n    // Check the current value of the username\n    setUsernameValidationState(validateInput(value, nameValidations));\n    // Hide the text error when users edit the field\n    setShowUsernameError(false);\n  };\n\n  // EMAIL -> onChange\n  const onChangeEmailHadnler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setEmail(value);\n    // Check the current value of the email\n    setEmailValidationState(validateInput(value, emailValidations));\n    // Hide the text error when users edit the 'Email' field\n    setShowEmailError(false);\n  };\n\n  // PASSWORD -> onChange\n  const onChangePasswordHadnler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setPassword(value);\n    // Check the current value of the email\n    setPasswordValidationState(validateInput(value, passwordValidations));\n    // Hide the text error when users edit the 'Password' field\n    setShowPasswordError(false);\n  };\n\n  // FORM -> onSubmit\n  const onSubmitFormHandler = async () => {\n    // Set the flag to show errors\n    setShowUsernameError(true);\n    setShowEmailError(true);\n    setShowPasswordError(true);\n\n    //\n    if (!isValid()) {\n      return;\n    }\n\n    try {\n      await registerUser({ email, password, name: username });\n    } catch (err: unknown) {\n      const message = (err as IRejectedValue).error;\n      toastError(message);\n    }\n  };\n\n  // If the current user is authorized in the system,\n  // redirect to the profile page\n  if (currentUser) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  // RENDER\n  return (\n    <AuthForm\n      className={className}\n      actionText=\"Зарегистрироваться\"\n      loading={loading}\n      onSubmit={onSubmitFormHandler}\n    >\n\n      {/* UserName */}\n      <Input\n        name=\"username\"\n        value={username}\n        placeholder=\"Имя пользователя\"\n        error={showUsernameError && !usernameValidationState.valid}\n        errorText={usernameValidationState.message}\n        onChange={onChangeUsernameHadnler}\n      />\n\n      {/* Email */}\n      <Input\n        name=\"email\"\n        value={email}\n        placeholder=\"Email\"\n        error={showEmailError && !emailValidationState.valid}\n        errorText={emailValidationState.message}\n        onChange={onChangeEmailHadnler}\n      />\n\n      {/* Passsword */}\n      <PasswordInput\n        name=\"password\"\n        value={password}\n        placeholder=\"Пароль\"\n        error={showPasswordError && !passwordValidationState.valid}\n        errorText={passwordValidationState.message}\n        onChange={onChangePasswordHadnler}\n      />\n\n    </AuthForm>\n  );\n});\n","import {\n  memo,\n  useState,\n  ChangeEvent\n} from 'react';\n// router\nimport { Redirect } from 'react-router-dom';\n// components\nimport { Input } from 'components/yandex';\n// store\nimport { useAppSelector } from 'store';\nimport { authSelectors } from 'store/auth';\n// hooks\nimport { useAuth } from 'hooks/auth';\nimport { useToasts } from 'hooks/toasts';\n// types\nimport { IRejectedValue } from 'store/types';\n// utils\nimport {\n  validateInput,\n  RuleType,\n  ValidationResultType\n} from 'utils/validation';\nimport {\n  required,\n  isEmail\n} from 'utils/validation/rules';\n// aux.\nimport { AuthForm } from './auth-form';\n\n// Get selectors\nconst { loadingSelector } = authSelectors;\n\n// VALIDATION RULES\nconst emailValidations: RuleType[] = [\n  required('Email'),\n  isEmail('Email')\n];\n\n// PROPS\ninterface ForgetPasswordFormProps {\n  className?: string;\n}\n\n// COMPONENT\nexport const ForgetPasswordForm = memo((props: ForgetPasswordFormProps) => {\n  const { className } = props;\n\n  // Email\n  const [email, setEmail] = useState<string>('');\n\n  //\n  const [canRedirectToReset, setCanRedirectToReset] = useState<boolean>(false);\n\n  // This states store data:\n  // - if the fields are correct\n  // - the error text\n  const [\n    emailValidationState,\n    setEmailValidationState\n  ] = useState<ValidationResultType>(validateInput(email, emailValidations));\n\n  // This states store the flags whether errors should be displayed or not\n  const [showEmailError, setShowEmailError] = useState<boolean>(false);\n\n  // Get auth data and methods\n  const { forgetPassword } = useAuth();\n  const { loading } = useAppSelector(loadingSelector);\n\n  // Get functions for notifications\n  const { toastError, toastInformation } = useToasts();\n\n  // EMAIL -> onChange\n  const onChangeEmailHadnler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setEmail(value);\n    // Check the current value of the email\n    setEmailValidationState(validateInput(value, emailValidations));\n    // Hide the text error when users edit the 'Email' field\n    setShowEmailError(false);\n  };\n\n  // FORM -> onSubmit\n  const onSubmitFormHandler = async () => {\n    // Set the flag to show errors\n    setShowEmailError(true);\n\n    // Return if the email isn't correct\n    if (!emailValidationState.valid) {\n      return;\n    }\n\n    try {\n      const result = await forgetPassword(email);\n\n      if (!result) {\n        return;\n      }\n\n      // notify user\n      toastInformation('Дальнейшие инструкции высланы вам на почту');\n\n      setCanRedirectToReset(true);\n    } catch (err: unknown) {\n      const message = (err as IRejectedValue).error;\n      toastError(message);\n    }\n  };\n\n  // If the \"ForgerPassword\" request was successful,\n  // redirect to the next step\n  if (canRedirectToReset) {\n    return (\n      <Redirect to={{\n        pathname: '/reset-password',\n        state: { from: 'forget-password' }\n      }}\n      />\n    );\n  }\n\n  // RENDER\n  return (\n    <AuthForm\n      className={className}\n      actionText=\"Восстановить\"\n      loading={loading}\n      onSubmit={onSubmitFormHandler}\n    >\n\n      {/* Email */}\n      <Input\n        name=\"email\"\n        value={email}\n        placeholder=\"Email\"\n        error={showEmailError && !emailValidationState.valid}\n        errorText={emailValidationState.message}\n        onChange={onChangeEmailHadnler}\n      />\n\n    </AuthForm>\n  );\n});\n","import { useState, memo, ChangeEvent } from 'react';\n// router\nimport { Redirect } from 'react-router-dom';\n// components\nimport { Input } from 'components/yandex';\nimport { PasswordInput } from 'components/base';\n// hooks\nimport { useAuth } from 'hooks/auth';\nimport { useToasts } from 'hooks/toasts';\n// store\nimport { useAppSelector } from 'store';\nimport { authSelectors } from 'store/auth';\n// types\nimport { IRejectedValue } from 'store/types';\n// utils\nimport {\n  validateInput,\n  RuleType,\n  ValidationResultType\n} from 'utils/validation';\nimport {\n  required,\n  areValidChacters,\n  isPasswordCorrectLength\n} from 'utils/validation/rules';\n// aux.\nimport { AuthForm } from './auth-form';\n\n// Get selectors\nconst { loadingSelector } = authSelectors;\n\n// PROPS\n\n// VALIDATION RULES\nconst passwordValidations: RuleType[] = [\n  required('Пароль'),\n  areValidChacters('Пароль'),\n  isPasswordCorrectLength('Пароль', 6, 15)\n];\nconst codeValidations: RuleType[] = [\n  required('Код активации')\n];\n\n// PROPS\ninterface ResetPasswordFormProps {\n  className?: string;\n}\n\n// COMPONENT\nexport const ResetPasswordForm = memo((props: ResetPasswordFormProps) => {\n  const { className } = props;\n\n  // Get auth data and methods\n  const { resetPassword } = useAuth();\n  const { loading } = useAppSelector(loadingSelector);\n\n  // Get functions for notifications\n  const { toastError, toastSuccess } = useToasts();\n\n  // Password\n  const [password, setPassword] = useState<string>('');\n  // Activation Code\n  const [code, setCode] = useState<string>('');\n\n  //\n  const [canRedirectToLogin, setCanRedirectToLogin] = useState<boolean>(false);\n\n  // This states store data:\n  // - if the fields are correct\n  // - the error text\n  const [\n    passwordValidationState,\n    setPasswordValidationState\n  ] = useState<ValidationResultType>(validateInput(password, passwordValidations));\n  const [\n    codeValidationState,\n    setCodeValidationState\n  ] = useState<ValidationResultType>(validateInput(code, codeValidations));\n\n  // This states store the flags whether errors should be displayed or not\n  const [showPasswordError, setShowPasswordError] = useState<boolean>(false);\n  const [showCodeError, setShowCodeError] = useState<boolean>(false);\n\n  // PASSWORD -> onChange\n  const onChangePasswordHadnler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setPassword(value);\n    // Check the current value of the email\n    setPasswordValidationState(validateInput(value, passwordValidations));\n    // Hide the text error when users edit the 'Password' field\n    setShowPasswordError(false);\n  };\n\n  // CODE -> onChange\n  const onChangeEmailHadnler = (e: ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.target;\n    setCode(value);\n    // Check the current value of the email\n    setCodeValidationState(validateInput(value, codeValidations));\n    // Hide the text error when users edit the 'Email' field\n    setShowCodeError(false);\n  };\n\n  // FORM -> onSubmit\n  const onSubmitFormHandler = async () => {\n    // Set the flag to show errors\n    setShowPasswordError(true);\n    setShowCodeError(true);\n\n    // Return if the email isn't correct\n    if (!codeValidationState.valid) {\n      return;\n    }\n    // Return if the email isn't correct\n    if (!passwordValidationState.valid) {\n      return;\n    }\n\n    try {\n      const result = await resetPassword(password, code);\n\n      if (!result) {\n        return;\n      }\n\n      // notify user\n      toastSuccess('Пароль успешно обновлен');\n\n      setCanRedirectToLogin(true);\n    } catch (err: unknown) {\n      const message = (err as IRejectedValue).error;\n      toastError(message);\n    }\n  };\n\n  // If the \"ResetPassword\" request was successful,\n  // redirect to the login page\n  if (canRedirectToLogin) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  // RENDER\n  return (\n    <AuthForm\n      className={className}\n      actionText=\"Сохранить\"\n      loading={loading}\n      onSubmit={onSubmitFormHandler}\n    >\n      {/* Password */}\n      <PasswordInput\n        name=\"password\"\n        value={password}\n        placeholder=\"Введите новый пароль\"\n        error={showPasswordError && !passwordValidationState.valid}\n        errorText={passwordValidationState.message}\n        onChange={onChangePasswordHadnler}\n      />\n\n      {/* Activation Code */}\n      <Input\n        name=\"code\"\n        value={code}\n        placeholder=\"Введите код из письма\"\n        error={showCodeError && !codeValidationState.valid}\n        errorText={codeValidationState.message}\n        onChange={onChangeEmailHadnler}\n      />\n\n    </AuthForm>\n  );\n});\n","import { ReactNode } from 'react';\n// third-party libraries\nimport classNames from 'classnames';\n// css\nimport styles from './link-panel.module.css';\n\n// PROPS\ninterface LinkPanelProps {\n  children: ReactNode;\n  className?: string;\n}\n\n// COMPONENT\nexport const LinkPanel = (props: LinkPanelProps) => {\n  const { children, className } = props;\n\n  // css\n  const classes = classNames(\n    styles['link-panel'],\n    className\n  );\n\n  // RENDER\n  return (\n    <div className={classes}>\n      { children }\n    </div>\n  );\n};\n","// router\nimport { Link } from 'react-router-dom';\n// third-party libraries\nimport classNames from 'classnames';\n// components\nimport { Paragraph } from 'components/base';\n// css\nimport styles from './link-panel.module.css';\n\n// PROPS\ninterface LinkPanelElementProps {\n  question: string;\n  linkText: string;\n  to: string;\n  className?: string;\n}\n\n// COMPONENT\nexport const LinkPanelElement = (props: LinkPanelElementProps) => {\n  const {\n    className = '',\n    question,\n    linkText,\n    to\n  } = props;\n\n  // css\n  const classes = classNames(\n    styles['link-panel__element'],\n    className\n  );\n\n  // RENDER\n  return (\n    <div className={classes}>\n\n      {/* Question */}\n      <Paragraph\n        className={styles['link-panel__question']}\n        text={question}\n      />\n\n      {/* Link */}\n      <Link to={to}>\n        <Paragraph\n          className={styles['link-panel__link']}\n          text={linkText}\n        />\n      </Link>\n\n    </div>\n  );\n};\n","// components\nimport { Paragraph } from 'components/base';\nimport {\n  LoginForm,\n  LinkPanel,\n  LinkPanelElement\n} from 'components/auth';\n// css\nimport styles from '../auth-page.module.css';\n\n// COMPONENT\nexport const LoginPage = () => {\n  return (\n    <div className={styles['auth-page']}>\n      <div className={styles['auth-page__content']}>\n\n        {/* HEADER */}\n        <Paragraph\n          className={styles['auth-page__header']}\n          text=\"Вход\"\n          size=\"large\"\n        />\n\n        {/* FORM */}\n        <LoginForm\n          className={styles['auth-page__form']}\n        />\n\n        {/* LINK PANEL */}\n        <LinkPanel className={styles['auth-page__link-panel']}>\n          <LinkPanelElement\n            question=\"Вы - новый пользователь?\"\n            linkText=\"Зарегистрироваться\"\n            to=\"/register\"\n          />\n          <LinkPanelElement\n            question=\"Забыли пароль?\"\n            linkText=\"Восстановить пароль\"\n            to=\"forgot-password\"\n          />\n        </LinkPanel>\n\n      </div>\n    </div>\n  );\n};\n","// components\nimport { Paragraph } from 'components/base';\nimport {\n  RegistrationForm,\n  LinkPanel,\n  LinkPanelElement\n} from 'components/auth';\n// css\nimport styles from '../auth-page.module.css';\n\n// COMPONENT\nexport const RegistrationPage = () => {\n  return (\n    <div className={styles['auth-page']}>\n      <div className={styles['auth-page__content']}>\n\n        {/* HEADER */}\n        <Paragraph\n          className={styles['auth-page__header']}\n          text=\"Регистрация\"\n          size=\"large\"\n        />\n\n        {/* FORM */}\n        <RegistrationForm\n          className={styles['auth-page__form']}\n        />\n\n        {/* LINK PANEL */}\n        <LinkPanel className={styles['auth-page__link-panel']}>\n          <LinkPanelElement\n            question=\"Уже зарегистрированы?\"\n            linkText=\"Войти\"\n            to=\"/login\"\n          />\n        </LinkPanel>\n\n      </div>\n    </div>\n  );\n};\n","// components\nimport { Paragraph } from 'components/base';\nimport {\n  ForgetPasswordForm,\n  LinkPanel,\n  LinkPanelElement\n} from 'components/auth';\n// css\nimport styles from '../auth-page.module.css';\n\n// COMPONENT\nexport const ForgotPasswordPage = () => {\n  return (\n    <div className={styles['auth-page']}>\n      <div className={styles['auth-page__content']}>\n\n        {/* HEADER */}\n        <Paragraph\n          className={styles['auth-page__header']}\n          text=\"Восстановление пароля\"\n          size=\"large\"\n        />\n\n        {/* FORM */}\n        <ForgetPasswordForm\n          className={styles['auth-page__form']}\n        />\n\n        {/* LINK PANEL */}\n        <LinkPanel className={styles['auth-page__link-panel']}>\n          <LinkPanelElement\n            question=\"Вспомнили пароль?\"\n            linkText=\"Войти\"\n            to=\"/login\"\n          />\n        </LinkPanel>\n\n      </div>\n    </div>\n  );\n};\n","// router\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n// components\nimport { Paragraph } from 'components/base';\nimport {\n  ResetPasswordForm,\n  LinkPanel,\n  LinkPanelElement\n} from 'components/auth';\n// css\nimport styles from '../auth-page.module.css';\n\ninterface LocationStateInterface {\n  from: string\n}\n\n// COMPONENT\nexport const ResetPasswordPage = () => {\n  // Get information about how an user get this page\n  const { action } = useHistory();\n  const location = useLocation<LocationStateInterface>();\n  const from = (location.state && location.state.from) || '';\n\n  if (action === 'POP' || from !== 'forget-password') {\n    return <Redirect to=\"/login\" />;\n  }\n\n  // RENDER\n  return (\n    <div className={styles['auth-page']}>\n      <div className={styles['auth-page__content']}>\n\n        {/* HEADER */}\n        <Paragraph\n          className={styles['auth-page__header']}\n          text=\"Восстановление пароля\"\n          size=\"large\"\n        />\n\n        {/* FORM */}\n        <ResetPasswordForm\n          className={styles['auth-page__form']}\n        />\n\n        {/* LINK PANEL */}\n        <LinkPanel className={styles['auth-page__link-panel']}>\n          <LinkPanelElement\n            question=\"Вспомнили пароль?\"\n            linkText=\"Войти\"\n            to=\"/login\"\n          />\n        </LinkPanel>\n\n      </div>\n    </div>\n  );\n};\n","import { useEffect, memo, useState } from 'react';\r\n// router\r\nimport { useParams, useHistory } from 'react-router-dom';\r\n// components\r\nimport { Paragraph } from 'components/base';\r\nimport { IngredientDetails, AppLoader, AppMessage } from 'components/common';\r\n// hooks\r\nimport { useIngredientsActions } from 'hooks/ingredients';\r\n// store\r\nimport { useAppSelector } from 'store';\r\nimport { ingredientsSelectors } from 'store/ingredients';\r\nimport { commonSelectors } from 'store/common';\r\n// css\r\nimport styles from './ingredient-page.module.css';\r\n\r\n// Get selectors\r\nconst {\r\n  ingredientByIdSelector,\r\n  loadingSelector,\r\n  errorTextSelector,\r\n  dataLengthSelector\r\n} = ingredientsSelectors;\r\nconst {\r\n  modeSelector\r\n} = commonSelectors;\r\n\r\n// COMPONENT\r\nexport const IngredientPage = memo(() => {\r\n  // Get method to fetch ingredients\r\n  const { fetchIngredients } = useIngredientsActions();\r\n\r\n  const [preloadCompleted, setPreloadCompleted] = useState<boolean>(false);\r\n\r\n  const {\r\n    mode\r\n  } = useAppSelector(modeSelector);\r\n\r\n  const { replace } = useHistory();\r\n\r\n  // Get the ingredient id from the url\r\n  const { ingredientId } = useParams<{ ingredientId: string }>();\r\n\r\n  // Get the ingredient by id\r\n  const { ingredient } = useAppSelector(ingredientByIdSelector(ingredientId));\r\n\r\n  // Get the status of ingredients loading\r\n  const { dataLength: ingredientsLength } = useAppSelector(dataLengthSelector);\r\n  const { loading: ingredientsLoading } = useAppSelector(loadingSelector);\r\n  const { errorText: ingredientsErrorText } = useAppSelector(errorTextSelector);\r\n\r\n  // Method to load all the data before rendering the component\r\n  const preLoadData = async () => {\r\n    // load ingredients\r\n    if (ingredientsLength === 0) {\r\n      await fetchIngredients();\r\n    }\r\n    //\r\n    setPreloadCompleted(true);\r\n  };\r\n\r\n  useEffect(() => {\r\n    preLoadData();\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // In mobile mode\r\n  // open modal window instead page\r\n  useEffect(() => {\r\n    if (!preloadCompleted) {\r\n      return;\r\n    }\r\n    // in mode = 'mobile' we don't show this page.\r\n    if (mode !== 'mobile') {\r\n      return;\r\n    }\r\n    // instead we must open modal window with ingredient\r\n    replace('/', { command: 'openIngredientModal', ingredientId });\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [preloadCompleted, mode, ingredientId]);\r\n\r\n  // LOADER\r\n  if (ingredientsLoading) {\r\n    return <AppLoader />;\r\n  }\r\n\r\n  // ERROR\r\n  if (ingredientsErrorText) {\r\n    return <AppMessage message={ingredientsErrorText} />;\r\n  }\r\n\r\n  // NO DATA\r\n  if (!ingredient) {\r\n    return null;\r\n  }\r\n\r\n  // RENDER\r\n  return (\r\n    <div className={styles['ingredient-page']}>\r\n      <div className={styles['ingredient-page__section-ingredient']}>\r\n\r\n        {/* HEADER */}\r\n        <Paragraph\r\n          className={styles['ingredient-page__header']}\r\n          size=\"large\"\r\n          text=\"Детали ингредиента\"\r\n        />\r\n\r\n        {/* INGREDIENT */}\r\n        <IngredientDetails\r\n          ingredient={ingredient}\r\n        />\r\n\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","/* eslint-disable */\r\n\r\n// components\r\nimport { Container, NotFound } from 'components/base';\r\n// css\r\nimport styles from './not-found-page.module.css';\r\n\r\n// COMPONENT\r\nexport const NotFoundPage = () => {\r\n  // RENDER\r\n  return (\r\n    <main id=\"not-found\">\r\n      <Container>\r\n        {/* <div className={styles['not-found__inner']}>\r\n          <NotFound />\r\n        </div> */}\r\n      </Container>\r\n    </main>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\n// router\r\nimport {\r\n  Route,\r\n  Switch,\r\n  useLocation,\r\n  useHistory\r\n} from 'react-router-dom';\r\n// eslint-disable-next-line import/no-extraneous-dependencies\r\nimport { Location } from 'history';\r\n// third-party libraries\r\nimport { v4 as uuid } from 'uuid';\r\n// pages\r\nimport {\r\n  HomePage,\r\n  IngredientPage,\r\n  FeedPage,\r\n  OrderPage,\r\n  ProfilePage,\r\n\r\n  LoginPage,\r\n  RegistrationPage,\r\n  ForgotPasswordPage,\r\n  ResetPasswordPage,\r\n\r\n  NotFoundPage\r\n} from 'pages';\r\n// components\r\nimport { IngredientDetailsModal, OrderModal } from 'components/modals';\r\nimport { NotForLoggedInRoute } from 'components/common/routes';\r\n\r\ninterface LocationStateInterface {\r\n  background: Location<LocationStateInterface>\r\n}\r\n\r\n// ROUTES\r\nexport const Routes = () => {\r\n  //\r\n  const [idLoginPage] = useState<string>(uuid());\r\n  const [idRegisterPage] = useState<string>(uuid());\r\n  const [idForgetPasswordPage] = useState<string>(uuid());\r\n\r\n  // Get the current location\r\n  const location = useLocation<LocationStateInterface>();\r\n  // Determine the action type\r\n  const history = useHistory();\r\n  let background;\r\n  if (history.action !== 'POP') {\r\n    // Try to get the previous location\r\n    background = location.state && location.state.background;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Switch location={background || location}>\r\n        {/* HOME */}\r\n        <Route path=\"/\" exact>\r\n          <HomePage />\r\n        </Route>\r\n\r\n        {/* Ingredient Details */}\r\n        <Route path=\"/ingredients/:ingredientId\" exact>\r\n          <IngredientPage />\r\n        </Route>\r\n\r\n        {/* FEED */}\r\n        <Route path=\"/feed\" exact>\r\n          <FeedPage />\r\n        </Route>\r\n        {/* FEED ORDER */}\r\n        <Route path=\"/feed/:orderId\" exact>\r\n          <OrderPage />\r\n        </Route>\r\n\r\n        {/* PROFILE */}\r\n        <Route path=\"/profile\">\r\n          <ProfilePage />\r\n        </Route>\r\n\r\n        {/* LOGIN */}\r\n        <NotForLoggedInRoute\r\n          key={idLoginPage}\r\n          path=\"/login\"\r\n          exact\r\n        >\r\n          <LoginPage />\r\n        </NotForLoggedInRoute>\r\n        {/* REGISTER */}\r\n        <NotForLoggedInRoute\r\n          key={idRegisterPage}\r\n          path=\"/register\"\r\n          exact\r\n        >\r\n          <RegistrationPage />\r\n        </NotForLoggedInRoute>\r\n        {/* FORGET PASSWORD */}\r\n        <NotForLoggedInRoute\r\n          key={idForgetPasswordPage}\r\n          path=\"/forgot-password\"\r\n          exact\r\n        >\r\n          <ForgotPasswordPage />\r\n        </NotForLoggedInRoute>\r\n        {/* -> RESET PASSWORD */}\r\n        <Route\r\n          path=\"/reset-password\"\r\n          exact\r\n        >\r\n          <ResetPasswordPage />\r\n        </Route>\r\n\r\n        {/* NOT FOUND */}\r\n        <Route>\r\n          <NotFoundPage />\r\n        </Route>\r\n\r\n      </Switch>\r\n\r\n      {/* Modal window for \"IngredientDetails\" */}\r\n      { background && (\r\n        <Route\r\n          path=\"/ingredients/:ingredientId\"\r\n        >\r\n          <IngredientDetailsModal />\r\n        </Route>\r\n      ) }\r\n\r\n      {/* Modal window for \"FeedOrder\" */}\r\n      { background && (\r\n        <Route\r\n          path=\"/feed/:orderId\"\r\n        >\r\n          <OrderModal mode=\"feed\" />\r\n        </Route>\r\n      ) }\r\n    </>\r\n  );\r\n};\r\n","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\n// redux\nimport { Provider } from 'react-redux';\n// router\nimport { BrowserRouter as Router } from 'react-router-dom';\n// components\nimport { Preloader } from 'components/common';\nimport { ToastsContainer } from 'components/toasts';\nimport {\n  MainLayout,\n  MobileLayout\n} from 'layouts';\n// store\nimport { store } from 'store';\n// routes\nimport { Routes } from 'routes';\n// hooks\nimport { useWindowSize } from 'hooks/common';\n// css\nimport './index.css';\n// yandex css\nimport '@ya.praktikum/react-developer-burger-ui-components/dist/ui/fonts/fonts.css';\nimport '@ya.praktikum/react-developer-burger-ui-components/dist/ui/common.css';\nimport '@ya.praktikum/react-developer-burger-ui-components/dist/ui/box.css';\n\nconst App = (): JSX.Element => {\n  useWindowSize();\n\n  // RENDER\n  return (\n    <Preloader>\n      <ToastsContainer />\n\n      <MainLayout>\n        <Routes />\n      </MainLayout>\n\n      <MobileLayout>\n        <Routes />\n      </MobileLayout>\n\n    </Preloader>\n  );\n};\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);\n","import { useEffect } from 'react';\r\n// store\r\nimport { useAppDispatch } from 'store';\r\nimport { setModeAction } from 'store/common';\r\n\r\n// HOOK\r\nexport const useWindowSize = () => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      //\r\n      if (window.innerWidth >= 1200) {\r\n        dispatch(setModeAction({ mode: 'desktop' }));\r\n      } else {\r\n        dispatch(setModeAction({ mode: 'mobile' }));\r\n      }\r\n    }\r\n    // Add event listener\r\n    window.addEventListener('resize', handleResize);\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []); // Empty array ensures that effect is only run on mount\r\n};\r\n"],"sourceRoot":""}